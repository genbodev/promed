(function() {	/**	 * @param {Object} editor	 * @param {String} command	The command name which indicate what the current command is.	 */	function swfreedocmarkersDialog( editor, command ) {		function load_tagsrepl_combo(dialog,event)		{			Ext.Ajax.request({				url: '/?c=FreeDocument&m=getFreeDocumentMarkerList',				callback: function(opt, success, response) {					if (success && response.responseText != '') {						var response_obj = Ext.util.JSON.decode(response.responseText);						var freedocmarkers_combo = dialog.getContentElement('freedocmarkers_tab1','freedocmarkers_combo');						for(i = 0; i < response_obj.length; i++ ) {							freedocmarkers_combo.add(response_obj[i].name + ' (' + response_obj[i].description + ')', '@#@' + response_obj[i].name);						}					}				},				params: {					EvnClass_id: editor.getFDMEvnClass()				}			});		}		var title = 'Вставить маркер';				var dialog = {			title : title,			minWidth : 400,			minHeight : 200,			onLoad : function() {				load_tagsrepl_combo(this,'EvnVizitPL');			},			onShow : function() {},			onOk: function() {				var tagreplacement = this.getContentElement('freedocmarkers_tab1','freedocmarkers_combo').getInputElement().getValue();				if (command == 'add') {					this._.editor.insertHtml(tagreplacement);				}			},			onHide : function() {},			contents : [{				id : 'freedocmarkers_tab1',				label : 'Выбор маркера',				title : 'Выбор маркера',				expand:true,				padding:0,				elements : [{					type:'vbox',padding:1,children:[{						type:'select',						id:'freedocmarkers_combo',						style:'width: 100%;',						label:'Выберите маркер',						'default': '',						items:						[							[editor.lang.common.notSet , '']						]					}]				}]			}]		};		return dialog;	}	CKEDITOR.dialog.add('swfreedocmarkers_add', function(editor) {		return swfreedocmarkersDialog(editor,'add');	});})();