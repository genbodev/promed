openapi: 3.0.0
info:
  title: SwServiceLis
  version: '1.0'
paths:
  /api/Analyzer:
    get:
      tags:
        - Analyzer
      summary: 'Получение данных анализатора'
      operationId: 'Analyzer::index_get'
      parameters:
        -
          name: Analyzer_id
          in: query
          description: 'Идентификатор анализатора'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - Analyzer
      summary: 'Сохранение данных анализатора'
      operationId: 'Analyzer::index_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - Analyzer_Name
                - Analyzer_Code
                - Analyzer_begDT
              properties:
                Analyzer_id:
                  description: 'Идентификатор анализатора'
                  type: integer
                Analyzer_Name:
                  description: 'Наименование анализатора'
                  type: string
                Analyzer_Code:
                  description: 'Код анализатора'
                  type: string
                AnalyzerModel_id:
                  description: 'Идентификатор модели анализатора'
                  type: integer
                MedService_id:
                  description: 'Идентификатор службы'
                  type: integer
                equipment_id:
                  description: 'Идентификатор анализатора ЛИС'
                  type: integer
                Test_JSON:
                  description: 'Тесты анализатора ЛИС'
                  type: string
                Analyzer_begDT:
                  description: 'Дата открытия'
                  type: string
                  format: date
                Analyzer_endDT:
                  description: 'Дата закрытия'
                  type: string
                  format: date
                Analyzer_LisClientId:
                  description: ClientId
                  type: string
                Analyzer_LisCompany:
                  description: 'Наименование МО'
                  type: string
                Analyzer_LisLab:
                  description: 'Наименование лаборатории'
                  type: string
                Analyzer_LisMachine:
                  description: 'Название машины в ЛИС'
                  type: string
                Analyzer_LisLogin:
                  description: 'Логин в ЛИС'
                  type: string
                Analyzer_LisPassword:
                  description: Пароль
                  type: string
                Analyzer_LisNote:
                  description: Примечание
                  type: string
                Analyzer_2wayComm:
                  description: 'Использование двусторонней связи'
                  type: integer
                Analyzer_IsUseAutoReg:
                  description: 'Использование автоматического учета'
                  type: integer
                Analyzer_IsNotActive:
                  description: Неактивный
                  type: integer
                Analyzer_IsAutoOk:
                  description: Автоодобрение
                  type: integer
                Analyzer_IsAutoGood:
                  description: 'Автоодобрение без патологий'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - Analyzer
      summary: 'Удаление данных анализатора'
      operationId: 'Analyzer::index_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - Analyzer_id
              properties:
                Analyzer_id:
                  description: 'Идентификатор анализатора'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Analyzer/list:
    get:
      tags:
        - Analyzer
      summary: 'Получение списка анализаторов'
      operationId: 'Analyzer::list_get'
      parameters:
        -
          name: Analyzer_id
          in: query
          description: 'Идентификатор анализатора'
          schema:
            type: integer
            format: int64
        -
          name: Analyzer_Name
          in: query
          description: 'Наименование анализатора'
          schema:
            type: string
        -
          name: Analyzer_Code
          in: query
          description: 'Код анализатора'
          schema:
            type: string
        -
          name: AnalyzerModel_id
          in: query
          description: 'Идентификатор модели анализатора'
          schema:
            type: integer
            format: int64
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          schema:
            type: integer
            format: int64
        -
          name: Analyzer_begDT
          in: query
          description: 'Дата открытия'
          schema:
            type: string
            format: date
        -
          name: Analyzer_endDT
          in: query
          description: 'Дата закрытия'
          schema:
            type: string
            format: date
        -
          name: Analyzer_LisClientId
          in: query
          description: ClientId
          schema:
            type: string
        -
          name: Analyzer_LisCompany
          in: query
          description: 'Наименование МО'
          schema:
            type: string
        -
          name: Analyzer_LisLab
          in: query
          description: 'Наименование лаборатории'
          schema:
            type: string
        -
          name: Analyzer_LisMachine
          in: query
          description: 'Название машины в ЛИС'
          schema:
            type: string
        -
          name: Analyzer_LisLogin
          in: query
          description: 'Логин в ЛИС'
          schema:
            type: string
        -
          name: Analyzer_LisPassword
          in: query
          description: Пароль
          schema:
            type: string
        -
          name: Analyzer_LisNote
          in: query
          description: Примечание
          schema:
            type: string
        -
          name: Analyzer_2wayComm
          in: query
          description: 'Использование двусторонней связи'
          schema:
            type: integer
        -
          name: Analyzer_IsUseAutoReg
          in: query
          description: 'Использование автоматического учета'
          schema:
            type: integer
        -
          name: Analyzer_IsNotActive
          in: query
          description: 'Признак неактивности'
          schema:
            type: integer
        -
          name: Analyzer_IsAutoOk
          in: query
          description: Автоодобрение
          schema:
            type: integer
        -
          name: Analyzer_IsAutoGood
          in: query
          description: 'Автоодобрение без патологий'
          schema:
            type: integer
        -
          name: EvnLabSample_id
          in: query
          description: 'Идентификатор пробы'
          schema:
            type: integer
            format: int64
        -
          name: EvnLabSamples
          in: query
          description: 'Список идентификаторов проб'
          schema:
            type: string
        -
          name: hideRuchMetodiki
          in: query
          description: 'Скрыть ручные методики'
          schema:
            type: integer
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Analyzer/RequestCount:
    get:
      tags:
        - Analyzer
      summary: 'Проверка количества заявок для апдейта при изменении неактивности'
      operationId: 'Analyzer::RequestCount_get'
      parameters:
        -
          name: Analyzer_id
          in: query
          description: 'Идентификатор анализатора'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Analyzer/UslugaFromModel:
    post:
      tags:
        - Analyzer
      summary: 'Сохранение услуги на экземпляре анализатора'
      operationId: 'Analyzer::UslugaFromModel_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - Analyzer_id
                - AnalyzerModel_id
                - UslugaComplex_id
              properties:
                Analyzer_id:
                  description: 'Идентификатор анализатора'
                  type: integer
                AnalyzerTest_pid:
                  description: 'Идентификатор исследования'
                  type: integer
                MedService_id:
                  description: 'Идентификатор службы'
                  type: integer
                AnalyzerModel_id:
                  description: 'Идентификатор модели анализатора'
                  type: integer
                UslugaComplex_id:
                  description: 'Идентификатор услуги'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Analyzer/UslugaComplexMedServiceFromTest:
    post:
      tags:
        - Analyzer
      summary: 'Добавление услуги в состав на службу'
      operationId: 'Analyzer::UslugaComplexMedServiceFromTest_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - UslugaComplexMedService_pid
                - test_id
              properties:
                UslugaComplexMedService_pid:
                  description: 'Идентификатор родительской услуги на службе'
                  type: integer
                test_id:
                  description: 'Идентификатор теста'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Analyzer/Code/generate:
    get:
      tags:
        - Analyzer
      summary: 'Генерирует код анализатора'
      operationId: 'Analyzer::genCode_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Analyzer/saveRecord:
    post:
      tags:
        - Analyzer
      summary: 'Альтернативное сохранение без проверки на повтор'
      operationId: 'Analyzer::saveRecord_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - Analyzer_Name
                - Analyzer_Code
                - Analyzer_begDT
              properties:
                Analyzer_id:
                  description: 'Идентификатор анализатора'
                  type: integer
                Analyzer_Name:
                  description: 'Наименование анализатора'
                  type: string
                Analyzer_Code:
                  description: 'Код анализатора'
                  type: string
                AnalyzerModel_id:
                  description: 'Идентификатор модели анализатора'
                  type: integer
                MedService_id:
                  description: 'Идентификатор службы'
                  type: integer
                equipment_id:
                  description: 'Идентификатор анализатора ЛИС'
                  type: integer
                Test_JSON:
                  description: 'Тесты анализатора ЛИС'
                  type: string
                Analyzer_begDT:
                  description: 'Дата открытия'
                  type: string
                  format: date
                Analyzer_endDT:
                  description: 'Дата закрытия'
                  type: string
                  format: date
                Analyzer_LisClientId:
                  description: ClientId
                  type: string
                Analyzer_LisCompany:
                  description: 'Наименование МО'
                  type: string
                Analyzer_LisLab:
                  description: 'Наименование лаборатории'
                  type: string
                Analyzer_LisMachine:
                  description: 'Название машины в ЛИС'
                  type: string
                Analyzer_LisLogin:
                  description: 'Логин в ЛИС'
                  type: string
                Analyzer_LisPassword:
                  description: Пароль
                  type: string
                Analyzer_LisNote:
                  description: Примечание
                  type: string
                Analyzer_2wayComm:
                  description: 'Использование двусторонней связи'
                  type: integer
                Analyzer_IsUseAutoReg:
                  description: 'Использование автоматического учета'
                  type: integer
                Analyzer_IsNotActive:
                  description: Неактивный
                  type: integer
                Analyzer_IsAutoOk:
                  description: Автоодобрение
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerControlSeries:
    get:
      tags:
        - AnalyzerControlSeries
      summary: 'Получение данных'
      operationId: 'AnalyzerControlSeries::index_get'
      parameters:
        -
          name: AnalyzerControlSeries_id
          in: query
          description: Идентификатор
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    put:
      tags:
        - AnalyzerControlSeries
      summary: Изменение
      operationId: 'AnalyzerControlSeries::index_put'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerControlSeries_id
                - AnalyzerControlSeries_regDT
                - AnalyzerControlSeries_Value
                - AnalyzerControlSeries_IsControlPassed
                - MedService_id
                - MedPersonal_id
              properties:
                AnalyzerControlSeries_id:
                  description: Идентификатор
                  type: integer
                AnalyzerTest_id:
                  description: 'Идентификатор теста'
                  type: integer
                AnalyzerControlSeries_regDT:
                  description: 'Дата регистрации результата'
                  type: string
                  format: date
                AnalyzerControlSeries_Value:
                  description: Результат
                  type: string
                AnalyzerControlSeries_IsControlPassed:
                  description: 'Признак прохождения контроля'
                  type: integer
                AnalyzerControlSeries_Comment:
                  description: Примечание
                  type: string
                MedService_id:
                  description: 'Идентификатор службы'
                  type: integer
                MedPersonal_id:
                  description: 'Идентификатор сотрудника'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - AnalyzerControlSeries
      summary: Создание
      operationId: 'AnalyzerControlSeries::index_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerControlSeries_regDT
                - AnalyzerControlSeries_Value
                - AnalyzerControlSeries_IsControlPassed
                - MedService_id
                - MedPersonal_id
              properties:
                AnalyzerTest_id:
                  description: 'Идентификатор теста'
                  type: integer
                AnalyzerControlSeries_regDT:
                  description: 'Дата регистрации результата'
                  type: string
                  format: date
                AnalyzerControlSeries_Value:
                  description: Результат
                  type: string
                AnalyzerControlSeries_IsControlPassed:
                  description: 'Признак прохождения контроля'
                  type: integer
                AnalyzerControlSeries_Comment:
                  description: Примечание
                  type: string
                MedService_id:
                  description: 'Идентификатор службы'
                  type: integer
                MedPersonal_id:
                  description: 'Идентификатор сотрудника'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - AnalyzerControlSeries
      summary: Удаление
      operationId: 'AnalyzerControlSeries::index_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerControlSeries_id
              properties:
                AnalyzerControlSeries_id:
                  description: Идентификатор
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerControlSeries/list:
    get:
      tags:
        - AnalyzerControlSeries
      summary: 'Получение списка'
      operationId: 'AnalyzerControlSeries::list_get'
      parameters:
        -
          name: AnalyzerTest_id
          in: query
          description: 'Идентификатор теста'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerControlSeries_regDateRange
          in: query
          description: Период
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerModel:
    get:
      tags:
        - AnalyzerModel
      summary: 'Получение данных'
      operationId: 'AnalyzerModel::index_get'
      parameters:
        -
          name: AnalyzerModel_id
          in: query
          description: 'Идентификатор модели анализатора'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    put:
      tags:
        - AnalyzerModel
      summary: Изменение
      operationId: 'AnalyzerModel::index_put'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerModel_id
                - AnalyzerModel_Name
                - AnalyzerModel_SysNick
                - AnalyzerInteractionType_id
                - AnalyzerModel_IsScaner
                - AnalyzerWorksheetInteractionType_id
              properties:
                AnalyzerModel_id:
                  description: 'Идентификатор анализатора'
                  type: integer
                AnalyzerModel_Name:
                  description: 'Наименование анализатора'
                  type: string
                AnalyzerModel_SysNick:
                  description: 'Системное наименование анализатора'
                  type: string
                AnalyzerClass_id:
                  description: 'Идентификатор класса анализатора'
                  type: integer
                AnalyzerInteractionType_id:
                  description: 'Идентификатор типа взаимодействия'
                  type: integer
                AnalyzerModel_IsScaner:
                  description: 'Наличие сканера'
                  type: integer
                AnalyzerWorksheetInteractionType_id:
                  description: 'Идентификатор типа взаимодействия с рабочими списками'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - AnalyzerModel
      summary: Создание
      operationId: 'AnalyzerModel::index_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerModel_Name
                - AnalyzerModel_SysNick
                - AnalyzerInteractionType_id
                - AnalyzerModel_IsScaner
                - AnalyzerWorksheetInteractionType_id
              properties:
                AnalyzerModel_Name:
                  description: 'Наименование анализатора'
                  type: string
                AnalyzerModel_SysNick:
                  description: 'Системное наименование анализатора'
                  type: string
                AnalyzerClass_id:
                  description: 'Идентификатор класса анализатора'
                  type: integer
                AnalyzerInteractionType_id:
                  description: 'Идентификатор типа взаимодействия'
                  type: integer
                AnalyzerModel_IsScaner:
                  description: 'Наличие сканера'
                  type: integer
                AnalyzerWorksheetInteractionType_id:
                  description: 'Идентификатор типа взаимодействия с рабочими списками'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - AnalyzerModel
      summary: Удаление
      operationId: 'AnalyzerModel::index_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerModel_id
              properties:
                AnalyzerModel_id:
                  description: 'Идентификатор анализатора'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerModel/list:
    get:
      tags:
        - AnalyzerModel
      summary: 'Получение списка'
      operationId: 'AnalyzerModel::list_get'
      parameters:
        -
          name: AnalyzerModel_id
          in: query
          description: 'Идентификатор модели анализатора'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerModel_Name
          in: query
          description: 'Наименование модели анализатора'
          schema:
            type: string
        -
          name: AnalyzerModel_SysNick
          in: query
          description: 'Системное наименование модели анализатора'
          schema:
            type: string
        -
          name: AnalyzerClass_id
          in: query
          description: 'Идентификатор модели анализатора'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerInteractionType_id
          in: query
          description: 'Идентификатор типа взаимодействия'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerModel_IsScaner
          in: query
          description: 'Наличие сканера'
          schema:
            type: integer
        -
          name: AnalyzerWorksheetInteractionType_id
          in: query
          description: 'Идентификатор типа взаимодействия с рабочими списками'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerRack:
    get:
      tags:
        - AnalyzerRack
      summary: 'Получение данных'
      operationId: 'AnalyzerRack::index_get'
      parameters:
        -
          name: AnalyzerRack_id
          in: query
          description: 'Идентификатор штатива'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    put:
      tags:
        - AnalyzerRack
      summary: Изменение
      operationId: 'AnalyzerRack::index_put'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerRack_id
                - AnalyzerModel_id
                - AnalyzerRack_DimensionX
                - AnalyzerRack_DimensionY
                - AnalyzerRack_IsDefault
              properties:
                AnalyzerRack_id:
                  description: 'Идентификатор штатива'
                  type: integer
                AnalyzerModel_id:
                  description: 'Идентификатор модели анализатора'
                  type: integer
                AnalyzerRack_DimensionX:
                  description: 'Размерность по X'
                  type: number
                AnalyzerRack_DimensionY:
                  description: 'Размерность по Н'
                  type: number
                AnalyzerRack_IsDefault:
                  description: 'По умолчанию'
                  type: integer
                AnalyzerRack_Deleted:
                  description: 'Признак удаления'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - AnalyzerRack
      summary: Создание
      operationId: 'AnalyzerRack::index_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerModel_id
                - AnalyzerRack_DimensionX
                - AnalyzerRack_DimensionY
                - AnalyzerRack_IsDefault
              properties:
                AnalyzerModel_id:
                  description: 'Идентификатор модели анализатора'
                  type: integer
                AnalyzerRack_DimensionX:
                  description: 'Размерность по X'
                  type: number
                AnalyzerRack_DimensionY:
                  description: 'Размерность по Н'
                  type: number
                AnalyzerRack_IsDefault:
                  description: 'По умолчанию'
                  type: integer
                AnalyzerRack_Deleted:
                  description: 'Признак удаления'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - AnalyzerRack
      summary: Удаление
      operationId: 'AnalyzerRack::index_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerRack_id
              properties:
                AnalyzerRack_id:
                  description: 'Идентификатор штатива'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerRack/list:
    get:
      tags:
        - AnalyzerRack
      summary: 'Получение списка'
      operationId: 'AnalyzerRack::list_get'
      parameters:
        -
          name: AnalyzerRack_id
          in: query
          description: 'Идентификатор штатива'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerModel_id
          in: query
          description: 'Идентификатор модели анализатора'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerRack_DimensionX
          in: query
          description: 'Размерность по Х'
          schema:
            type: number
        -
          name: AnalyzerRack_DimensionY
          in: query
          description: 'Размерность по Y'
          schema:
            type: number
        -
          name: AnalyzerRack_IsDefault
          in: query
          description: 'По умолчанию'
          schema:
            type: integer
        -
          name: AnalyzerRack_Deleted
          in: query
          description: 'Признак удаления'
          schema:
            type: integer
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTest:
    get:
      tags:
        - AnalyzerTest
      summary: 'Получение данных'
      operationId: 'AnalyzerTest::index_get'
      parameters:
        -
          name: AnalyzerTest_id
          in: query
          description: 'Идентификатор теста'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    put:
      tags:
        - AnalyzerTest
      summary: Изменение
      operationId: 'AnalyzerTest::index_put'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerTest_id
                - AnalyzerTest_isTest
              properties:
                AnalyzerTest_id:
                  description: 'Идентификатор теста'
                  type: integer
                AnalyzerTest_Name:
                  description: Наименование
                  type: string
                AnalyzerTest_SysNick:
                  description: Мнемоника
                  type: string
                AnalyzerTest_pid:
                  description: 'Идентификатор родительского теста'
                  type: integer
                AnalyzerModel_id:
                  description: 'Идентификатор модели анализатора'
                  type: integer
                Analyzer_id:
                  description: 'Идентификатор анализатора'
                  type: integer
                AnalyzerTest_isTest:
                  description: 'Признак теста'
                  type: integer
                UslugaComplex_id:
                  description: 'Идентификатор услуги'
                  type: integer
                postUslugaComplex_id:
                  description: 'Идентификатор услуги'
                  type: integer
                UslugaComplexMedService_id:
                  description: 'Идентификатор связи услуги со службой'
                  type: integer
                AnalyzerTest_begDT:
                  description: 'Дата начала'
                  type: string
                  format: date
                AnalyzerTest_endDT:
                  description: 'Дата окончания'
                  type: string
                  format: date
                AnalyzerTest_SortCode:
                  description: Приоритет
                  type: integer
                AnalyzerTestType_id:
                  description: 'Идентификатор типа теста'
                  type: integer
                Unit_id:
                  description: 'Идентификатор единицы измерения'
                  type: integer
                ReagentNormRate_id:
                  description: 'Идентификатор записи расхода реактива'
                  type: integer
                UslugaComplex_Code:
                  description: 'Код услуги'
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - AnalyzerTest
      summary: Создание
      operationId: 'AnalyzerTest::index_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerTest_isTest
              properties:
                AnalyzerTest_Name:
                  description: Наименование
                  type: string
                AnalyzerTest_SysNick:
                  description: Мнемоника
                  type: string
                AnalyzerTest_pid:
                  description: 'Идентификатор родительского теста'
                  type: integer
                AnalyzerModel_id:
                  description: 'Идентификатор модели анализатора'
                  type: integer
                Analyzer_id:
                  description: 'Идентификатор анализатора'
                  type: integer
                AnalyzerTest_isTest:
                  description: 'Признак теста'
                  type: integer
                UslugaComplex_id:
                  description: 'Идентификатор услуги'
                  type: integer
                postUslugaComplex_id:
                  description: 'Идентификатор услуги'
                  type: integer
                UslugaComplexMedService_id:
                  description: 'Идентификатор связи услуги со службой'
                  type: integer
                AnalyzerTest_begDT:
                  description: 'Дата начала'
                  type: string
                  format: date
                AnalyzerTest_endDT:
                  description: 'Дата окончания'
                  type: string
                  format: date
                AnalyzerTest_SortCode:
                  description: Приоритет
                  type: integer
                AnalyzerTestType_id:
                  description: 'Идентификатор типа теста'
                  type: integer
                Unit_id:
                  description: 'Идентификатор единицы измерения'
                  type: integer
                ReagentNormRate_id:
                  description: 'Идентификатор записи расхода реактива'
                  type: integer
                UslugaComplex_Code:
                  description: 'Код услуги'
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - AnalyzerTest
      summary: Удаление
      operationId: 'AnalyzerTest::index_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerTest_id
              properties:
                AnalyzerTest_id:
                  description: 'Идентификатор теста'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTest/grid:
    get:
      tags:
        - AnalyzerTest
      summary: 'Получение списка'
      operationId: 'AnalyzerTest::grid_get'
      parameters:
        -
          name: AnalyzerTest_id
          in: query
          description: 'Идентификатор теста'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerTest_pid
          in: query
          description: 'Идентификатор родительского теста'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerModel_id
          in: query
          description: 'Идентификатор модели анализатора'
          schema:
            type: integer
            format: int64
        -
          name: Analyzer_id
          in: query
          description: 'Идентификатор анализатора'
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_id
          in: query
          description: 'Идентификатор услуги'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerTestType_id
          in: query
          description: 'Идентификатор типа теста'
          schema:
            type: integer
            format: int64
        -
          name: Unit_id
          in: query
          description: 'Идентификатор единицы измерения'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerWorksheetType_id
          in: query
          description: 'Идентификатор типа рабочего списка'
          schema:
            type: integer
            format: int64
        -
          name: start
          in: query
          description: 'Номер начальной записи'
          schema:
            type: integer
            default: 0
        -
          name: limit
          in: query
          description: 'Количество записей'
          schema:
            type: integer
            default: 100
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTest/list:
    get:
      tags:
        - AnalyzerTest
      summary: 'Получение списка'
      operationId: 'AnalyzerTest::list_get'
      parameters:
        -
          name: AnalyzerTest_id
          in: query
          description: 'Идентификатор теста'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerTest_pid
          in: query
          description: 'Идентификатор родительского теста'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerModel_id
          in: query
          description: 'Идентификатор модели анализатора'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerTest_Code
          in: query
          description: 'Код теста'
          schema:
            type: string
        -
          name: AnalyzerTest_Name
          in: query
          description: 'Наименование теста'
          schema:
            type: string
        -
          name: AnalyzerTest_SysNick
          in: query
          description: 'Мнемоника теста'
          schema:
            type: string
        -
          name: AnalyzerTestType_id
          in: query
          description: 'Идентификатор типа теста'
          schema:
            type: integer
            format: int64
        -
          name: Unit_id
          in: query
          description: 'Идентификатор единицы измерения'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerTest_Deleted
          in: query
          description: 'Признак удаления теста'
          schema:
            type: integer
        -
          name: AnalyzerWorksheetType_id
          in: query
          description: 'Идентификатор типа рабочего списка'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTest/linkUslugaComplexMedService:
    delete:
      tags:
        - AnalyzerTest
      summary: 'Сохраненеи связи услуг с анализатором'
      operationId: 'AnalyzerTest::linkUslugaComplexMedService_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - Analyzer_id
                - MedService_id
                - UslugaComplexMedService_ids
              properties:
                Analyzer_id:
                  description: 'Идентификатор анализатора'
                  type: integer
                MedService_id:
                  description: 'Идентификатор службы'
                  type: integer
                UslugaComplexMedService_ids:
                  description: 'Список идентификатор услуг на службе'
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTest/Reagent:
    get:
      tags:
        - AnalyzerTest
      summary: 'Получение данных реагента, привязанного к тесту анализатора'
      operationId: 'AnalyzerTest::Reagent_get'
      parameters:
        -
          name: Analyzer_id
          in: query
          description: 'Идентификатор анализатора'
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_Code
          in: query
          description: 'Код услуги'
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTest/NotActive:
    patch:
      tags:
        - AnalyzerTest
      summary: 'Изменение признака неактивности теста анализатора'
      operationId: 'AnalyzerTest::NotActive_patch'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerTest_id
                - AnalyzerTest_IsNotActive
              properties:
                AnalyzerTest_id:
                  description: 'Идентификатор теста'
                  type: integer
                AnalyzerTest_IsNotActive:
                  description: 'Признак неактивности'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTest/SysNick:
    get:
      tags:
        - AnalyzerTest
      summary: 'Получение мнемоники'
      operationId: 'AnalyzerTest::SysNick_get'
      parameters:
        -
          name: Analyzer_id
          in: query
          description: 'Идентификатор анализатора'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_id
          in: query
          description: 'Идентификатор услуги'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTest/fix:
    post:
      tags:
        - AnalyzerTest
      summary: 'Фикс тестов анализаторов'
      operationId: 'AnalyzerTest::fix_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                Lpu_id:
                  description: 'Идентификатор МО'
                  type: integer
                MedService_id:
                  description: 'Идентификатор службы'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTest/UslugaComplexMedServiceDouble:
    delete:
      tags:
        - AnalyzerTest
      summary: 'Удаление дублей услуг'
      operationId: 'AnalyzerTest::UslugaComplexMedServiceDouble_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                Lpu_id:
                  description: 'Идентификатор МО'
                  type: integer
                MedService_id:
                  description: 'Идентификатор службы'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTest/UnlinkedUslugaComplexMedServiceCount:
    get:
      tags:
        - AnalyzerTest
      summary: 'Получение количества несвязанных услуг на службе с анализаторами'
      operationId: 'AnalyzerTest::UnlinkedUslugaComplexMedServiceCount_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTest/UnlinkedUslugaComplexMedServiceGrid:
    get:
      tags:
        - AnalyzerTest
      summary: 'Получение списка несвязанных услуг на службе с анализаторами'
      operationId: 'AnalyzerTest::UnlinkedUslugaComplexMedServiceGrid_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplexMedService_pid
          in: query
          description: 'Идентификатор родительской услуги'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTest/checkBegDate:
    get:
      tags:
        - AnalyzerTest
      summary: 'Проверка даты начала теста'
      operationId: 'AnalyzerTest::checkBegDate_get'
      parameters:
        -
          name: AnalyzerTest_id
          in: query
          description: 'Идентификатор теста'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerTest_begDT
          in: query
          description: 'Дата начала'
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTest/isExists:
    get:
      tags:
        - AnalyzerTest
      summary: 'Проверка теста на дубликат в списке тестов для модели или для экземпляра анализатора'
      operationId: 'AnalyzerTest::isExists_get'
      parameters:
        -
          name: Analyzer_id
          in: query
          description: 'Идентификатор анализатора'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerModel_id
          in: query
          description: 'Идентификатор модели анализатора'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerTest_pid
          in: query
          description: 'Идентификатор родительского теста'
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_id
          in: query
          description: 'Идентификатор услуги'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTestRefValues:
    get:
      tags:
        - AnalyzerTestRefValues
      summary: 'Получение данных'
      operationId: 'AnalyzerTestRefValues::index_get'
      parameters:
        -
          name: AnalyzerTestRefValues_id
          in: query
          description: 'Идентификатор референсного значения'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    put:
      tags:
        - AnalyzerTestRefValues
      summary: Изменение
      operationId: 'AnalyzerTestRefValues::index_put'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerTestRefValues_id
                - AnalyzerTest_id
                - RefValues_Name
              properties:
                AnalyzerTestRefValues_id:
                  description: 'Идентификатор референсного значения'
                  type: integer
                AnalyzerTest_id:
                  description: 'Идентификатор теста'
                  type: integer
                RefValues_Name:
                  description: 'Наименование референсного значения'
                  type: integer
                Unit_id:
                  description: 'Идентификатор единицы измерения'
                  type: integer
                RefValues_LowerLimit:
                  description: 'Нижнее нормальное'
                  type: string
                RefValues_UpperLimit:
                  description: 'Верхнее нормальное'
                  type: string
                RefValues_BotCritValue:
                  description: 'Нижнее критическое'
                  type: string
                RefValues_TopCritValue:
                  description: 'Верхнее критическое'
                  type: string
                RefValues_Description:
                  description: Комментарий
                  type: string
                LimitData:
                  description: Ограничения
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - AnalyzerTestRefValues
      summary: Создание
      operationId: 'AnalyzerTestRefValues::index_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerTest_id
                - RefValues_Name
              properties:
                AnalyzerTest_id:
                  description: 'Идентификатор теста'
                  type: integer
                RefValues_Name:
                  description: 'Наименование референсного значения'
                  type: integer
                Unit_id:
                  description: 'Идентификатор единицы измерения'
                  type: integer
                RefValues_LowerLimit:
                  description: 'Нижнее нормальное'
                  type: string
                RefValues_UpperLimit:
                  description: 'Верхнее нормальное'
                  type: string
                RefValues_BotCritValue:
                  description: 'Нижнее критическое'
                  type: string
                RefValues_TopCritValue:
                  description: 'Верхнее критическое'
                  type: string
                RefValues_Description:
                  description: Комментарий
                  type: string
                LimitData:
                  description: Ограничения
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - AnalyzerTestRefValues
      summary: Удаление
      operationId: 'AnalyzerTestRefValues::index_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerTestRefValues_id
              properties:
                AnalyzerTestRefValues_id:
                  description: 'Идентификатор референсного значения'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTestRefValues/list:
    get:
      tags:
        - AnalyzerTestRefValues
      summary: 'Получение списка'
      operationId: 'AnalyzerTestRefValues::list_get'
      parameters:
        -
          name: AnalyzerTest_id
          in: query
          description: 'Идентификатор теста'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTestRefValues/RefValuesList:
    get:
      tags:
        - AnalyzerTestRefValues
      summary: 'Получение списка референсных значений'
      operationId: 'AnalyzerTestRefValues::RefValuesList_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplexTarget_id
          in: query
          description: 'Идентификатор услуги'
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplexTest_id
          in: query
          description: 'Идентификатор услуги'
          schema:
            type: integer
            format: int64
        -
          name: EvnLabSample_setDT
          in: query
          description: 'Дата и время взятия пробы'
          schema:
            type: string
            format: date-time
        -
          name: Person_id
          in: query
          description: 'Дата человека'
          schema:
            type: integer
            format: int64
        -
          name: Analyzer_id
          in: query
          description: 'Идентификатор анализатора'
          schema:
            type: integer
            format: int64
        -
          name: UslugaTest_id
          in: query
          description: 'Идентификатор теста'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTestUslugaComplex:
    get:
      tags:
        - AnalyzerTestUslugaComplex
      summary: 'Получение данных'
      operationId: 'AnalyzerTestUslugaComplex::index_get'
      parameters:
        -
          name: AnalyzerTestUslugaComplex_id
          in: query
          description: Идентификатор
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    put:
      tags:
        - AnalyzerTestUslugaComplex
      summary: Создание
      operationId: 'AnalyzerTestUslugaComplex::index_put'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerTestUslugaComplex_id
                - AnalyzerTest_id
                - UslugaComplex_id
              properties:
                AnalyzerTestUslugaComplex_id:
                  description: Идентификатор
                  type: integer
                AnalyzerTest_id:
                  description: 'Идентификатор теста'
                  type: integer
                UslugaComplex_id:
                  description: 'Идентификатор услуги'
                  type: integer
                AnalyzerTestUslugaComplex_Deleted:
                  description: 'Признак удаления'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - AnalyzerTestUslugaComplex
      summary: Создание
      operationId: 'AnalyzerTestUslugaComplex::index_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerTest_id
                - UslugaComplex_id
              properties:
                AnalyzerTest_id:
                  description: 'Идентификатор теста'
                  type: integer
                UslugaComplex_id:
                  description: 'Идентификатор услуги'
                  type: integer
                AnalyzerTestUslugaComplex_Deleted:
                  description: 'Признак удаления'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - AnalyzerTestUslugaComplex
      summary: Удаление
      operationId: 'AnalyzerTestUslugaComplex::index_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerTestUslugaComplex_id
              properties:
                AnalyzerTestUslugaComplex_id:
                  description: Идентификатор
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTestUslugaComplex/list:
    get:
      tags:
        - AnalyzerTestUslugaComplex
      summary: 'Получение списка'
      operationId: 'AnalyzerTestUslugaComplex::list_get'
      parameters:
        -
          name: AnalyzerTestUslugaComplex_id
          in: query
          description: Идентификатор
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerTest_id
          in: query
          description: 'Идентификатор теста'
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_id
          in: query
          description: 'Идентификатор услуги'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerTestUslugaComplex_Deleted
          in: query
          description: 'Признак удаления'
          schema:
            type: integer
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTestUslugaComplex/AlowedUslugaCategorySysNicks:
    get:
      tags:
        - AnalyzerTestUslugaComplex
      summary: 'Получение категория услуг'
      operationId: 'AnalyzerTestUslugaComplex::AlowedUslugaCategorySysNicks_get'
      parameters:
        -
          name: AnalyzerTest_id
          in: query
          description: 'Идентификатор теста'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTestWorksheetType:
    get:
      tags:
        - AnalyzerTestWorksheetType
      summary: 'Получение данных'
      operationId: 'AnalyzerTestWorksheetType::index_get'
      parameters:
        -
          name: AnalyzerTestWorksheetType_id
          in: query
          description: Идентификатор
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    put:
      tags:
        - AnalyzerTestWorksheetType
      summary: Изменение
      operationId: 'AnalyzerTestWorksheetType::index_put'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerTestWorksheetType_id
                - AnalyzerTest_id
                - AnalyzerWorksheetType_id
              properties:
                AnalyzerTestWorksheetType_id:
                  description: Идентификатор
                  type: integer
                AnalyzerTest_id:
                  description: 'Идентификатор теста'
                  type: integer
                AnalyzerWorksheetType_id:
                  description: 'Идентификатор типа рабочего списка'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - AnalyzerTestWorksheetType
      summary: Создание
      operationId: 'AnalyzerTestWorksheetType::index_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerTest_id
                - AnalyzerWorksheetType_id
              properties:
                AnalyzerTest_id:
                  description: 'Идентификатор теста'
                  type: integer
                AnalyzerWorksheetType_id:
                  description: 'Идентификатор типа рабочего списка'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - AnalyzerTestWorksheetType
      summary: Удаление
      operationId: 'AnalyzerTestWorksheetType::index_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerTestWorksheetType_id
              properties:
                AnalyzerTestWorksheetType_id:
                  description: Идентификатор
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerTestWorksheetType/list:
    get:
      tags:
        - AnalyzerTestWorksheetType
      summary: 'Получение списка'
      operationId: 'AnalyzerTestWorksheetType::list_get'
      parameters:
        -
          name: AnalyzerTestWorksheetType_id
          in: query
          description: Идентификатор
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerTest_id
          in: query
          description: 'Идентификатор теста'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerWorksheetType_id
          in: query
          description: 'Идентификатор типа рабочего списка'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerWorksheet:
    get:
      tags:
        - AnalyzerWorksheet
      summary: 'Получение данных'
      operationId: 'AnalyzerWorksheet::index_get'
      parameters:
        -
          name: AnalyzerWorksheet_id
          in: query
          description: Идентификатор
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    put:
      tags:
        - AnalyzerWorksheet
      summary: Изменение
      operationId: 'AnalyzerWorksheet::index_put'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerWorksheet_id
                - AnalyzerWorksheet_Code
                - AnalyzerWorksheet_Name
              properties:
                AnalyzerWorksheet_id:
                  description: Идентификатор
                  type: integer
                AnalyzerWorksheet_Code:
                  description: Код
                  type: string
                AnalyzerWorksheet_Name:
                  description: Наименование
                  type: string
                AnalyzerWorksheet_setDT:
                  description: 'Дата и время создания'
                  type: string
                  format: date-time
                AnalyzerRack_id:
                  description: 'Идентификатор штатива'
                  type: integer
                AnalyzerWorksheetStatusType_id:
                  description: 'Идентификатора статуса рабочего списка'
                  type: integer
                AnalyzerWorksheetType_id:
                  description: 'Идентификатора типа рабочих списков'
                  type: integer
                Analyzer_id:
                  description: 'Идентификатора анализатора'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - AnalyzerWorksheet
      summary: Создание
      operationId: 'AnalyzerWorksheet::index_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerWorksheet_Code
                - AnalyzerWorksheet_Name
              properties:
                AnalyzerWorksheet_Code:
                  description: Код
                  type: string
                AnalyzerWorksheet_Name:
                  description: Наименование
                  type: string
                AnalyzerWorksheet_setDT:
                  description: 'Дата и время создания'
                  type: string
                  format: date-time
                AnalyzerRack_id:
                  description: 'Идентификатор штатива'
                  type: integer
                AnalyzerWorksheetStatusType_id:
                  description: 'Идентификатора статуса рабочего списка'
                  type: integer
                AnalyzerWorksheetType_id:
                  description: 'Идентификатора типа рабочих списков'
                  type: integer
                Analyzer_id:
                  description: 'Идентификатора анализатора'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - AnalyzerWorksheet
      summary: Удаление
      operationId: 'AnalyzerWorksheet::index_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerWorksheet_id
              properties:
                AnalyzerWorksheet_id:
                  description: Идентификатор
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerWorksheet/Status:
    patch:
      tags:
        - AnalyzerWorksheet
      summary: 'Изменение статуса'
      operationId: 'AnalyzerWorksheet::Status_patch'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerWorksheet_id
                - AnalyzerWorksheetStatusType_id
              properties:
                AnalyzerWorksheet_id:
                  description: Идентификатор
                  type: integer
                AnalyzerWorksheetStatusType_id:
                  description: 'Идентификатора статуса рабочего списка'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerWorksheet/work:
    post:
      tags:
        - AnalyzerWorksheet
      summary: 'В работу'
      operationId: 'AnalyzerWorksheet::work_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerWorksheet_id
              properties:
                AnalyzerWorksheet_id:
                  description: Идентификатор
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerWorksheet/DailyCount:
    get:
      tags:
        - AnalyzerWorksheet
      summary: 'Получение номера'
      operationId: 'AnalyzerWorksheet::DailyCount_get'
      parameters:
        -
          name: gendate
          in: query
          description: Дата
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerWorksheet/list:
    get:
      tags:
        - AnalyzerWorksheet
      summary: 'Получение списка'
      operationId: 'AnalyzerWorksheet::list_get'
      parameters:
        -
          name: AnalyzerWorksheet_id
          in: query
          description: Идентификатор
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerWorksheet_Code
          in: query
          description: Код
          schema:
            type: string
        -
          name: AnalyzerWorksheet_Name
          in: query
          description: Наименование
          schema:
            type: string
        -
          name: AnalyzerWorksheet_setDT
          in: query
          description: 'Дата создания'
          schema:
            type: string
            format: date
        -
          name: AnalyzerRack_id
          in: query
          description: 'Идентификатор штатива'
          schema:
            type: integer
            format: int64
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerWorksheetStatusType_id
          in: query
          description: 'Идентификатор статуса рабочего списка'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerWorksheetType_id
          in: query
          description: 'Идентификатор типа рабочего списка'
          schema:
            type: integer
            format: int64
        -
          name: Analyzer_id
          in: query
          description: 'Идентификатор анализатора'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerWorksheetEvnLabSample:
    get:
      tags:
        - AnalyzerWorksheetEvnLabSample
      summary: 'Получение данных'
      operationId: 'AnalyzerWorksheetEvnLabSample::index_get'
      parameters:
        -
          name: AnalyzerWorksheetEvnLabSample_id
          in: query
          description: Идентификатор
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    put:
      tags:
        - AnalyzerWorksheetEvnLabSample
      summary: Изменение
      operationId: 'AnalyzerWorksheetEvnLabSample::index_put'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerWorksheetEvnLabSample_id
                - AnalyzerWorksheet_id
                - EvnLabSample_id
                - AnalyzerWorksheetEvnLabSample_X
                - AnalyzerWorksheetEvnLabSample_Y
              properties:
                AnalyzerWorksheetEvnLabSample_id:
                  description: Идентификатор
                  type: integer
                AnalyzerWorksheet_id:
                  description: 'Идентификатор рабочего списка'
                  type: integer
                EvnLabSample_id:
                  description: 'Идентификатор пробы'
                  type: integer
                AnalyzerWorksheetEvnLabSample_X:
                  description: 'Координата расположения пробы по оси X'
                  type: string
                AnalyzerWorksheetEvnLabSample_Y:
                  description: 'Координата расположения пробы по оси Y'
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - AnalyzerWorksheetEvnLabSample
      summary: Создание
      operationId: 'AnalyzerWorksheetEvnLabSample::index_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerWorksheet_id
                - EvnLabSample_id
                - AnalyzerWorksheetEvnLabSample_X
                - AnalyzerWorksheetEvnLabSample_Y
              properties:
                AnalyzerWorksheet_id:
                  description: 'Идентификатор рабочего списка'
                  type: integer
                EvnLabSample_id:
                  description: 'Идентификатор пробы'
                  type: integer
                AnalyzerWorksheetEvnLabSample_X:
                  description: 'Координата расположения пробы по оси X'
                  type: string
                AnalyzerWorksheetEvnLabSample_Y:
                  description: 'Координата расположения пробы по оси Y'
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - AnalyzerWorksheetEvnLabSample
      summary: Удаление
      operationId: 'AnalyzerWorksheetEvnLabSample::index_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerWorksheetEvnLabSample_id
              properties:
                AnalyzerWorksheetEvnLabSample_id:
                  description: Идентификатор
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerWorksheetEvnLabSample/list:
    get:
      tags:
        - AnalyzerWorksheetEvnLabSample
      summary: 'Получение списка'
      operationId: 'AnalyzerWorksheetEvnLabSample::list_get'
      parameters:
        -
          name: AnalyzerWorksheetEvnLabSample_id
          in: query
          description: Идентификатор
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerWorksheet_id
          in: query
          description: 'Идентификатор рабочего списка'
          schema:
            type: integer
            format: int64
        -
          name: EvnLabSample_id
          in: query
          description: 'Идентификатор пробы'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerWorksheetEvnLabSample_X
          in: query
          description: 'Координата расположения пробы по оси X'
          schema:
            type: string
        -
          name: AnalyzerWorksheetEvnLabSample_Y
          in: query
          description: 'Координата расположения пробы по оси Y'
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerWorksheetEvnLabSample/Matrix:
    get:
      tags:
        - AnalyzerWorksheetEvnLabSample
      summary: 'Получение матрицы проб для рабочего списка'
      operationId: 'AnalyzerWorksheetEvnLabSample::Matrix_get'
      parameters:
        -
          name: AnalyzerWorksheet_id
          in: query
          description: 'Идентификатор рабочего списка'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - AnalyzerWorksheetEvnLabSample
      summary: 'Очищение матрицы проб рабочего списка'
      operationId: 'AnalyzerWorksheetEvnLabSample::Matrix_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerWorksheet_id
              properties:
                AnalyzerWorksheet_id:
                  description: 'Идентификатор рабочего списка'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerWorksheetType:
    get:
      tags:
        - AnalyzerWorksheetType
      summary: 'Получение данных'
      operationId: 'AnalyzerWorksheetType::index_get'
      parameters:
        -
          name: AnalyzerWorksheetType_id
          in: query
          description: 'Идентификатор типа рабочего сиска'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    put:
      tags:
        - AnalyzerWorksheetType
      summary: Изменение
      operationId: 'AnalyzerWorksheetType::index_put'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerWorksheetType_id
                - AnalyzerWorksheetType_Code
                - AnalyzerWorksheetType_Name
              properties:
                AnalyzerWorksheetType_id:
                  description: 'Идентификатор типа рабочего списка'
                  type: integer
                AnalyzerWorksheetType_Code:
                  description: 'Код типа рабочего списка'
                  type: string
                AnalyzerWorksheetType_Name:
                  description: 'Наименование типа рабочего списка'
                  type: string
                AnalyzerModel_id:
                  description: 'Идентификатор модели анализатора'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - AnalyzerWorksheetType
      summary: Создание
      operationId: 'AnalyzerWorksheetType::index_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerWorksheetType_Code
                - AnalyzerWorksheetType_Name
              properties:
                AnalyzerWorksheetType_Code:
                  description: 'Код типа рабочего списка'
                  type: string
                AnalyzerWorksheetType_Name:
                  description: 'Наименование типа рабочего списка'
                  type: string
                AnalyzerModel_id:
                  description: 'Идентификатор модели анализатора'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - AnalyzerWorksheetType
      summary: Удаление
      operationId: 'AnalyzerWorksheetType::index_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - AnalyzerWorksheetType_id
              properties:
                AnalyzerWorksheetType_id:
                  description: 'Идентификатор типа рабочего списка'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AnalyzerWorksheetType/list:
    get:
      tags:
        - AnalyzerWorksheetType
      summary: 'Получение сприска'
      operationId: 'AnalyzerWorksheetType::list_get'
      parameters:
        -
          name: AnalyzerWorksheetType_id
          in: query
          description: 'Идентификатор типа рабочего сиска'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerWorksheetType_Code
          in: query
          description: 'Код типа рабочего списка'
          schema:
            type: string
        -
          name: AnalyzerWorksheetType_Name
          in: query
          description: 'Наименование типа рабочего списка'
          schema:
            type: string
        -
          name: AnalyzerModel_id
          in: query
          description: 'Идентификатор модели анализатора'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AsMlo/RequestSelections:
    post:
      tags:
        - AsMlo
      summary: 'Отправляет набор проб в АсМло'
      operationId: 'AsMlo::RequestSelections_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                MedServiceType_SysNick:
                  description: 'Системное наименование типа службы'
                  type: string
                EvnLabSample_id:
                  description: 'Идентификатор пробы'
                  type: integer
                EvnLabSamples:
                  description: 'Список проб в JSON-формате'
                  type: string
                  format: json
                onlyNew:
                  description: 'Признак отправки только новых тестов'
                  type: integer
                changeNumber:
                  description: 'Признак смены номера пробы на номер текущего дня'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AsMlo/RequestSelectionsLabRequest:
    post:
      tags:
        - AsMlo
      summary: 'Отправляет набор заявок в АсМло'
      operationId: 'AsMlo::RequestSelectionsLabRequest_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                EvnLabRequest_id:
                  description: 'Идентификатор заявки'
                  type: integer
                EvnLabRequests:
                  description: 'Список заявок в JSON-формате'
                  type: string
                  format: json
                onlyNew:
                  description: 'Признак отправки только новых тестов'
                  type: integer
                changeNumber:
                  description: 'Признак смены номера пробы на номер текущего дня'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AsMlo/doSuccessConfirmation:
    post:
      tags:
        - AsMlo
      summary: 'Выполняет setSuccessConfirmation для заданных проб'
      operationId: 'AsMlo::doSuccessConfirmation_post'
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AsMlo/ResultSamples:
    get:
      tags:
        - AsMlo
      summary: 'Получение данных из АсМло по нескольким выбранным пробам'
      operationId: 'AsMlo::ResultSamples_get'
      parameters:
        -
          name: EvnLabSample_id
          in: query
          description: 'Идентификатор пробы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnLabSamples
          in: query
          description: 'Список идентификаторов проб в JSON-формате'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AsMlo/checkLabSamples:
    get:
      tags:
        - AsMlo
      summary: 'Получение результатов из АсМло'
      operationId: 'AsMlo::checkLabSamples_get'
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AsMlo/login:
    post:
      tags:
        - AsMlo
      summary: 'Идентификация в сервисе'
      operationId: 'AsMlo::login_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                login:
                  description: Логин
                  type: string
                password:
                  description: Пароль
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AsMlo/logout:
    post:
      tags:
        - AsMlo
      summary: 'Завершение сессии в сервисе'
      operationId: 'AsMlo::logout_post'
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AsMlo/check:
    get:
      tags:
        - AsMlo
      summary: 'Проверка готовности работы сервиса'
      operationId: 'AsMlo::check_get'
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AsMlo/DirectoryGost2011:
    post:
      tags:
        - AsMlo
      summary: 'Передача ГОСТ-2011 сервису'
      operationId: 'AsMlo::DirectoryGost2011_post'
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AsMlo/DirectoryLpu:
    post:
      tags:
        - AsMlo
      summary: 'Передача МО сервису'
      operationId: 'AsMlo::DirectoryLpu_post'
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AsMlo/Directory:
    get:
      tags:
        - AsMlo
      summary: 'Получение справочника из сервиса'
      operationId: 'AsMlo::Directory_get'
      parameters:
        -
          name: directory
          in: query
          description: Справочник
          required: true
          schema:
            type: string
        -
          name: filters
          in: query
          description: 'Набор параметров для фильтрации'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - AsMlo
      summary: 'Передача справочника сервису'
      operationId: 'AsMlo::Directory_post'
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AsMlo/Sample:
    post:
      tags:
        - AsMlo
      summary: 'Передача проб в сервис'
      operationId: 'AsMlo::Sample_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - id
                - number
                - biomaterialId
                - personId
                - tests
                - targets
              properties:
                id:
                  description: 'Идентификатор пробы'
                  type: integer
                number:
                  description: Штрих-код
                  type: string
                internalNum:
                  description: 'Внтренний номер'
                  type: string
                biomaterialId:
                  description: 'Идентификатор биоматериала'
                  type: integer
                orderId:
                  description: 'Идентификатор заявки'
                  type: integer
                clinicId:
                  description: 'Идентификатор клиники'
                  type: integer
                clinicName:
                  description: 'Наименование клиники'
                  type: string
                directionNum:
                  description: 'Номер направления'
                  type: string
                doctor:
                  description: Врач
                  type: string
                patOtdelen:
                  description: Отделение
                  type: string
                weight:
                  description: 'Вес пациента'
                  type: string
                personId:
                  description: 'Идентификатор пациента'
                  type: integer
                lastName:
                  description: 'Фамилия пациента'
                  type: string
                firstName:
                  description: 'Имя пациента'
                  type: string
                middleName:
                  description: 'Отчество пациента'
                  type: string
                sex:
                  description: 'Пол пациента'
                  type: string
                snils:
                  description: СНИЛС
                  type: string
                polisSer:
                  description: 'Серия полиса'
                  type: string
                polisNum:
                  description: 'Номер полиса'
                  type: string
                dateOfBirth:
                  description: 'Дата рождения'
                  type: string
                  format: date
                update:
                  description: 'Признак повторной отправки'
                  type: string
                tests:
                  description: Тесты
                  type: string
                targets:
                  description: Исследования
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AsMlo/SampleInfo:
    get:
      tags:
        - AsMlo
      summary: 'Получение данных пробы'
      operationId: 'AsMlo::SampleInfo_get'
      parameters:
        -
          name: id
          in: query
          description: 'Идентификатор пробы'
          required: false
          schema:
            type: integer
        -
          name: number
          in: query
          description: Штрих-код
          required: false
          schema:
            type: string
        -
          name: archive
          in: query
          description: 'Признак архивных записей'
          required: false
          schema:
            type: integer
        -
          name: ready
          in: query
          description: 'Признак готовности проб'
          required: false
          schema:
            type: integer
        -
          name: raw
          in: query
          description: 'Признак возврата сырых данных'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AsMlo/Worklist:
    post:
      tags:
        - AsMlo
      summary: 'Передача рабочих списков в сервис'
      operationId: 'AsMlo::Worklist_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - id
                - lengthX
                - lengthY
                - worklist
              properties:
                id:
                  description: 'Идентификатор рабочего списка'
                  type: integer
                lengthX:
                  description: 'Размерность рабочего списка по горизонтали'
                  type: integer
                lengthY:
                  description: 'Размерность рабочего списка по вертикали'
                  type: integer
                worklist:
                  description: 'Набор проб в штативе'
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AsMlo/WorklistInfo:
    get:
      tags:
        - AsMlo
      summary: 'Получение данных по рабочему списку'
      operationId: 'AsMlo::WorklistInfo_get'
      parameters:
        -
          name: id
          in: query
          description: 'Идентификатор рабочего списка'
          required: false
          schema:
            type: integer
        -
          name: archive
          in: query
          description: 'Признак архивных записей'
          required: false
          schema:
            type: integer
        -
          name: ready
          in: query
          description: 'Признак готовности проб'
          required: false
          schema:
            type: integer
        -
          name: raw
          in: query
          description: 'Признак возврата сырых данных'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AsMlo/SuccessConfirmation:
    post:
      tags:
        - AsMlo
      summary: 'Подтверждение сервису успешной передачи информации данных рабочего списка или пробы'
      operationId: 'AsMlo::SuccessConfirmation_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                samples:
                  description: 'Набор идентификаторов проб'
                  type: string
                worklists:
                  description: 'Набор идентификаторов рабочих списков'
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AsMlo/moveArchive:
    post:
      tags:
        - AsMlo
      summary: 'Перенос в архив пробы или рабочего списка'
      operationId: 'AsMlo::moveArchive_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                samples:
                  description: 'Набор идентификаторов проб'
                  type: string
                worklists:
                  description: 'Набор идентификаторов рабочих списков'
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/AsMlo/isSend2AnalyzerEnabled:
    get:
      tags:
        - AsMlo
      summary: 'Формирование признака доступности кнопки ''Отправить на анализатор'''
      operationId: 'AsMlo::isSend2AnalyzerEnabled_get'
      parameters:
        -
          name: EvnLabSamples
          in: query
          description: 'Набор проб'
          required: false
          schema:
            type: string
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Common/DateTime:
    get:
      tags:
        - Common
      summary: 'Получение текущего времени'
      operationId: 'Common::DateTime_get'
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EMD/EMDSignWindowData:
    get:
      tags:
        - EMD
      summary: 'Получение списка документов для подписи'
      operationId: 'EMD::EMDSignWindowGrid_get'
      parameters:
        -
          name: EMDRegistry_ObjectName
          in: query
          description: 'Наименование объекта'
          required: true
          schema:
            type: string
        -
          name: EMDRegistry_ObjectIDs
          in: query
          description: 'Идентификатор объекта'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EMD/saveSignField:
    get:
      tags:
        - EMD
      summary: 'Получение списка документов для подписи'
      operationId: 'EMD::saveSignField_post'
      parameters:
        -
          name: EMDRegistry_ObjectName
          in: query
          description: 'Наименование объекта'
          required: true
          schema:
            type: string
        -
          name: EMDRegistry_ObjectID
          in: query
          description: 'Идентификатор объекта'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Evn/PersonEvnClassList:
    get:
      tags:
        - Evn
      summary: 'Получение данных человека'
      operationId: 'Evn::PersonEvnClassList_get'
      parameters:
        -
          name: Person_id
          in: query
          description: 'Идентификатор человека'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Evn_pid
          in: query
          description: 'Идентификатор родительского события'
          schema:
            type: integer
            format: int64
        -
          name: ignoreFilterByEvnPid
          in: query
          description: 'Признак игнорирования фильтра по родительскому событию'
          schema:
            type: integer
        -
          name: person_in
          in: query
          description: person_in
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Evn/RelatedEvnList:
    get:
      tags:
        - Evn
      summary: 'Получение списка связанных событий'
      operationId: 'Evn::RelatedEvnList_get'
      parameters:
        -
          name: Evn_id
          in: query
          description: 'Идентификатор соыбтия'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Evn/EvnClassSysNick:
    get:
      tags:
        - Evn
      summary: 'Получение системного наименования типа события'
      operationId: 'Evn::EvnClassSysNick_get'
      parameters:
        -
          name: Evn_id
          in: query
          description: 'Идентификатор соыбтия'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnDirection:
    get:
      tags:
        - EvnDirection
      summary: 'Получение данных направления'
      operationId: 'EvnDirection::index_get'
      parameters:
        -
          name: EvnDirection_id
          in: query
          description: 'Идентификатор направления'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - EvnDirection
      summary: 'Сохранение направления'
      operationId: 'EvnDirection::index_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - DirType_id
                - EvnDirection_setDate
                - PersonEvn_id
              properties:
                redirectEvnDirection:
                  description: 'Признак перенаправления'
                  type: integer
                Diag_id:
                  description: 'Идентификатор диагноза'
                  type: integer
                TreatmentType_id:
                  description: 'Идентификатор типа лечения'
                  type: integer
                Lpu_sid:
                  description: 'Идентификатор направившей МО'
                  type: integer
                EvnDirection_IsNeedOper:
                  description: 'Признак необходимости операционного вмешательства'
                  type: integer
                DirType_id:
                  description: 'Идентификатор типа направления'
                  type: integer
                PrehospDirect_id:
                  description: 'Идентификатор справочника ''Кем направлен'''
                  type: integer
                MedPersonal_Code:
                  description: 'Код врача'
                  type: string
                MedicalCareFormType_id:
                  description: 'Идентификатор формы оказания медицинской помощи'
                  type: integer
                StudyTarget_id:
                  description: 'Идентификатор цели исследования'
                  type: integer
                PayType_id:
                  description: 'Идентификатор вида оплаты'
                  type: integer
                ConsultingForm_id:
                  description: 'Идентификатор формы оказания консультации'
                  type: integer
                Lpu_did:
                  description: 'Идентификатор МО, в которую направили'
                  type: integer
                Org_oid:
                  description: 'Идентификатор организации, в которую направили'
                  type: integer
                EvnDirection_Descr:
                  description: Обоснование
                  type: string
                EvnDirection_id:
                  description: 'Идентификатор направления'
                  type: integer
                EvnDirection_pid:
                  description: 'Идентификатор родительского события'
                  type: integer
                MedService_id:
                  description: 'Идентификатор службы, в которую направили'
                  type: integer
                TimetableMedService_id:
                  description: 'Идентификатор бирки расписания службы'
                  type: integer
                UslugaComplex_did:
                  description: 'Идентификатор услуги'
                  type: integer
                UslugaComplex_id:
                  description: 'Идентификатор услуги'
                  type: integer
                order:
                  description: 'Заказ услуги в JSON-формате'
                  type: string
                MedSpec_fid:
                  description: 'Идентификатор специальности врача (федеральный справочник V015)'
                  type: integer
                RemoteConsultCause_id:
                  description: 'Идентификатор цели консультации'
                  type: integer
                EvnDirection_IsAuto:
                  description: 'Признак системного направления'
                  type: integer
                PrescriptionType_Code:
                  description: 'Признак системного направления'
                  type: integer
                EvnPrescr_id:
                  description: 'Идентификатор назначения'
                  type: integer
                EvnDirection_Num:
                  description: 'Номер направления'
                  type: string
                EvnDirection_setDate:
                  description: 'Дата выписки направления'
                  type: string
                  format: date
                EvnDirection_desDT:
                  description: 'Желаемая дата направления'
                  type: string
                  format: date
                LpuSection_id:
                  description: 'Идентификатор направишего отделение'
                  type: integer
                LpuSection_did:
                  description: 'Идентификатор отделения, в которое направили'
                  type: integer
                LpuUnitType_did:
                  description: 'Идентификатор условия оказания медицинской помощи'
                  type: integer
                LpuSectionProfile_id:
                  description: 'Идентификатор профиля, на который направили'
                  type: integer
                From_MedStaffFact_id:
                  description: 'Идентификатор рабочего места направившего врача'
                  type: integer
                MedPersonal_id:
                  description: 'Идентификатор направившего врача'
                  type: integer
                MedPersonal_zid:
                  description: 'Идентификатор заведующего отделением'
                  type: integer
                TimetableGraf_id:
                  description: 'Идентификатор бирки поликлиники'
                  type: integer
                TimetableStac_id:
                  description: 'Идентификатор бирки стационара'
                  type: integer
                TimetablePar_id:
                  description: 'Идентификатор бирки параклиники'
                  type: integer
                Person_id:
                  description: 'Идентификатор человека'
                  type: integer
                PersonEvn_id:
                  description: 'Идентификатор состояния человека'
                  type: integer
                QueueFailCause_id:
                  description: 'Идентификатор причины отмены направления в очереди'
                  type: integer
                EvnUsluga_id:
                  description: 'Идентификатор заказа услуги'
                  type: integer
                ARMType_id:
                  description: 'Идентификатор типа арма, из которого выписывается направление'
                  type: integer
                toQueue:
                  description: 'Признак необходимости постановки в очереди'
                  type: integer
                EvnDirection_IsCito:
                  description: Cito
                  type: integer
                EvnDirection_IsReceive:
                  description: 'Признак создания направления принимающей стороной'
                  type: integer
                ConsultationForm_id:
                  description: 'Идентификатор формы оказания консультации'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - EvnDirection
      summary: 'Удаление направления'
      operationId: 'EvnDirection::index_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnDirection_id
              properties:
                EvnDirection_id:
                  description: 'Идентификатор направления'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnDirection/cancel:
    post:
      tags:
        - EvnDirection
      summary: 'Отмена направления'
      operationId: 'EvnDirection::cancel_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnDirection_id
              properties:
                EvnDirection_id:
                  description: 'Идентификатор направления'
                  type: integer
                DirFailType_id:
                  description: 'Идентификатор причины отмены направления'
                  type: integer
                EvnStatusCause_id:
                  description: 'Идентификатор причины изменения статуса события'
                  type: integer
                cancelType:
                  description: 'Вид отмены'
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnDirection/cancelByRecord:
    post:
      tags:
        - EvnDirection
      summary: 'Отмена направления по записи'
      operationId: 'EvnDirection::cancelByRecord_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                EvnDirection_id:
                  description: 'Идентификатор направления'
                  type: integer
                TimetableMedService_id:
                  description: 'Идентификатор бирки расписания службы'
                  type: integer
                DirFailType_id:
                  description: 'Идентификатор причины отмены направления'
                  type: integer
                EvnStatusCause_id:
                  description: 'Идентификатор причины изменения статуса события'
                  type: integer
                cancelType:
                  description: 'Вид отмены'
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnDirection/loadView:
    post:
      tags:
        - EvnDirection
      summary: 'Получение данных для панели просмотра ЭМК и правой панели формы добавления назначений'
      operationId: 'EvnDirection::loadView_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnPrescrList
              properties:
                EvnPrescrList:
                  description: 'Список назначений в JSON-формате'
                  type: string
                  format: json
                sysnick:
                  description: sysnick
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnDirection/checkCanBeCancelled:
    get:
      tags:
        - EvnDirection
      summary: 'Проверка возможности удалить направления'
      operationId: 'EvnDirection::checkCanBeCancelled_get'
      parameters:
        -
          name: EvnDirection_id
          in: query
          description: 'Идентификатор направления'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnDirection/EvnLabSampleAndRequest:
    get:
      tags:
        - EvnDirection
      summary: 'Получение пробы и заявки по направлению'
      operationId: 'EvnDirection::EvnLabSampleAndRequest_get'
      parameters:
        -
          name: EvnDirection_id
          in: query
          description: 'Идентификатор направления'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnDirection/loadEDEditForm:
    get:
      tags:
        - EvnDirection
      summary: 'Получение данных по направлению'
      operationId: 'EvnDirection::loadEDEditForm_get'
      parameters:
        -
          name: EvnDirection_id
          in: query
          description: 'Идентификатор направления'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnDirection/EvnDirectionForPrint:
    get:
      tags:
        - EvnDirection
      summary: 'Получение данных по направлению'
      operationId: 'EvnDirection::EvnDirectionForPrint_get'
      parameters:
        -
          name: EvnDirection_id
          in: query
          description: 'Идентификатор направления'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnDirection/Fields:
    get:
      tags:
        - EvnDirection
      summary: 'Получение полей направления для печати'
      operationId: 'EvnDirection::Fields_get'
      parameters:
        -
          name: EvnDirection_id
          in: query
          description: 'Идентификатор направления'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnDirection/EvnDirectionExists:
    get:
      tags:
        - EvnDirection
      summary: 'Проверка наличия направления в ту же службу'
      operationId: 'EvnDirection::EvnDirectionExists_get'
      parameters:
        -
          name: EvnDirection_pid
          in: query
          description: 'Идентификатор родителя направления'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Person_id
          in: query
          description: 'Идентификатор пациента'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_id
          in: query
          description: 'Идентификатор услуги'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnDirection/MedServiceFromEvnDirection:
    get:
      tags:
        - EvnDirection
      summary: 'Получение идентификатора мед. службы'
      operationId: 'EvnDirection::MedServiceFromEvnDirection_get'
      parameters:
        -
          name: EvnDirection_id
          in: query
          description: 'Идентификатор направления'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnDirection/Count:
    get:
      tags:
        - EvnDirection
      summary: 'Получение количества направлений'
      operationId: 'EvnDirection::Count_get'
      parameters:
        -
          name: EvnDirection_pid
          in: query
          description: 'Идентификатор родительского события направления'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: status
          in: query
          description: Статус
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnDirection/UslugasDataForAPI:
    get:
      tags:
        - EvnDirection
      summary: 'Данные услуг по направлению для api метода rish api/EvnDirection'
      operationId: 'EvnDirection::UslugasDataForAPI_get'
      parameters:
        -
          name: EvnDirection_id
          in: query
          description: 'Идентификатор направления'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnDirection/PersonHistory:
    get:
      tags:
        - EvnDirection
      summary: 'История болезни для новой ЭМК'
      operationId: 'EvnDirection::PersonHistory_get'
      parameters:
        -
          name: Person_id
          in: query
          description: 'Идентификатор человека'
          schema:
            type: integer
            format: int64
        -
          name: person_in
          in: query
          description: 'Список идентификаторов людей'
          schema:
            type: string
        -
          name: userLpuUnitType_SysNick
          in: query
          description: 'Тип группы отделений'
          schema:
            type: string
        -
          name: useArchive
          in: query
          description: 'Признак архивных записей'
          schema:
            type: integer
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnDirection/loadEvnDirectionPanel:
    get:
      tags:
        - EvnDirection
      summary: 'Получение списка направлений для панели направлений в ЭМК'
      operationId: 'EvnDirection::loadEvnDirectionPanel_get'
      parameters:
        -
          name: EvnDirection_pid
          in: query
          description: 'Идентификатор родителя направления'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: DopDispInfoConsent_id
          in: query
          description: 'Идентификатор согласия'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: DirType
          in: query
          description: 'Типы направлений'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest:
    get:
      tags:
        - EvnLabRequest
      summary: 'Получение данных заявки на лаб. исследование'
      operationId: 'EvnLabRequest::index_get'
      parameters:
        -
          name: EvnLabRequest_id
          in: query
          description: 'Идентификатор заявки'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnDirection_id
          in: query
          description: 'Идентификатор направления'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnLabRequest_BarCode
          in: query
          description: Штрих-код
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    put:
      tags:
        - EvnLabRequest
      summary: 'Изменение заявки на лаб. исследование'
      operationId: 'EvnLabRequest::index_put'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabRequest_id
                - PersonEvn_id
                - PayType_id
              properties:
                EvnLabRequest_id:
                  description: 'Идентификатор заявки'
                  type: integer
                PersonEvn_id:
                  description: 'Идентификатор состояния человека'
                  type: integer
                PayType_id:
                  description: 'Идентификатор вида оплаты'
                  type: integer
                MedService_id:
                  description: 'Идентификатор службы лаборатории'
                  type: integer
                MedService_sid:
                  description: 'Идентификатор службы пункта забора'
                  type: integer
                EvnDirection_id:
                  description: 'Идентификатор направления'
                  type: integer
                EvnDirection_Num:
                  description: 'Номер направления'
                  type: string
                EvnDirection_setDT:
                  description: 'Дата направления'
                  type: string
                  format: date
                EvnDirection_IsCito:
                  description: Cito
                  type: integer
                EvnDirection_Descr:
                  description: Комментарий
                  type: string
                EvnUsluga_id:
                  description: 'Идентификатор заказа на проведение лабораторного исследования'
                  type: integer
                Diag_id:
                  description: 'Идентификатор диагноза'
                  type: integer
                TumorStage_id:
                  description: 'Идентификатор стадии выявленного ЗНО'
                  type: integer
                Mes_id:
                  description: 'Идентификатор МЭС'
                  type: integer
                EvnLabRequest_Comment:
                  description: Комментарий
                  type: string
                EvnLabRequest_IsSigned:
                  description: 'Состояние подписи'
                  type: integer
                EvnLabRequest_pid:
                  description: 'Идентификатор родительского события'
                  type: integer
                EvnLabRequest_rid:
                  description: 'Идентификатор корневого события'
                  type: integer
                EvnLabRequest_setDT:
                  description: 'Дата и время создания заявки'
                  type: string
                  format: date-time
                EvnLabRequest_didDT:
                  description: 'Дата и время'
                  type: string
                  format: date-time
                EvnLabRequest_disDT:
                  description: 'Дата и время'
                  type: string
                  format: date-time
                EvnLabRequest_signDT:
                  description: 'Дата и время подписания'
                  type: string
                  format: date-time
                MedPersonal_id:
                  description: 'Идентификатор врача'
                  type: integer
                MedStaffFact_id:
                  description: 'Идентификатор рабочего места врача'
                  type: integer
                LpuSection_id:
                  description: 'Идентификатор направившего отделения'
                  type: integer
                Lpu_sid:
                  description: 'Идентификатор направившей МО'
                  type: integer
                Org_sid:
                  description: 'Идентификатор направившей организации'
                  type: integer
                PrehospDirect_id:
                  description: 'Идентификатор записи справочника ''Кем направлен'''
                  type: integer
                Morbus_id:
                  description: 'Идентификатор заболевания'
                  type: integer
                Person_id:
                  description: 'Идентификатор человека'
                  type: integer
                pmUser_signID:
                  description: 'Идентификатор подписавшего пользователя'
                  type: integer
                UslugaExecutionType_id:
                  description: 'Идентификатор типа выполнения услуги'
                  type: integer
                UslugaComplex_id:
                  description: 'Идентификатр услуги'
                  type: integer
                EvnLabRequest_Ward:
                  description: Палата
                  type: string
                LabSample:
                  description: Пробы
                  type: string
                EvnLabRequest_BarCode:
                  description: Штрих-код
                  type: string
                ignoreCheckPayType:
                  description: 'Признак игнорирования проверки вида оплаты в исследованиях'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - EvnLabRequest
      summary: 'Создание заявки на лаб. исследование'
      operationId: 'EvnLabRequest::index_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - PersonEvn_id
                - PayType_id
              properties:
                PersonEvn_id:
                  description: 'Идентификатор состояния человека'
                  type: integer
                PayType_id:
                  description: 'Идентификатор вида оплаты'
                  type: integer
                MedService_id:
                  description: 'Идентификатор службы лаборатории'
                  type: integer
                MedService_sid:
                  description: 'Идентификатор службы пункта забора'
                  type: integer
                EvnDirection_id:
                  description: 'Идентификатор направления'
                  type: integer
                EvnDirection_Num:
                  description: 'Номер направления'
                  type: string
                EvnDirection_setDT:
                  description: 'Дата направления'
                  type: string
                  format: date
                EvnDirection_IsCito:
                  description: Cito
                  type: integer
                EvnDirection_Descr:
                  description: Комментарий
                  type: string
                EvnUsluga_id:
                  description: 'Идентификатор заказа на проведение лабораторного исследования'
                  type: integer
                Diag_id:
                  description: 'Идентификатор диагноза'
                  type: integer
                TumorStage_id:
                  description: 'Идентификатор стадии выявленного ЗНО'
                  type: integer
                Mes_id:
                  description: 'Идентификатор МЭС'
                  type: integer
                EvnLabRequest_Comment:
                  description: Комментарий
                  type: string
                EvnLabRequest_IsSigned:
                  description: 'Состояние подписи'
                  type: integer
                EvnLabRequest_pid:
                  description: 'Идентификатор родительского события'
                  type: integer
                EvnLabRequest_rid:
                  description: 'Идентификатор корневого события'
                  type: integer
                EvnLabRequest_setDT:
                  description: 'Дата и время создания заявки'
                  type: string
                  format: date-time
                EvnLabRequest_didDT:
                  description: 'Дата и время'
                  type: string
                  format: date-time
                EvnLabRequest_disDT:
                  description: 'Дата и время'
                  type: string
                  format: date-time
                EvnLabRequest_signDT:
                  description: 'Дата и время подписания'
                  type: string
                  format: date-time
                MedPersonal_id:
                  description: 'Идентификатор врача'
                  type: integer
                MedStaffFact_id:
                  description: 'Идентификатор рабочего места врача'
                  type: integer
                LpuSection_id:
                  description: 'Идентификатор направившего отделения'
                  type: integer
                Lpu_sid:
                  description: 'Идентификатор направившей МО'
                  type: integer
                Org_sid:
                  description: 'Идентификатор направившей организации'
                  type: integer
                PrehospDirect_id:
                  description: 'Идентификатор записи справочника ''Кем направлен'''
                  type: integer
                Morbus_id:
                  description: 'Идентификатор заболевания'
                  type: integer
                Person_id:
                  description: 'Идентификатор человека'
                  type: integer
                pmUser_signID:
                  description: 'Идентификатор подписавшего пользователя'
                  type: integer
                UslugaExecutionType_id:
                  description: 'Идентификатор типа выполнения услуги'
                  type: integer
                UslugaComplex_id:
                  description: 'Идентификатр услуги'
                  type: integer
                EvnLabRequest_Ward:
                  description: Палата
                  type: string
                LabSample:
                  description: Пробы
                  type: string
                EvnLabRequest_BarCode:
                  description: Штрих-код
                  type: string
                ignoreCheckPayType:
                  description: 'Признак игнорирования проверки вида оплаты в исследованиях'
                  type: integer
                Server_id:
                  description: 'Идентификатор сервера'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - EvnLabRequest
      summary: 'Удаление заявки на лаб. исследование'
      operationId: 'EvnLabRequest::index_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabRequest_id
              properties:
                EvnLabRequest_id:
                  description: 'Идентификатор заявки'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/newEvnLabRequests:
    get:
      tags:
        - EvnLabRequest
      summary: 'Получение новых заявкок по человеку на службе'
      operationId: 'EvnLabRequest::newEvnLabRequests_get'
      parameters:
        -
          name: Person_id
          in: query
          description: 'Идентификатор человека'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/compositionMenu:
    get:
      tags:
        - EvnLabRequest
      summary: 'Получение данных состава услуг для меню выбора'
      operationId: 'EvnLabRequest::compositionMenu_get'
      parameters:
        -
          name: EvnDirection_id
          in: query
          description: 'Идентификатор направления'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/LabSample/take:
    post:
      tags:
        - EvnLabRequest
      summary: 'Массовое взятие проб'
      operationId: 'EvnLabRequest::takeLabSample_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                MedServiceType_SysNick:
                  description: 'Системное наименование типа службы'
                  type: string
                MedService_did:
                  description: 'Идентификатор службы, в которой взята проба'
                  type: integer
                EvnLabRequests:
                  description: 'Список идентификаторов заявок в JSON-формате'
                  type: string
                  format: json
                sendToLis:
                  description: 'Признак необходимости отправки в ЛИС (служба АС МЛО)'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/LabSample/cancel:
    post:
      tags:
        - EvnLabRequest
      summary: 'Массовая отмена проб'
      operationId: 'EvnLabRequest::cancelLabSample_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                MedServiceType_SysNick:
                  description: 'Системное наименование типа службы'
                  type: string
                MedService_did:
                  description: 'Идентификатор службы, в которой взята проба'
                  type: integer
                EvnLabRequests:
                  description: 'Список идентификаторов заявок в JSON-формате'
                  type: string
                  format: json
                sendToLis:
                  description: 'Признак необходимости отправки в ЛИС (служба АС МЛО)'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/EvnUslugaPar:
    get:
      tags:
        - EvnLabRequest
      summary: 'Получение услуг по заявке (для печати)'
      operationId: 'EvnLabRequest::EvnUslugaPar_get'
      parameters:
        -
          name: EvnDirections
          in: query
          description: 'Список идентификаторов направлений в JSON-формате'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/approveResult:
    post:
      tags:
        - EvnLabRequest
      summary: 'Массовое одобрение результатов заявок'
      operationId: 'EvnLabRequest::approveResult_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                EvnLabRequests:
                  description: 'Список идентификаторов заявок в JSON-формате'
                  type: string
                  format: json
                onlyNormal:
                  description: 'Флаг неодобрения проб с патологией'
                  type: string
                  format: json
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/EvnDirectionNumber:
    get:
      tags:
        - EvnLabRequest
      summary: 'Генерация номера направления'
      operationId: 'EvnLabRequest::EvnDirectionNumber_get'
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/BarCode/generate:
    get:
      tags:
        - EvnLabRequest
      summary: 'Генерация штрих-кода'
      operationId: 'EvnLabRequest::genBarCode_get'
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/emptySamples:
    delete:
      tags:
        - EvnLabRequest
      summary: 'Удаление пустых проб заявки'
      operationId: 'EvnLabRequest::emptySamples_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabRequest_id
              properties:
                EvnLabRequest_id:
                  description: 'Идентификатор заявки'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/Content:
    post:
      tags:
        - EvnLabRequest
      summary: 'Сохранение состава заявки'
      operationId: 'EvnLabRequest::Content_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnDirection_id
              properties:
                EvnDirection_id:
                  description: 'Идентификатор направления'
                  type: integer
                UslugaComplexContent_ids:
                  description: 'Список идентификаторов услуг в JSON-формате для сохранения в качестве сотава заявки'
                  type: string
                  format: json
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/cancelDirection:
    post:
      tags:
        - EvnLabRequest
      summary: 'Отмена направлений'
      operationId: 'EvnLabRequest::cancelDirection_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnDirection_ids
              properties:
                EvnDirection_id:
                  description: 'Список идентификаторов направлений в JSON-формате'
                  type: string
                  format: json
                EvnStatusCause_id:
                  description: 'Идентификатор причины отмены'
                  type: integer
                EvnStatusHistory_Cause:
                  description: Комментарий
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/LabTestsPrintData:
    get:
      tags:
        - EvnLabRequest
      summary: 'Получение данных маркера для ЭМК'
      operationId: 'EvnLabRequest::LabTestsPrintData_get'
      parameters:
        -
          name: Evn_pid
          in: query
          description: 'Идентификатор родительского события'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/prmTime:
    patch:
      tags:
        - EvnLabRequest
      summary: 'Сохранение времени приема в заявке'
      operationId: 'EvnLabRequest::prmTime_patch'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabRequest_id
                - EvnLabRequest_prmTime
              properties:
                EvnLabRequest_id:
                  description: 'Идентификатор заявки'
                  type: integer
                EvnLabRequest_prmTime:
                  description: 'Время приема'
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/UslugaComplex:
    post:
      tags:
        - EvnLabRequest
      summary: 'Сохранение назначения теста для услуги/пробы'
      operationId: 'EvnLabRequest::UslugaComplex_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabRequest_id
                - EvnLabSample_id
                - EvnUslugaPar_id
                - UslugaComplex_id
              properties:
                EvnLabRequest_id:
                  description: 'Идентификатор заявки'
                  type: integer
                EvnLabSample_id:
                  description: 'Идентификатор пробы'
                  type: integer
                EvnUslugaPar_id:
                  description: 'Идентификатор заказа услуги'
                  type: integer
                UslugaComplex_id:
                  description: 'Идентификатор услуги'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - EvnLabRequest
      summary: 'Удаление назначения теста для услуги/пробы'
      operationId: 'EvnLabRequest::UslugaComplex_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabRequestUslugaComplex_id
              properties:
                EvnLabRequestUslugaComplex_id:
                  description: 'Идентификатор услуги из состава исследования'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/UslugaComplex/includeForPrescr:
    post:
      tags:
        - EvnLabRequest
      summary: 'Включение исследования в заявку по назначению'
      operationId: 'EvnLabRequest::includeUslugaComplexForPrescr_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnPrescr_id
                - EvnDirection_id
                - UslugaComplex_id
              properties:
                EvnPrescr_id:
                  description: 'Идентификатор назначения'
                  type: integer
                EvnDirection_id:
                  description: 'Идентификатор направления'
                  type: integer
                UslugaComplex_id:
                  description: 'Идентификатор услуги'
                  type: integer
                PayType_id:
                  description: 'Идентификатор вида оплаты'
                  type: integer
                UslugaComplexListByPrescr:
                  description: 'Список услуг по назначению в JSON-формате'
                  type: json
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/EvnUslugaPar/recache:
    post:
      tags:
        - EvnLabRequest
      summary: 'Обновление содержания заказа услуги'
      operationId: 'EvnLabRequest::ReCacheEvnUslugaPar_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnUslugaPar_id
              properties:
                EvnUslugaPar_id:
                  description: 'Идентификатор заказа услуги'
                  type: integer
                uslugaList:
                  description: 'Список результатов в JSON-формате'
                  type: json
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/EvnUslugaPar/Result:
    patch:
      tags:
        - EvnLabRequest
      summary: 'Изменение результата в заказе услуги'
      operationId: 'EvnLabRequest::EvnUslugaParResult_patch'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnUslugaPar_id
              properties:
                EvnUslugaPar_id:
                  description: 'Идентификатор заказа услуги'
                  type: integer
                EvnUslugaPar_Result:
                  description: Результат
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/ReCacheLabRequestUslugaCount:
    post:
      tags:
        - EvnLabRequest
      summary: 'Кэширование количества назначенных тестов в заявке'
      operationId: 'EvnLabRequest::ReCacheLabRequestUslugaCount_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabRequest_id
              properties:
                EvnLabRequest_id:
                  description: 'Идентификатор заявки'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/ReCacheLabRequestSampleStatusType:
    post:
      tags:
        - EvnLabRequest
      summary: 'Кэширование статуса проб внутри заявки'
      operationId: 'EvnLabRequest::ReCacheLabRequestSampleStatusType_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabRequest_id
              properties:
                EvnLabRequest_id:
                  description: 'Идентификатор заявки'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/LabRequestUslugaComplexData:
    get:
      tags:
        - EvnLabRequest
      summary: 'Получение данных исследований в услуге'
      operationId: 'EvnLabRequest::LabRequestUslugaComplexData_get'
      parameters:
        -
          name: EvnUslugaPar_id
          in: query
          description: 'Идентификатор услуги'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabRequest/getUslugaComplexList_get:
    get:
      tags:
        - EvnLabRequest
      summary: 'Получение списка услуг в заявке'
      operationId: 'EvnLabRequest::getUslugaComplexList_get'
      parameters:
        -
          name: EvnLabRequest_id
          in: query
          description: 'Идентификатор заявки'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample:
    get:
      tags:
        - EvnLabSample
      summary: 'Получение данных пробы'
      operationId: 'EvnLabSample::index_get'
      parameters:
        -
          name: EvnLabSample_id
          in: query
          description: 'Идентификатор пробы'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - EvnLabSample
      summary: 'Создание пробы'
      operationId: 'EvnLabSample::index_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                EvnLabSample_pid:
                  description: 'Идентификатор родительского события'
                  type: integer
                EvnLabSample_rid:
                  description: 'Идентификатор корневого события'
                  type: integer
                PersonEvn_id:
                  description: 'Идентификатор состояния человека'
                  type: integer
                EvnLabSample_setDT:
                  description: 'Дата и время взятия пробы'
                  type: string
                  format: date-time
                EvnLabSample_disDT:
                  description: Дата
                  type: string
                  format: date
                EvnLabSample_didDT:
                  description: Дата
                  type: string
                  format: date
                Morbus_id:
                  description: 'Идентификатор заболевания'
                  type: integer
                EvnLabSample_IsSigned:
                  description: 'Состояние подписи'
                  type: integer
                pmUser_signID:
                  description: 'Идентификатор подписавшего пользователя'
                  type: integer
                EvnLabSample_signDT:
                  description: 'Дата и время подписания'
                  type: string
                  format: date-time
                EvnLabRequest_id:
                  description: 'Идентификатор заявки'
                  type: integer
                EvnLabSample_Num:
                  description: 'Номер пробы'
                  type: string
                EvnLabSample_BarCode:
                  description: Штрих-код
                  type: string
                EvnLabSample_Comment:
                  description: Комментарий
                  type: string
                RefSample_id:
                  description: 'Идентификатор записи справочника проб'
                  type: integer
                Lpu_did:
                  description: 'Идентификатор МО, взявшей пробу'
                  type: integer
                LpuSection_did:
                  description: 'Идентификатор отделения, взявшего пробу'
                  type: integer
                MedPersonal_did:
                  description: 'Идентификатор врача, взявшего пробу'
                  type: integer
                MedPersonal_sdid:
                  description: 'Идентификатор среднего медперсонала, взявшего пробу'
                  type: integer
                MedService_id:
                  description: 'Идентификатор службы заявки'
                  type: integer
                MedService_did:
                  description: 'Идентификатор службы, взявшей пробу'
                  type: integer
                MedService_sid:
                  description: 'Идентификатор службы, взявшей пробу'
                  type: integer
                EvnLabSample_DelivDT:
                  description: 'Дата и время доставки пробы'
                  type: string
                  format: date-time
                Lpu_aid:
                  description: 'Идентификатор МО, выполнившый анализ'
                  type: integer
                LpuSection_aid:
                  description: 'Идентификатор отделения, выполнившего анализ'
                  type: integer
                MedPersonal_aid:
                  description: 'Идентификатор врача, выполнившего анализ'
                  type: integer
                EvnLabSample_StudyDT:
                  description: 'Идентификатор среднего медперсонала, выполнившего анализ'
                  type: integer
                LabSampleDefectiveType_id:
                  description: 'Идентификатор типа брака пробы'
                  type: integer
                DefectCauseType_id:
                  description: 'Идентификатор причины брака пробы'
                  type: integer
                Analyzer_id:
                  description: 'Идентификатор анализатора'
                  type: integer
                RecordStatus_Code:
                  description: 'Код состояния записи'
                  type: integer
                LabSample_Results:
                  description: Результат
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - EvnLabSample
      summary: 'Отмена взятия проб'
      operationId: 'EvnLabSample::index_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabSample_ids
              properties:
                EvnLabSample_ids:
                  description: 'Список идентификаторов проб в JSON-формате'
                  type: string
                  format: json
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/Comment:
    patch:
      tags:
        - EvnLabSample
      summary: 'Изменение комментария'
      operationId: 'EvnLabSample::Comment_patch'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabSample_id
              properties:
                EvnLabSample_id:
                  description: 'Идентификатор пробы'
                  type: integer
                EvnLabSample_Comment:
                  description: Комментарий
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  '/api/EvnLabSample/ResultCount/{MedService_id}':
    get:
      tags:
        - EvnLabSample
      summary: 'Получение количества проб из ЛИС с результатами'
      operationId: 'EvnLabSample::ResultCount_get'
      parameters:
        -
          name: MedService_id
          in: path
          description: 'Идентификатор службы'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/massApproveResults:
    post:
      tags:
        - EvnLabSample
      summary: 'Массовое одобрение результатов проб'
      operationId: 'EvnLabSample::massApproveResults_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                EvnLabSamples:
                  description: 'Список идентификаторов проб в JSON-формате'
                  type: string
                  format: json
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/RefValues:
    get:
      tags:
        - EvnLabSample
      summary: 'Получение списка референсных значений проб'
      operationId: 'EvnLabSample::RefValues_get'
      parameters:
        -
          name: EvnLabSample_setDT
          in: query
          description: 'Дата и время взятия пробы'
          required: false
          schema:
            type: string
            format: date-time
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnDirection_id
          in: query
          description: 'Идентификатор направления'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Person_id
          in: query
          description: 'Идентификатор человека'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplexTarget_id
          in: query
          description: 'Идентификатор услуги исследования'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_ids
          in: query
          description: 'Список идентификаторов услуг в JSON-формате'
          required: true
          schema:
            type: string
        -
          name: Analyzer_id
          in: query
          description: 'Идентификатор анализатора'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/BarCode:
    get:
      tags:
        - EvnLabSample
      summary: 'Получение списка штрих-кодов'
      operationId: 'EvnLabSample::BarCode_get'
      parameters:
        -
          name: AnalyzerWorksheet_id
          in: query
          description: 'Идентификатор рабочего списка'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    patch:
      tags:
        - EvnLabSample
      summary: 'Сохранение нового штрих-кода пробы'
      operationId: 'EvnLabSample::BarCode_patch'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabSample_id
                - EvnLabSample_BarCode
              properties:
                EvnLabSample_id:
                  description: 'Идентификатор пробы'
                  type: integer
                EvnLabSample_BarCode:
                  description: Штрих-код
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/Num:
    patch:
      tags:
        - EvnLabSample
      summary: 'Сохранение нового номера пробы'
      operationId: 'EvnLabSample::Num_patch'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabSample_id
                - EvnLabSample_ShortNum
              properties:
                EvnLabSample_id:
                  description: 'Идентификатор пробы'
                  type: integer
                EvnLabSample_ShortNum:
                  description: Номер
                  type: int
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/take:
    post:
      tags:
        - EvnLabSample
      summary: 'Взятие пробы'
      operationId: 'EvnLabSample::take_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabRequest_id
              properties:
                EvnLabRequest_id:
                  description: 'Идентификатор заявки'
                  type: integer
                EvnLabSample_id:
                  description: 'Идентификатор пробы'
                  type: integer
                MedServiceType_SysNick:
                  description: 'Системное наименование типа службы'
                  type: string
                MedService_did:
                  description: 'Идентификатор службы, в которой взята проба'
                  type: integer
                RefSample_id:
                  description: 'Идентификатор референсного значения пробы'
                  type: integer
                sendToLis:
                  description: 'Признак необходимости отправки в ЛИС (служба АС МЛО)'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/NumList/generate:
    get:
      tags:
        - EvnLabSample
      summary: 'Сгенерировать перечень номеров без привязки к пробе'
      operationId: 'EvnLabSample::genNumList_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: quantity
          in: query
          description: Количество
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/saveLabSample:
    post:
      tags:
        - EvnLabSample
      summary: 'Сохранение пробы'
      operationId: 'EvnLabSample::saveLabSample_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - MedService_id
                - EvnLabRequest_id
              properties:
                MedService_id:
                  description: 'Идентификатор службы'
                  type: integer
                EvnLabRequest_id:
                  description: 'Идентификатор заявки'
                  type: integer
                RefSample_id:
                  description: 'Идентификатор референсного значения пробы'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/Researches:
    post:
      tags:
        - EvnLabSample
      summary: 'Сохранение исследований'
      operationId: 'EvnLabSample::Researches_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - MedService_id
                - EvnLabRequest_id
                - EvnLabSample_id
              properties:
                MedService_id:
                  description: 'Идентификатор службы'
                  type: integer
                EvnLabRequest_id:
                  description: 'Идентификатор заявки'
                  type: integer
                EvnLabSample_id:
                  description: 'Идентификатор пробы'
                  type: integer
                RefSample_id:
                  description: 'Идентификатор заявки'
                  type: integer
                researches:
                  description: 'Список исследований в JSON-формате'
                  type: string
                  format: json
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/Defect:
    post:
      tags:
        - EvnLabSample
      summary: 'Сохранение отбраковки'
      operationId: 'EvnLabSample::Defect_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - DefectCauseType_id
                - EvnLabSample_BarCode
              properties:
                DefectCauseType_id:
                  description: 'Идентификатор типа брака'
                  type: integer
                EvnLabSample_id:
                  description: 'Идентификатор пробы'
                  type: integer
                EvnLabSample_BarCode:
                  description: Штрих-код
                  type: string
                MedServiceType_SysNick:
                  description: 'Системное наименование типа службы'
                  type: integer
                MedService_sid:
                  description: 'Идентификатор текущей службы'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - EvnLabSample
      summary: 'Удаление отбраковки'
      operationId: 'EvnLabSample::Defect_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabSample_id
              properties:
                EvnLabSample_id:
                  description: 'Идентификатор пробы'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/List:
    get:
      tags:
        - EvnLabSample
      summary: 'Получение списка проб'
      operationId: 'EvnLabSample::List_get'
      parameters:
        -
          name: EvnLabRequest_id
          in: query
          description: 'Идентификатор заявки'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_id
          in: query
          description: 'Идентификатор корневой услуги в заявке'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/Result:
    put:
      tags:
        - EvnLabSample
      summary: 'Изменение результатов теста'
      operationId: 'EvnLabSample::Result_put'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - UslugaTest_id
              properties:
                UslugaTest_id:
                  description: 'Идентификатор теста'
                  type: integer
                UslugaTest_ResultValue:
                  description: Результат
                  type: string
                UslugaTest_setDT:
                  description: 'Дата и время выполнения теста'
                  type: string
                  format: date-time
                UslugaTest_Unit:
                  description: 'Единицы измерения'
                  type: string
                UslugaTest_Comment:
                  description: Комментарий
                  type: string
                UslugaTest_RefValues:
                  description: 'Референсные значения'
                  type: string
                updateType:
                  description: 'Тип изменения'
                  type: string
                sourceName:
                  description: Источник
                  type: string
                EvnLabSample_id:
                  description: 'Идентифифкатор пробы'
                  type: integer
                UslugaTest_Code:
                  description: 'Код теста'
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  '/api/EvnLabSample/Overdue/{MedService_id}':
    get:
      tags:
        - EvnLabSample
      summary: 'Получение количества просроченных проб'
      operationId: 'EvnLabSample::Overdue_get'
      parameters:
        -
          name: MedService_id
          in: path
          description: 'Идентификатор лаборатории'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/Test:
    post:
      tags:
        - EvnLabSample
      summary: 'Назначение тестов'
      operationId: 'EvnLabSample::Test_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                EvnLabSample_id:
                  description: 'Идентификатор пробы'
                  type: integer
                EvnLabRequest_id:
                  description: 'Идентификатор заявки'
                  type: integer
                tests:
                  description: 'Список тестов в JSON-формате'
                  type: string
                  format: json
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - EvnLabSample
      summary: 'Отмена тестов'
      operationId: 'EvnLabSample::Test_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabSample_id
              properties:
                EvnLabSample_id:
                  description: 'Идентификатор пробы'
                  type: integer
                EvnLabRequest_id:
                  description: 'Идентификатор заявки'
                  type: integer
                tests:
                  description: 'Список тестов в JSON-формате'
                  type: string
                  format: json
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/transferResearches:
    post:
      tags:
        - EvnLabSample
      summary: 'Перенос тестов из одной пробы в другую'
      operationId: 'EvnLabSample::transferResearches_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabSample_oldid
                - EvnLabSample_newid
                - tests
              properties:
                EvnLabSample_oldid:
                  description: 'Идентификатор старой пробы'
                  type: integer
                EvnLabSample_newid:
                  description: 'Идентификатор новой пробы'
                  type: integer
                tests:
                  description: 'Список тестов в JSON-формате'
                  type: string
                  format: json
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/approveResults:
    post:
      tags:
        - EvnLabSample
      summary: 'Одобрение результатов пробы'
      operationId: 'EvnLabSample::approveResults_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabSample_id
              properties:
                EvnLabSample_id:
                  description: 'Идентификатор пробы'
                  type: integer
                UslugaTest_id:
                  description: 'Идентификатор теста'
                  type: integer
                UslugaTest_ids:
                  description: 'Список идентификаторов тестов в JSON-формате'
                  type: string
                  format: json
                onlyNorm:
                  description: 'Признак одобрения только результатов в норме'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/unapproveResults:
    post:
      tags:
        - EvnLabSample
      summary: 'Снятие одобрения результатов пробы'
      operationId: 'EvnLabSample::unapproveResults_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabSample_id
              properties:
                EvnLabSample_id:
                  description: 'Идентификатор пробы'
                  type: integer
                UslugaTest_id:
                  description: 'Идентификатор теста'
                  type: integer
                UslugaTest_ids:
                  description: 'Список идентификаторов тестов в JSON-формате'
                  type: string
                  format: json
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/ResultGrid:
    get:
      tags:
        - EvnLabSample
      summary: 'Получение списка результатов пробы'
      operationId: 'EvnLabSample::ResultGrid_get'
      parameters:
        -
          name: EvnDirection_id
          in: query
          description: 'Идентификатор направления'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnLabSample_id
          in: query
          description: 'Идентификатор пробы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: RefSample_id
          in: query
          description: 'Идентификатор референсного значения пробы'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/Usluga:
    get:
      tags:
        - EvnLabSample
      summary: 'Получение списка услуг для пробы'
      operationId: 'EvnLabSample::Usluga_get'
      parameters:
        -
          name: EvnLabSample_id
          in: query
          description: 'Идентификатор пробы'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/Analyzer:
    post:
      tags:
        - EvnLabSample
      summary: 'Выбор анализатора для проб'
      operationId: 'EvnLabSample::Analyzer_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabSamples
              properties:
                Analyzer_id:
                  description: 'Идентификатор анализатора'
                  type: integer
                EvnLabSamples:
                  description: 'Список идентификаторов проб в JSON-формате'
                  type: string
                  format: json
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/WorkList:
    get:
      tags:
        - EvnLabSample
      summary: 'Получение списка проб для рабочего журнала'
      operationId: 'EvnLabSample::WorkList_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: MedServiceType_SysNick
          in: query
          description: 'Системное наименование типа службы'
          required: false
          schema:
            type: string
        -
          name: EvnLabSample_id
          in: query
          description: 'Идентификатор пробы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnDirection_IsCito
          in: query
          description: Cito
          required: false
          schema:
            type: integer
        -
          name: EvnLabSample_IsOutNorm
          in: query
          description: Отклонение
          required: false
          schema:
            type: integer
        -
          name: begDate
          in: query
          description: 'Начало периода'
          required: false
          schema:
            type: string
            format: date
        -
          name: endDate
          in: query
          description: 'Конец периода'
          required: false
          schema:
            type: string
            format: date
        -
          name: LpuSection_id
          in: query
          description: 'Идентификатор отделения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedPersonal_id
          in: query
          description: 'Идентификатор врача'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LabSampleStatus_id
          in: query
          description: 'Идентификатор статуса пробы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LabSampleStatus_id
          in: query
          description: 'Идентификатор статуса пробы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Person_ShortFio
          in: query
          description: ФИО
          required: false
          schema:
            type: string
        -
          name: EvnDirection_Num
          in: query
          description: 'Номер направления'
          required: false
          schema:
            type: string
        -
          name: EvnLabSample_BarCode
          in: query
          description: 'Штрих-код пробы'
          required: false
          schema:
            type: string
        -
          name: EvnLabSample_ShortNum
          in: query
          description: 'Номер пробы'
          required: false
          schema:
            type: string
        -
          name: filterNewELSByDate
          in: query
          description: 'Флаг фильтрации новых проб по дате'
          required: false
          schema:
            type: integer
        -
          name: filterWorkELSByDate
          in: query
          description: 'Флаг фильтрации проб в работе по дате'
          required: false
          schema:
            type: integer
        -
          name: filterDoneELSByDate
          in: query
          description: 'Флаг фильтрации проб с результатами по дате'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/DefectList:
    get:
      tags:
        - EvnLabSample
      summary: 'Получение списка проб для журнала отбраковки'
      operationId: 'EvnLabSample::DefectList_get'
      parameters:
        -
          name: EvnLabSample_id
          in: query
          description: 'Идентификатор пробы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnDirection_IsCito
          in: query
          description: Cito
          required: false
          schema:
            type: integer
            format: int64
        -
          name: begDate
          in: query
          description: 'Начало периода'
          required: false
          schema:
            type: string
            format: date
        -
          name: endDate
          in: query
          description: 'Конец периода'
          required: false
          schema:
            type: string
            format: date
        -
          name: DefectCauseType_id
          in: query
          description: 'Идентификатор причины отбраковки'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: RefMaterial_id
          in: query
          description: 'Идентификатор биоматериала'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_id
          in: query
          description: 'Идентификатор исследования'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSection_id
          in: query
          description: 'Идентификатор отделения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedPersonal_id
          in: query
          description: 'Идентификатор врача'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedService_sid
          in: query
          description: 'Идентификатор текущей службы'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/ListForCandiPicker:
    get:
      tags:
        - EvnLabSample
      summary: 'Получение списка проб-кандидатов'
      operationId: 'EvnLabSample::ListForCandiPicker_get'
      parameters:
        -
          name: AnalyzerWorksheet_id
          in: query
          description: 'Идентификатор рабочего списка'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnLabRequest_BarCode
          in: query
          description: 'Штрих-код пробы'
          required: false
          schema:
            type: string
        -
          name: EvnLabSample_Num
          in: query
          description: 'Номер пробы'
          required: false
          schema:
            type: string
        -
          name: EvnLabSample_ShortNum
          in: query
          description: 'Номер пробы'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/checkUnique:
    get:
      tags:
        - EvnLabSample
      summary: 'Проверка 12-ти значного номера пробы на уникальность'
      operationId: 'EvnLabSample::checkUnique_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор лаборатории'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnLabSample_Num
          in: query
          description: 'Номер пробы'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/ListForWorksheet:
    get:
      tags:
        - EvnLabSample
      summary: 'Получение данных проб для рабочего списка'
      operationId: 'EvnLabSample::ListForWorksheet_get'
      parameters:
        -
          name: AnalyzerWorksheet_id
          in: query
          description: 'Идентификатор рабочего списка'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: start
          in: query
          description: Начало
          required: false
          schema:
            type: integer
            default: 0
        -
          name: limit
          in: query
          description: Количество
          required: false
          schema:
            type: integer
            default: 100
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/Research:
    get:
      tags:
        - EvnLabSample
      summary: 'Получение данных исследования'
      operationId: 'EvnLabSample::Research_get'
      parameters:
        -
          name: EvnUslugaPar_id
          in: query
          description: 'Идентификатор услуги'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - EvnLabSample
      summary: 'Сохранение данных исследования'
      operationId: 'EvnLabSample::Research_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnUslugaPar_id
              properties:
                EvnUslugaPar_id:
                  description: 'Идентификатор услуги'
                  type: integer
                EvnUslugaPar_setDate:
                  description: 'Дата выполнения'
                  type: date
                EvnUslugaPar_setTime:
                  description: 'Время выполнения'
                  type: string
                Lpu_aid:
                  description: 'Идентификатор МО'
                  type: integer
                LpuSection_aid:
                  description: 'Идентификатор отделения'
                  type: integer
                MedPersonal_aid:
                  description: 'Идентификатор врача'
                  type: integer
                MedPersonal_said:
                  description: 'Идентификатор среднего мед.персонала'
                  type: integer
                EvnUslugaPar_Comment:
                  description: Комментарий
                  type: string
                EvnUslugaPar_IndexRep:
                  description: 'Признак повторной подачи'
                  type: integer
                EvnUslugaPar_IndexRepInReg:
                  description: 'Признак вхождения в реестр повторной подачи'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/Research/Comment:
    patch:
      tags:
        - EvnLabSample
      summary: 'Изменения комментария в исследовании'
      operationId: 'EvnLabSample::ResearchComment_patch'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnUslugaPar_id
              properties:
                EvnUslugaPar_id:
                  description: 'Идентификатор услуги'
                  type: integer
                EvnUslugaPar_Comment:
                  description: Комментарий
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/fromUsluga:
    get:
      tags:
        - EvnLabSample
      summary: 'Получение пробы исследования'
      operationId: 'EvnLabSample::fromUsluga_get'
      parameters:
        -
          name: EvnUslugaPar_id
          in: query
          description: 'Идентификатор услуги'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/TestListForm250:
    get:
      tags:
        - EvnLabSample
      summary: 'Получение списка всех тестов для анализа за выбранный день в выбранной лаборатории для столбцов формы 250у'
      operationId: 'EvnLabSample::TestListForm250_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_id
          in: query
          description: 'Идентификатор услуги'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Date
          in: query
          description: Дата
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/SampleListForm250:
    get:
      tags:
        - EvnLabSample
      summary: 'Получение списка взятых проб из лис с результатами (для формы 250у)'
      operationId: 'EvnLabSample::SampleListForm250_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_id
          in: query
          description: 'Идентификатор услуги'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Date
          in: query
          description: Дата
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/EvnUslugaRoot:
    post:
      tags:
        - EvnLabSample
      summary: 'Создание родительской услуги для остальных в исследовании'
      operationId: 'EvnLabSample::EvnUslugaRoot_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabSample_id
              properties:
                EvnLabSample_id:
                  description: 'Идентификатор пробы'
                  type: integer
                UslugaComplex_id:
                  description: 'Идентификатор услуги'
                  type: integer
                EvnDirection_id:
                  description: 'Идентификатор направления'
                  type: integer
                EvnLabRequest_id:
                  description: 'Идентификатор заявки'
                  type: integer
                PersonEvn_id:
                  description: 'Идентификатор состояния человека'
                  type: integer
                EvnPrescr_id:
                  description: 'Идентификатор назначения'
                  type: integer
                PayType_id:
                  description: 'Идентификатор вида оплаты'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/PathologySamples:
    get:
      tags:
        - EvnLabSample
      summary: 'Получение проб для сортировки по патологиям'
      operationId: 'EvnLabSample::PathologySamples_get'
      parameters:
        -
          name: EvnLabSample_id
          in: query
          description: 'Идентификаторы проб'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/PersonBySample:
    get:
      tags:
        - EvnLabSample
      summary: 'Получение данных человека из пробы'
      operationId: 'EvnLabSample::PersonBySample_get'
      parameters:
        -
          name: EvnLabSample_id
          in: query
          description: 'Идентификаторы пробы'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/ResearchHistory:
    get:
      tags:
        - EvnLabSample
      summary: 'Получение истории исследований'
      operationId: 'EvnLabSample::ResearchHistory_get'
      parameters:
        -
          name: EvnLabSample_id
          in: query
          description: 'Идентификаторы пробы'
          required: true
          schema:
            type: string
        -
          name: Codes
          in: query
          description: 'Список кодов услуг'
          required: true
          schema:
            type: string
        -
          name: MinDate
          in: query
          description: 'Дата с'
          schema:
            type: string
        -
          name: MaxDate
          in: query
          description: 'Дата по'
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnLabSample/OnChangeApproveResults:
    post:
      tags:
        - EvnLabSample
      summary: 'Вызов методов при изменении данных по услуге'
      operationId: 'EvnLabSample::OnChangeApproveResults_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnUslugaParChanged
                - pmUser_id
              properties:
                EvnUslugaParChanged:
                  description: 'Идентификатор пробы'
                  type: string
                  format: json
                pmUser_id:
                  description: 'Идентификатор пользователя'
                  type: integer
                MedPersonal_id:
                  description: 'Идентификатор врача'
                  type: integer
                methodAPI:
                  description: Метод
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnPrescr/deleteFromDirection:
    post:
      tags:
        - EvnPrescr
      summary: 'Исключение из направления'
      operationId: 'EvnPrescr::deleteFromDirection_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                EvnPrescr_id:
                  description: 'Идентификатор назначения'
                  type: integer
                parentEvnClass_SysNick:
                  description: 'Системное имя события, породившего назначение'
                  type: string
                PrescriptionType_id:
                  description: 'Тип назначения'
                  type: integer
                EvnDirection_id:
                  description: 'Идентификатор направления'
                  type: integer
                EvnPrescr_IsExec:
                  description: 'Признак выполнения'
                  type: integer
                EvnStatus_id:
                  description: 'Идентификатор статуса направления'
                  type: integer
                DirType_id:
                  description: 'Идентификатор типа направления'
                  type: integer
                UslugaComplex_id:
                  description: 'Идентификатор удаляемой услуги'
                  type: integer
                couple:
                  description: 'Несколько исследований в направлении'
                  type: boolean
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnUsluga/Order:
    post:
      tags:
        - EvnUsluga
      summary: 'Сохранение заказа услуги'
      operationId: 'EvnUsluga::Order_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - Person_id
                - PersonEvn_id
                - order
              properties:
                EvnDirection_id:
                  description: 'Идентификатор направления'
                  type: integer
                EvnPrescr_id:
                  description: 'Идентификатор назначения'
                  type: integer
                EvnLabRequest_id:
                  description: 'Идентификатор заявки'
                  type: integer
                Person_id:
                  description: 'Идентификатор человека'
                  type: integer
                PersonEvn_id:
                  description: 'Идентификатор периодики'
                  type: integer
                order:
                  description: 'Заказ услуг'
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnUsluga/UslugaByPrescr:
    get:
      tags:
        - EvnUsluga
      summary: 'Поиск услуг по назначению'
      operationId: 'EvnUsluga::UslugaByPrescr_get'
      parameters:
        -
          name: EvnPrescr_id
          in: query
          description: 'Идентификатор назначения'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnUsluga/EvnParams:
    get:
      tags:
        - EvnUsluga
      summary: 'Получение данных события'
      operationId: 'EvnUsluga::EvnParams_get'
      parameters:
        -
          name: Evn_id
          in: query
          description: 'Идентификатор события'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnUsluga/ReagentCountByDate:
    get:
      tags:
        - EvnUsluga
      summary: 'Получение списка реактивов и их количества, для конкретной службы на конкретную дату'
      operationId: 'EvnUsluga::ReagentCountByDate_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Date
          in: query
          description: Дата
          required: true
          schema:
            type: string
            format: date
        -
          name: PayType_id
          in: query
          description: 'Идентификатор вида оплаты'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnUsluga/ReagentAutoRateCountOnAnalyser:
    get:
      tags:
        - EvnUsluga
      summary: 'Получение списка услуг для панели направлений в ЭМК'
      operationId: 'EvnUsluga::ReagentAutoRateCountOnAnalyser_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: false
          schema:
            type: integer
            format: int64
            default: 0
        -
          name: begDate
          in: query
          description: 'Начало периода'
          required: false
          schema:
            type: string
            format: date
        -
          name: endDate
          in: query
          description: 'Окончание периода'
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnUsluga/DataForResults:
    get:
      tags:
        - EvnUsluga
      summary: 'Получение данных для создания протокола результатов услуги'
      operationId: 'EvnUsluga::DataForResults_get'
      parameters:
        -
          name: Evn_id
          in: query
          description: 'Идентификатор события'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnUsluga/ParNodeList:
    get:
      tags:
        - EvnUsluga
      summary: 'Список результатов исследований для отображения в дереве ЭМК'
      operationId: 'EvnUsluga::ParNodeList_get'
      parameters:
        -
          name: EvnSection_id
          in: query
          description: 'Идентификатор движения'
          schema:
            type: integer
            format: int64
        -
          name: EvnVizitPL_id
          in: query
          description: 'Идентификатор посещения'
          schema:
            type: integer
            format: int64
        -
          name: EvnVizitPLStom_id
          in: query
          description: 'Идентификатор посещения стоматалогии'
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_id
          in: query
          description: 'Идентификатор КВС'
          schema:
            type: integer
            format: int64
        -
          name: EvnPL_id
          in: query
          description: 'Идентификатор ТАП'
          schema:
            type: integer
            format: int64
        -
          name: EvnPLStom_id
          in: query
          description: 'Идентификатор ТАП стоматалогии'
          schema:
            type: integer
            format: int64
        -
          name: EvnPLDispMigrant_id
          in: query
          description: 'Идентификатор талона освидетельствования'
          schema:
            type: integer
            format: int64
        -
          name: EvnPLDispDriver_id
          in: query
          description: 'Идентификатор талона освидетельствования'
          schema:
            type: integer
            format: int64
        -
          name: type
          in: query
          description: 'Тип отображения'
          schema:
            type: integer
        -
          name: Person_id
          in: query
          description: 'Идентификатор человека'
          schema:
            type: integer
            format: int64
        -
          name: except_ids
          in: query
          description: 'Список идентификаторов для исключения из запроса'
          schema:
            type: string
            format: json
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnUsluga/ParViewData:
    get:
      tags:
        - EvnUsluga
      summary: 'Получение данных о параклинической услуге для отображения в ЭМК'
      operationId: 'EvnUsluga::ParViewData_get'
      parameters:
        -
          name: EvnUslugaPar_id
          in: query
          description: 'Идентификатор услуги'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnUsluga/ParEditForm:
    get:
      tags:
        - EvnUsluga
      summary: 'Получение данных о параклинической услуге для формы редактирования'
      operationId: 'EvnUsluga::ParEditForm_get'
      parameters:
        -
          name: EvnUslugaPar_id
          in: query
          description: 'Идентификатор услуги'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnUsluga/ParSimpleEditForm:
    get:
      tags:
        - EvnUsluga
      summary: 'Получение данных о параклинической услуге для простой формы редактирования'
      operationId: 'EvnUsluga::ParSimpleEditForm_get'
      parameters:
        -
          name: EvnUslugaPar_id
          in: query
          description: 'Идентификатор услуги'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnUsluga/Par:
    put:
      tags:
        - EvnLabSample
      summary: 'Изменение параклинической услуги'
      operationId: 'EvnUsluga::Par_put'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnUslugaPar_id
                - EvnUslugaPar_setDate
              properties:
                EvnUslugaPar_id:
                  description: 'Идентификатор услуги'
                  type: integer
                EvnUslugaPar_pid:
                  description: 'Идентификатор родительского события услуги'
                  type: integer
                EvnUslugaPar_setDate:
                  description: 'Дата оказания услуги'
                  type: string
                  format: date
                EvnUslugaPar_setTime:
                  description: 'Время оказания услуги'
                  type: string
                ignoreKSGChangeCheck:
                  description: 'Признак игнорирования проверки изменения КСГ'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnUsluga/Count:
    get:
      tags:
        - EvnUsluga
      summary: 'Получение количества услуг'
      operationId: 'EvnUsluga::Count_get'
      parameters:
        -
          name: EvnUsluga_pid
          in: query
          description: 'Идентификатор родительского события'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnUsluga/Panel:
    get:
      tags:
        - EvnUsluga
      summary: 'Получение списка услуг в ЭМК'
      operationId: 'EvnUsluga::Panel_get'
      parameters:
        -
          name: EvnUsluga_pid
          in: query
          description: 'Идентификатор родительского события'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnUsluga/ParPanel:
    get:
      tags:
        - EvnUsluga
      summary: 'Получение списка исследований в ЭМК'
      operationId: 'EvnUsluga::ParPanel_get'
      parameters:
        -
          name: Person_id
          in: query
          description: 'Идентификатор человека'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnUslugaPar_rid
          in: query
          description: 'Идентификатор корневого события'
          schema:
            type: integer
            format: int64
        -
          name: start
          in: query
          description: Начало
          schema:
            type: interger
            default: 0
        -
          name: limit
          in: query
          description: Количество
          schema:
            type: interger
            default: 100
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnUsluga/ParPersonHistory:
    get:
      tags:
        - EvnUsluga
      summary: 'История болезни для новой ЭМК'
      operationId: 'EvnUsluga::ParPersonHistory_get'
      parameters:
        -
          name: Person_id
          in: query
          description: 'Идентификатор человека'
          schema:
            type: integer
            format: int64
        -
          name: person_in
          in: query
          description: 'Список идентификаторов людей'
          schema:
            type: string
        -
          name: userLpuUnitType_SysNick
          in: query
          description: 'Тип группы отделений'
          schema:
            type: string
        -
          name: useArchive
          in: query
          description: 'Признак архивных записей'
          schema:
            type: integer
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnUsluga/ListForEvnXml:
    get:
      tags:
        - EvnUsluga
      summary: 'Получение списка услуг для вставки их протоколов через маркер документа'
      operationId: 'EvnUsluga::ListForEvnXml_get'
      parameters:
        -
          name: EvnUsluga_pids
          in: query
          description: 'Список идентификаторов родительских событий'
          required: true
          schema:
            type: string
            format: json
        -
          name: UslugaComplexAttributeType_id
          in: query
          description: 'Идентификатор типа атрибута услуги'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: XmlDataLevel_SysNick
          in: query
          description: Уровень
          schema:
            type: string
        -
          name: code2011list
          in: query
          description: 'Список кодов ГОСТ-2011'
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnUsluga/Grid:
    get:
      tags:
        - EvnUsluga
      summary: 'Получение списка услуг'
      operationId: 'EvnUsluga::Grid_get'
      parameters:
        -
          name: class
          in: query
          description: 'Класс услуги'
          schema:
            type: string
            default: EvnUsluga
        -
          name: parent
          in: query
          description: 'Родительский класс'
          schema:
            type: string
        -
          name: pid
          in: query
          description: 'Идентификатор родительского события'
          schema:
            type: integer
            format: int64
        -
          name: pid_list
          in: query
          description: 'Идентификатор родительского события'
          schema:
            type: string
            format: json
        -
          name: rid
          in: query
          description: 'Идентификатор корневого родительского события'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnUsluga/ViewData:
    get:
      tags:
        - EvnUsluga
      summary: 'Получение данных услуг для отображения в ЭМК'
      operationId: 'EvnUsluga::ViewData_get'
      parameters:
        -
          name: EvnUsluga_id
          in: query
          description: 'Идентификатор услуги'
          schema:
            type: integer
            format: int64
        -
          name: EvnUsluga_pid
          in: query
          description: 'Идентификатор родительского события услуги'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/EvnUsluga/EvnUslugaParInfo:
    get:
      tags:
        - EvnUsluga
      summary: 'Получение данных пар. услуги для создания листа согласования'
      operationId: 'EvnUsluga::EvnUslugaParInfo_get'
      parameters:
        -
          name: EvnUslugaPar_id
          in: query
          description: 'Идентификатор услуги'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/InnovaSysService/makeUnloadRequest:
    post:
      tags:
        - InnovaSysService
      summary: 'Создание одного запроса на выгрузку'
      operationId: 'InnovaSysService::makeUnloadRequest_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                EvnLabRequest_id:
                  description: 'Идентификатор заявки'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/InnovaSysService/makeUnloadRequests:
    post:
      tags:
        - InnovaSysService
      summary: 'Создание многих запросов на выгрузку'
      operationId: 'InnovaSysService::makeUnloadRequests_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                EvnLabRequest_ids:
                  description: 'Список идентификаторов заявок в JSON-формате'
                  type: string
                  format: json
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/InnovaSysService/makeRequests:
    post:
      tags:
        - InnovaSysService
      summary: 'Подготовка к отправке многих новых заявок'
      operationId: 'InnovaSysService::makeRequests_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                EvnLabRequests:
                  description: 'Список идентификаторов заявок в JSON-формате'
                  type: string
                  format: json
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/InnovaSysService/makeRequest:
    post:
      tags:
        - InnovaSysService
      summary: 'Подготовка к отправке одной новой заявки'
      operationId: 'InnovaSysService::makeRequest_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                EvnLabRequest_id:
                  description: 'Идентификатор заявки'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/InnovaSysService/parseRequest:
    post:
      tags:
        - InnovaSysService
      summary: 'Считывание нового результата по заявке от ЛИС'
      operationId: 'InnovaSysService::parseRequest_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                xml:
                  description: 'Путь до файла'
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/InnovaSysService/checkForUpdates:
    get:
      tags:
        - InnovaSysService
      summary: 'Автоматическая проверка обновлений папки ЛИС-МИС'
      operationId: 'InnovaSysService::checkForUpdates_get'
      parameters:
        -
          name: xml
          in: query
          description: 'Путь до файла'
          schema:
            type: strging
        -
          name: dirName
          in: query
          description: 'Начальная папка'
          schema:
            type: strging
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Lis/DirectoryVersions:
    get:
      tags:
        - Lis
      summary: 'Получение информации о текущих версиях справочников'
      operationId: 'Lis::DirectoryVersions_get'
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Lis/listRegistrationJournal:
    get:
      tags:
        - Lis
      summary: 'Выгрузка содержимого заявок'
      operationId: 'Lis::listRegistrationJournal_get'
      parameters:
        -
          name: nr
          in: query
          description: Номер
          schema:
            type: string
        -
          name: dateFrom
          in: query
          description: 'Дата и время поступления заявки «С»'
          schema:
            type: string
            format: date-time
        -
          name: dateTill
          in: query
          description: 'Дата и время поступления заявки «По»'
          schema:
            type: string
            format: date-time
        -
          name: endDateFrom
          in: query
          description: 'Дата и время закрытия заявки «С»'
          schema:
            type: string
            format: date-time
        -
          name: endDateTill
          in: query
          description: 'Дата и время закрытия заявки «По»'
          schema:
            type: string
            format: date-time
        -
          name: lastModificationDateFrom
          in: query
          description: 'Дата последнего изменения заявки «С»'
          schema:
            type: string
            format: date
        -
          name: priority
          in: query
          description: 'Приоритет заявки'
          schema:
            type: string
        -
          name: defectState
          in: query
          description: 'Наличие брака в заявке'
          schema:
            type: string
        -
          name: payCategories
          in: query
          description: 'Множество ссылок на справочник Категория оплаты'
          schema:
            type: string
        -
          name: lastName
          in: query
          description: 'Фамилия пациента'
          schema:
            type: string
        -
          name: firstName
          in: query
          description: 'Имя пациента'
          schema:
            type: string
        -
          name: middleName
          in: query
          description: 'Отчество пациента'
          schema:
            type: string
        -
          name: birthDate
          in: query
          description: 'Дата рождения пациента'
          schema:
            type: string
            format: date
        -
          name: sex
          in: query
          description: 'Пол пациента'
          schema:
            type: string
        -
          name: patientNr
          in: query
          description: 'Номер пациента'
          schema:
            type: string
        -
          name: billNr
          in: query
          description: 'Номер выставленного счета'
          schema:
            type: string
        -
          name: states
          in: query
          description: 'Статусы заявок'
          schema:
            type: string
        -
          name: doctors
          in: query
          description: 'Врачи заказчики'
          schema:
            type: string
        -
          name: hospitals
          in: query
          description: Заказчики
          schema:
            type: string
        -
          name: custDepartments
          in: query
          description: 'Отделение заказчика'
          schema:
            type: string
        -
          name: departments
          in: query
          description: 'Подразделения, в которых выполняется заявка'
          schema:
            type: string
        -
          name: targets
          in: query
          description: 'Исследования, входящие в заявку'
          schema:
            type: string
        -
          name: lastTimestamp
          in: query
          description: 'Метка последнего изменения записи'
          schema:
            type: string
        -
          name: customStates
          in: query
          description: 'Дополнительные статусы заявки'
          schema:
            type: string
        -
          name: requestForms
          in: query
          description: 'Регистрационные формы, при помощи которых создается заявка'
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Lis/RequestSelections:
    post:
      tags:
        - Lis
      summary: 'Отправка набора проб в ЛИС'
      operationId: 'Lis::RequestSelections_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                EvnLabSample_id:
                  description: 'Идентификатор пробы'
                  type: integer
                EvnLabSamples:
                  description: 'Список идентификаторов проб'
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Lis/RequestSelectionsLabRequest:
    post:
      tags:
        - Lis
      summary: 'Отправка набора заявок в ЛИС'
      operationId: 'Lis::RequestSelectionsLabRequest_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                EvnLabRequest_id:
                  description: 'Идентификатор заявки'
                  type: integer
                EvnLabRequests:
                  description: 'Список идентификаторов заявок'
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Lis/ResultSamples:
    get:
      tags:
        - Lis
      summary: 'Получение данных из ЛИС по нескольким пробам'
      operationId: 'Lis::ResultSamples_get'
      parameters:
        -
          name: EvnLabSample_id
          in: query
          description: 'Идентификатор пробы'
          schema:
            type: integer
            format: int64
        -
          name: EvnLabSamples
          in: query
          description: 'Список идентификаторов проб'
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Lis/syncSampleDefects:
    post:
      tags:
        - Lis
      summary: 'Синхронизация данных по отбраковке'
      operationId: 'Lis::syncSampleDefects_post'
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Lis/RequestFromLabSamples:
    post:
      tags:
        - Lis
      summary: ''
      operationId: 'Lis::RequestFromLabSamples_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - EvnLabSample_idsJSON
              properties:
                EvnLabSample_idsJSON:
                  description: 'Список идентификаторов заявок'
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/LisService/checkLabSamples:
    get:
      tags:
        - LisService
      summary: 'Получение результатов из ЛИС по всем отправленным пробам без результата'
      operationId: 'LisService::checkLabSamples_get'
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/LisSpr/EquipmentsGrid:
    get:
      tags:
        - LisSpr
      summary: 'Получение списка анализаторов'
      operationId: 'LisSpr::EquipmentsGrid_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/LisSpr/TestsGrid:
    get:
      tags:
        - LisSpr
      summary: 'Получение списка тестов'
      operationId: 'LisSpr::TestsGrid_get'
      parameters:
        -
          name: UslugaComplexMedService_pid
          in: query
          description: 'Идентификатор родительской услуги'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/LisSpr/EquipmentTestsGrid:
    get:
      tags:
        - LisSpr
      summary: 'Получение списка тестов анализатора ЛИС'
      operationId: 'LisSpr::EquipmentTestsGrid_get'
      parameters:
        -
          name: equipment_id
          in: query
          description: 'Идентификатор анализатора'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/LisSpr/UnitList:
    get:
      tags:
        - LisSpr
      summary: 'Получение списка единиц измерения'
      operationId: 'LisSpr::UnitList_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_id
          in: query
          description: 'Идентификатор услуги'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Analyzer_id
          in: query
          description: 'Идентификатор анализатора'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnUslugaPar_id
          in: query
          description: 'Идентификатор услуги'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: RefValues_id
          in: query
          description: 'Идентификатор референсного значения'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/LisSpr/TestUnitList:
    get:
      tags:
        - LisSpr
      summary: 'Получение списка единиц измерения'
      operationId: 'LisSpr::TestUnitList_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_id
          in: query
          description: 'Идентификатор услуги'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Analyzer_id
          in: query
          description: 'Идентификатор анализатора'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: UslugaTest_id
          in: query
          description: 'Идентификатор услуги'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: RefValues_id
          in: query
          description: 'Идентификатор референсного значения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: UnitOld_id
          in: query
          description: 'Идентификатор старого значения единицы измерения'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/LisUpdater/Directories:
    get:
      tags:
        - LisUpdater
      summary: 'Получение данных определенных справочников'
      operationId: 'LisUpdater::Directories_get'
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - LisUpdater
      summary: 'Создание справочников ЛИС в Промед'
      operationId: 'LisUpdater::Directories_post'
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/LisUpdater/DirectoryVersions:
    get:
      tags:
        - LisUpdater
      summary: 'Получение информации о текущих версиях используемых справочников'
      operationId: 'LisUpdater::DirectoryVersions_get'
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/LisUser:
    get:
      tags:
        - LisUser
      summary: 'Получение учетных данных ЛИС текущего пользователя'
      operationId: 'LisUser::index_get'
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - LisUser
      summary: 'Сохранение учетных данных ЛИС для текущего пользователя'
      operationId: 'LisUser::index_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - MedService_id
                - User_Login
                - User_Password
              properties:
                User_id:
                  description: 'Идентификатор пользователя'
                  type: integer
                MedService_id:
                  description: 'Идентификатор службы'
                  type: integer
                User_ClientId:
                  description: ClientId
                  type: string
                User_Login:
                  description: Логин
                  type: string
                User_Password:
                  description: Пароль
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/MedService/createRefSample:
    post:
      tags:
        - MedService
      summary: 'Объединение услуг в пробу'
      operationId: 'MedService::createRefSample_POST'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - MedService_id
                - RefSample_Name
                - Usluga_ids
              properties:
                MedService_id:
                  description: 'Идентификатор службы'
                  type: integer
                RefMaterial_id:
                  description: 'Идентификатор биоматериала'
                  type: integer
                RefSample_Name:
                  description: 'Наименование пробы'
                  type: string
                Usluga_ids:
                  description: 'Список идентификаторов услуг'
                  type: string
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/MedService/loadEditForm:
    post:
      tags:
        - MedService
      summary: 'Загрузка информации о службе для формы редактирования'
      operationId: 'MedService::loadEditForm_POST'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - MedService_id
              properties:
                MedService_id:
                  description: 'Идентификатор службы'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/MedService/UslugaComplexMedServiceGridChild:
    get:
      tags:
        - MedService
      summary: 'Получение состава услуг для настройки проб и биоматериала'
      operationId: 'MedService::UslugaComplexMedServiceGridChild_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplexMedService_id
          in: query
          description: 'Идентификатор связи услуги и службы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Urgency_id
          in: query
          description: 'Идентификатор актуальности'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_pid
          in: query
          description: 'Идентификатор родителской услуги'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/MedService/UslugaComplexMedServiceGrid:
    get:
      tags:
        - MedService
      summary: 'Получение состава услуг для формы добавления исследования к заявке в арм лаборанта'
      operationId: 'MedService::UslugaComplexMedServiceGrid_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplexMedService_id
          in: query
          description: 'Идентификатор связи услуги и службы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Urgency_id
          in: query
          description: 'Идентификатор актуальности'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_pid
          in: query
          description: 'Идентификатор родителской услуги'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/MedService/ApproveRights:
    get:
      tags:
        - MedService
      summary: 'Получить права врача на данной службе (право одобрять пробы)'
      operationId: 'MedService::ApproveRights_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedServiceMedPersonal_id
          in: query
          description: 'Идентификатор врача службы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedPersonal_id
          in: query
          description: 'Идентификатор врача'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/MedService/MedServiceList:
    get:
      tags:
        - MedService
      summary: 'Читает для комбобокса MedService'
      operationId: 'MedService::MedServiceList_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Lpu_isAll
          in: query
          description: 'Все ЛПУ?'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ARMType
          in: query
          description: 'Тип арма'
          required: false
          schema:
            type: string
        -
          name: MedServiceTypeIsLabOrFenceStation
          in: query
          description: 'Тип службы - Лаборатории и Пункты забора'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/MedService/MedServiceGrid:
    get:
      tags:
        - MedService
      summary: 'Получение списка служб'
      operationId: 'MedService::MedServiceGrid_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedService_sid
          in: query
          description: 'Идентификатор службы'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Org/List:
    get:
      tags:
        - Org
      summary: 'Получение данных человека'
      operationId: 'Org::List_get'
      parameters:
        -
          name: Org_id
          in: query
          description: 'Идентификатор организации'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Person:
    get:
      tags:
        - Person
      summary: 'Получение данных человека'
      operationId: 'Person::index_get'
      parameters:
        -
          name: Person_id
          in: query
          description: 'Идентификатор человека'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Person/search:
    get:
      tags:
        - Person
      summary: 'Поиск людей'
      operationId: 'Person::search_get'
      parameters:
        -
          name: start
          in: query
          description: 'Номер начальной записи'
          required: false
          schema:
            type: integer
            default: 0
        -
          name: limit
          in: query
          description: 'Количество записей'
          schema:
            type: integer
            default: 100
        -
          name: getPersonWorkFields
          in: query
          description: 'Признак необходимости вытаскивать наименование организации'
          schema:
            type: integer
        -
          name: getPersonWorkFields
          in: query
          description: 'Признак необходимости вытаскивать наименование организации'
          schema:
            type: integer
        -
          name: ParentARM
          in: query
          description: 'Тип АРМа'
          schema:
            type: string
        -
          name: soc_card_id
          in: query
          description: 'Идентификатор социальной карты'
          schema:
            type: string
        -
          name: Person_id
          in: query
          description: 'Идентификатор человека'
          schema:
            type: integer
            format: int64
        -
          name: showAll
          in: query
          description: 'Показать всех'
          schema:
            type: integer
        -
          name: PersonSurName_SurName
          in: query
          description: Фамилия
          schema:
            type: string
        -
          name: PersonFirName_FirName
          in: query
          description: Имя
          schema:
            type: string
        -
          name: PersonSecName_SecName
          in: query
          description: Отчество
          schema:
            type: string
        -
          name: PersonBirthDay_BirthDay
          in: query
          description: 'День рождения'
          schema:
            type: string
            format: date
        -
          name: personBirtDayFrom
          in: query
          description: 'День рождения с'
          schema:
            type: string
            format: date
        -
          name: personBirtDayTo
          in: query
          description: 'День рождения по'
          schema:
            type: string
            format: date
        -
          name: PersonAge_AgeFrom
          in: query
          description: 'Вовраст с'
          schema:
            type: integer
        -
          name: PersonAge_AgeTo
          in: query
          description: 'Вовраст по'
          schema:
            type: integer
        -
          name: PersonBirthYearFrom
          in: query
          description: 'Год рождения с'
          schema:
            type: integer
        -
          name: PersonBirthYearTo
          in: query
          description: 'Год рождения по'
          schema:
            type: integer
        -
          name: Person_Snils
          in: query
          description: СНИЛС
          schema:
            type: string
        -
          name: Person_Snils
          in: query
          description: СНИЛС
          schema:
            type: string
        -
          name: Person_Inn
          in: query
          description: ИНН
          schema:
            type: integer
        -
          name: PersonCard_id
          in: query
          description: 'Идентифкатор прикрепления'
          schema:
            type: integer
            format: int64
        -
          name: PersonCard_Code
          in: query
          description: 'Код прикрепления'
          schema:
            type: string
        -
          name: PolisFormType_id
          in: query
          description: 'Идентифкатор формы полиса'
          schema:
            type: integer
            format: int64
        -
          name: Polis_Ser
          in: query
          description: 'Серия полиса'
          schema:
            type: string
        -
          name: Polis_Num
          in: query
          description: 'Номер полиса'
          schema:
            type: string
        -
          name: Polis_EdNum
          in: query
          description: 'Единый номер полиса'
          schema:
            type: string
        -
          name: EvnUdost_Ser
          in: query
          description: 'Серия полиса'
          schema:
            type: string
        -
          name: EvnUdost_Num
          in: query
          description: 'Номер полиса'
          schema:
            type: string
        -
          name: EvnPS_NumCard
          in: query
          description: 'Номер КВС'
          schema:
            type: string
        -
          name: searchMode
          in: query
          description: 'Режим поиска'
          schema:
            type: string
        -
          name: Year
          in: query
          description: 'Год включения в регистр'
          schema:
            type: integer
        -
          name: Sex_id
          in: query
          description: 'Идентфикатор пола'
          schema:
            type: integer
            format: int64
        -
          name: PersonRegisterType_id
          in: query
          description: 'Идентификатор типа регситра'
          schema:
            type: integer
            format: int64
        -
          name: DrugRequestPeriod_id
          in: query
          description: 'Идентификатор рабочего периода заявки'
          schema:
            type: integer
            format: int64
        -
          name: LpuRegion_id
          in: query
          description: 'Идентификатор участка'
          schema:
            type: integer
            format: int64
        -
          name: PersonRefuse_IsRefuse
          in: query
          description: 'Признак отказа от льготы'
          schema:
            type: integer
        -
          name: search_type
          in: query
          description: 'Тип поиска'
          schema:
            type: string
        -
          name: oneQuery
          in: query
          description: 'Отсутствие запроса count'
          schema:
            type: integer
        -
          name: checkForMainDB
          in: query
          description: 'Проверка на основной базе'
          schema:
            type: integer
        -
          name: Person_ids
          in: query
          description: 'Список идентификаторов людей'
          schema:
            type: string
        -
          name: armMode
          in: query
          description: 'АРМ вызова запроса'
          schema:
            type: string
        -
          name: getCountOnly
          in: query
          description: 'Вывод только количества'
          schema:
            type: integer
        -
          name: isNotDead
          in: query
          description: ''
          schema:
            type: integer
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/QualitativeTestAnswerAnalyzerTest:
    get:
      tags:
        - QualitativeTestAnswerAnalyzerTest
      summary: 'Получение данных'
      operationId: 'QualitativeTestAnswerAnalyzerTest::index_get'
      parameters:
        -
          name: QualitativeTestAnswerAnalyzerTest_id
          in: query
          description: Идентификатор
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - QualitativeTestAnswerAnalyzerTest
      summary: Сохранение
      operationId: 'QualitativeTestAnswerAnalyzerTest::index_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - QualitativeTestAnswerAnalyzerTest_id
                - QualitativeTestAnswerAnalyzerTest_Answer
                - AnalyzerTest_id
              properties:
                QualitativeTestAnswerAnalyzerTest_id:
                  description: Идентификатор
                  type: integer
                QualitativeTestAnswerAnalyzerTest_Answer:
                  description: 'Вариант ответа'
                  type: string
                AnalyzerTest_id:
                  description: 'Идентификатор теста анализатора'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - QualitativeTestAnswerAnalyzerTest
      summary: Удаление
      operationId: 'QualitativeTestAnswerAnalyzerTest::index_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - QualitativeTestAnswerAnalyzerTest_id
              properties:
                QualitativeTestAnswerAnalyzerTest_id:
                  description: Идентификатор
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/QualitativeTestAnswerAnalyzerTest/list:
    get:
      tags:
        - QualitativeTestAnswerAnalyzerTest
      summary: 'Получение списка'
      operationId: 'QualitativeTestAnswerAnalyzerTest::list_get'
      parameters:
        -
          name: QualitativeTestAnswerAnalyzerTest_id
          in: query
          description: Идентификатор
          schema:
            type: integer
            format: int64
        -
          name: QualitativeTestAnswerAnalyzerTest_Answer
          in: query
          description: 'Вариант ответа'
          schema:
            type: string
        -
          name: AnalyzerTest_id
          in: query
          description: 'Идентификатор теста анализатора'
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerTestRefValues_id
          in: query
          description: 'Идентификатор теста анализатора'
          schema:
            type: integer
            format: int64
        -
          name: UslugaTest_id
          in: query
          description: 'Идентификатор теста'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/QualitativeTestAnswerReferValue:
    get:
      tags:
        - QualitativeTestAnswerReferValue
      summary: 'Получение данных'
      operationId: 'QualitativeTestAnswerReferValue::index_get'
      parameters:
        -
          name: QualitativeTestAnswerReferValue_id
          in: query
          description: Идентификатор
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - QualitativeTestAnswerReferValue
      summary: Сохранение
      operationId: 'QualitativeTestAnswerReferValue::index_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - QualitativeTestAnswerReferValue_id
                - AnalyzerTestRefValues_id
                - QualitativeTestAnswerAnalyzerTest_id
              properties:
                QualitativeTestAnswerReferValue_id:
                  description: Идентификатор
                  type: integer
                AnalyzerTestRefValues_id:
                  description: 'Идентификатор референсного значения теста'
                  type: integer
                QualitativeTestAnswerAnalyzerTest_id:
                  description: 'Идентификатор варианта ответа'
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - QualitativeTestAnswerReferValue
      summary: Удаление
      operationId: 'QualitativeTestAnswerReferValue::index_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - QualitativeTestAnswerReferValue_id
              properties:
                QualitativeTestAnswerReferValue_id:
                  description: Идентификатор
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/QualitativeTestAnswerReferValue/list:
    get:
      tags:
        - QualitativeTestAnswerReferValue
      summary: 'Получение списка'
      operationId: 'QualitativeTestAnswerReferValue::list_get'
      parameters:
        -
          name: QualitativeTestAnswerReferValue_id
          in: query
          description: Идентификатор
          schema:
            type: integer
            format: int64
        -
          name: AnalyzerTestRefValues_id
          in: query
          description: 'Идентификатор референсного значения теста'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/QuantitativeTestUnit:
    get:
      tags:
        - QuantitativeTestUnit
      summary: 'Получение данных'
      operationId: 'QuantitativeTestUnit::index_get'
      parameters:
        -
          name: QuantitativeTestUnit_id
          in: query
          description: Идентификатор
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    post:
      tags:
        - QuantitativeTestUnit
      summary: Сохранение
      operationId: 'QuantitativeTestUnit::index_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - Unit_id
                - AnalyzerTest_id
              properties:
                QuantitativeTestUnit_id:
                  description: Идентификатор
                  type: integer
                Unit_id:
                  description: 'Идентификатор единицы измерения'
                  type: integer
                QuantitativeTestUnit_IsBase:
                  description: 'Признак базовой единицы'
                  type: integer
                QuantitativeTestUnit_CoeffEnum:
                  description: 'Коэффициент пересчета'
                  type: number
                AnalyzerTest_id:
                  description: 'Идентификатор теста анализатора'
                  type: interger
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
    delete:
      tags:
        - QuantitativeTestUnit
      summary: Удаление
      operationId: 'QuantitativeTestUnit::index_delete'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - QuantitativeTestUnit_id
              properties:
                QuantitativeTestUnit_id:
                  description: Идентификатор
                  type: integer
              type: object
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/QuantitativeTestUnit/list:
    get:
      tags:
        - QuantitativeTestUnit
      summary: 'Получение списка'
      operationId: 'QuantitativeTestUnit::list_get'
      parameters:
        -
          name: AnalyzerTest_id
          in: query
          description: 'Идентификатор теста анализатора'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Utils/List:
    get:
      tags:
        - Utils
      summary: 'Получение списка ЛПУ'
      operationId: 'Utils::List_get'
      parameters:
        -
          name: filterLpu_id
          in: query
          description: 'Идентификатор МО'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
  /api/Utils/withFileIntegration:
    get:
      tags:
        - Utils
      summary: 'Получение списка ЛПУ'
      operationId: 'Utils::withFileIntegration_get'
      parameters:
        -
          name: MedService_id
          in: query
          description: 'Идентификатор мед. службы'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema: {  }
tags:
  -
    name: Analyzer
    description: Анализаторы
  -
    name: AnalyzerControlSeries
    description: 'Результаты измерения контрольной серии'
  -
    name: AnalyzerModel
    description: 'Модели анализаторов'
  -
    name: AnalyzerRack
    description: Штативы
  -
    name: AnalyzerTest
    description: 'Тесты анализаторов'
  -
    name: AnalyzerTestRefValues
    description: 'Связь тестов анализаторов и референтных значений'
  -
    name: AnalyzerTestUslugaComplex
    description: 'Связь тестов с услугами'
  -
    name: AnalyzerTestWorksheetType
    description: 'Связь тестов с типами рабочего списка'
  -
    name: AnalyzerWorksheet
    description: 'Рабочие списки'
  -
    name: AnalyzerWorksheetEvnLabSample
    description: 'Список проб рабочего списка'
  -
    name: AnalyzerWorksheetType
    description: 'Тип рабочих списков'
  -
    name: AsMlo
    description: 'Взаимодействие с сервисом АсМло'
  -
    name: Common
    description: Общее
  -
    name: EMD
    description: 'Электронные медицинские документы'
  -
    name: Evn
    description: События
  -
    name: EvnDirection
    description: 'Направления на лабораторные исследования'
  -
    name: EvnLabRequest
    description: Заявки
  -
    name: EvnLabSample
    description: Пробы
  -
    name: EvnPrescr
    description: Назначения
  -
    name: EvnUsluga
    description: Услуги
  -
    name: EvnUslugaPar
    description: 'Параклинические услуги'
  -
    name: InnovaSysService
    description: 'Интеграция с Innova Systems ЛИС'
  -
    name: Lis
    description: 'Взаимодействие со службой ЛИС'
  -
    name: LisService
    description: 'Взаимодействие со службой ЛИС'
  -
    name: LisSpr
    description: 'Справочники ЛИС'
  -
    name: LisUpdater
    description: 'Обновление справочников ЛИС'
  -
    name: LisUser
    description: 'Пользователь ЛИС'
  -
    name: MedService
    description: Службы
  -
    name: Org
    description: Организации
  -
    name: Person
    description: Люди
  -
    name: QualitativeTestAnswerAnalyzerTest
    description: 'Соответствия конкретных ответов конкретному качественному тесту'
  -
    name: QualitativeTestAnswerReferValue
    description: 'Референсныне значения для ответов на качественные тесты'
  -
    name: QuantitativeTestUnit
    description: 'Единицы измерений количественных тестов'
  -
    name: Utils
    description: утилиты
