openapi: 3.0.0
info:
  title: SwServiceRish
  version: '1.0'
paths:
  /api/rish/BirthSpecStac/mCheckingMovementAndPregnancyOutcome:
    get:
      tags:
        - BirthSpecStac
      summary: 'метод проверки связи движения и исхода беременности'
      operationId: 'BirthSpecStac::mCheckingMovementAndPregnancyOutcome_get'
      parameters:
        -
          name: EvnSection_id
          in: query
          description: Движение
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'код ошибки', type: string }
                  data: { description: данные, type: array, items: { properties: { BirthSpecStac_OutcomDT: { description: 'Специфика по родам в карте КВС, Дата и время исхода', type: string }, BirthSpecStac_CountPregnancy: { description: 'Специфика по родам в карте КВС, Которая беременность', type: string }, PregnancyResult_Name: { description: 'Справочник типов результатов беременности, наименование', type: string }, BirthSpecStac_OutcomPeriod: { description: 'Специфика по родам в карте КВС, Срок исхода (нед)', type: string }, BirthSpecStac_CountChild: { description: 'Специфика по родам в карте КВС, Количество плодов', type: string }, BirthSpecStac_BloodLoss: { description: 'Специфика по родам в карте КВС, Кровопотери (мл)', type: string }, AbortLpuPlaceType_Name: { description: 'Место аборта, наименование', type: string }, AbortLawType_Name: { description: 'Вид аборта (легальный/криминальный), наименование', type: string }, AbortMethod_Name: { description: 'Метод аборта, наименование', type: string }, AbortIndicat_Name: { description: 'Показания при оборте, наименование', type: string }, BirthSpecStac_InjectVMS: { description: 'Специфика по родам в карте КВС, Введено ВМС', type: string }, BirthPlace_Name: { description: 'Справочник свидетельств о рождении: место принятия родов, наименование', type: string }, BirthSpecStac_CountBirth: { description: 'Специфика по родам в карте КВС, Роды которые', type: string }, BirthSpec_Name: { description: 'Справочник спецификаций родов, наименование', type: string }, BirthCharactType_Name: { description: 'Справочник типов результатов родов, наименование', type: string }, BirthSpecStac_CountChildAlive: { description: 'Специфика по родам в карте КВС, Количество плодов живорожденных', type: string } }, type: object } }
                type: object
  /api/EvnDiag/mSaveEvnDiagPS:
    post:
      tags:
        - EvnDiag
      summary: 'Сохранение диагноза для стационара'
      operationId: 'EvnDiag::mSaveEvnDiagPS_post'
      parameters:
        -
          name: Diag_id
          in: query
          description: Диагноз
          required: true
          schema:
            type: integer
            format: int64
        -
          name: DiagSetPhase_id
          in: query
          description: Фаза/стадия
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnDiagPS_PhaseDescr
          in: query
          description: Расшифровка
          required: false
          schema:
            type: string
        -
          name: DiagSetClass_id
          in: query
          description: 'Вид диагноза'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: DiagSetType_id
          in: query
          description: 'Тип диагноза'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnDiagPS_id
          in: query
          description: 'Идентификатор диагноза'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnDiagPS_pid
          in: query
          description: 'Идентификатор родительского события'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnDiagPS_setDate
          in: query
          description: 'Дата установки диагноза'
          required: true
          schema:
            type: string
            format: date
        -
          name: EvnDiagPS_setTime
          in: query
          description: 'Время установки диагноза'
          required: false
          schema:
            type: string
        -
          name: Person_id
          in: query
          description: 'Идентификатор человека'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: PersonEvn_id
          in: query
          description: 'Идентификатор состояния человека'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Server_id
          in: query
          description: 'Идентификатор сервера'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  success: { description: 'Результат выполнения', type: string }
                type: object
  /api/EvnDirection/mLoadEvnDirectionList:
    get:
      tags:
        - EvnDirection
      summary: 'Загрузка списка направлений из формы выбора направления'
      operationId: 'EvnDirection::mLoadEvnDirectionList_get'
      parameters:
        -
          name: useCase
          in: query
          description: "Вариант использования\r\n  *     load_evn_direction_all_info_panel\r\n  *     addEvnVizitPLStom\r\n  *     addEvnVizitPL\r\n  *     load_data_for_auto_create_tap\r\n  *     load_data_for_create_tap_consult -\r\n  *     choose_for_evnpl_stream_input - выбираем для ТАП, но при операторском вводе (не из АРМа)\r\n  *     choose_for_evnplstom_stream_input - выбираем для ТАП, но при операторском вводе (не из АРМа)\r\n  *     choose_for_evnpl - выбираем для ТАП из АРМа врача поликлиники\r\n  *     choose_for_evnplstom - выбираем для ТАП из АРМа стоматолога\r\n  *     create_evnplstom_without_recording - тоже самое, только выбираем при приеме без записи из формы АРМа врача\r\n  *     create_evnpl_without_recording - тоже самое, только выбираем при приеме без записи из формы АРМа врача\r\n  *     choose_for_evnps_stream_input - выбираем для КВС из форма редактирования КВС, но при операторском вводе (не из АРМа)\r\n  *     self_treatment-тоже самое, только выбираем при приеме без записи из рабочего места врача приемного отделения\r\n  *     choose_for_evnps-выбираем для КВС из форма редактирования КВС, открытой из АРМа врача стационара\r\n  *     create_evnps_from_workplacestac - тоже самое, только выбираем при приеме из формы АРМа врача стационара\r\n  *     check_exists_dir_stac_in_evn\r\n  *     choose_for_evnvizitpl_link"
          required: false
          schema:
            type: string
        -
          name: TimetableGraf_id
          in: query
          description: 'Идентификатор бирки'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Evn_id
          in: query
          description: 'Идентификатор ТАП/КВС'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnDirection_id
          in: query
          description: 'Идентификатор направления'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: onDate
          in: query
          description: Дата
          required: false
          schema:
            type: string
            format: date
        -
          name: parentClass
          in: query
          description: 'Тип формы'
          required: false
          schema:
            type: string
        -
          name: Person_id
          in: query
          description: 'Идентификатор пациента'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: MedStaffFact_id
          in: query
          description: 'Идентификатор рабочего места'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSection_id
          in: query
          description: 'Идентификатор отделения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: formType
          in: query
          description: 'Идентификатор отделения'
          required: false
          schema:
            type: string
        -
          name: DirType_id
          in: query
          description: 'Тип направления'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Lpu_did
          in: query
          description: 'Идентификатор ЛПУ'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnDirection_pid
          in: query
          description: 'Родительский идентификатор направления'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSectionProfile_did
          in: query
          description: 'Идентификатор отделения'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { MedicalCareFormType_id: { description: 'Форма помощи', type: integer }, MedPersonal_id: { description: 'Кэш врачей, идентификатор медицинского работника', type: integer }, Diag_id: { description: 'Справочник диагнозов, идентификатор', type: integer }, EvnDirection_IsAuto: { description: 'Выписка направлений, автоматически созданное направление', type: boolean }, EvnDirection_IsReceive: { description: 'Выписка направлений, признак создания направления принимающей стороной', type: boolean }, Lpu_id: { description: 'справочник ЛПУ, ЛПУ', type: integer }, Org_id: { description: 'Cправочник организаций, Идентификатор', type: integer }, UslugaComplex_id: { description: 'Комплексные услуги, идентификатор', type: integer }, UslugaComplex_Name: { description: 'Комплексные услуги, наименование', type: string }, Lpu_Name: { description: 'Наименование ЛПУ', type: string }, LpuSectionProfile_Name: { description: 'Профиль отделения в ЛПУ, наименование', type: string }, Timetable_begTime: { description: 'Дата начала бирки', type: string }, DirType_Name: { description: 'Справочник назначений направления, наименование', type: string }, Lpu_dNick: { description: 'Ник ЛПУ куда направили пациента', type: string }, enabled: { description: 'Пока хз что это', type: string }, LpuBuildingType_id: { description: 'Тип здания ЛПУ, идентификатор', type: integer }, EvnDirection_id: { description: 'Выписка направлений, идентификатор', type: integer }, EvnDirection_setDate: { description: 'Дата направления', type: string }, EvnDirection_Num: { description: 'Выписка направлений, номер направления', type: string }, LpuSection_id: { description: 'Справочник ЛПУ: отделения, идентификатор', type: integer }, MedStaffFact_id: { description: 'Кэш мест работы, идентификатор места работы', type: integer }, Diag_Name: { description: 'Справочник диагнозов, наименование', type: string }, DirType_id: { description: 'Справочник назначений направления, идентификатор', type: integer }, Lpu_sid: { description: 'Направившее ЛПУ', type: string }, EvnStatus_id: { description: 'статус события, идентификатор', type: integer }, TimetableGraf_id: { description: 'Идентификатор бирки', type: integer }, TimetableStac_id: { description: 'Идентификатор бирки для стационара', type: integer }, TimetableMedService_id: { description: 'Идентификатор бирки для службы', type: integer }, TimetableResource_id: { description: 'Идентификатор бирки для ресурса', type: integer }, EvnQueue_id: { description: 'Постановка в очередь, Идентификатор постановки в очередь', type: integer }, EmergencyData_CallNum: { description: 'Данные о вызове скорой помощи, номер вызова', type: string }, EvnDirection_IsVMP: { description: 'хз, что это. Там условие case when ed.DirType_id = 19 then ''true'' else ''false'' end as EvnDirection_IsVMP а у нас нет DirType=19 в тестовой базе', type: boolean }, MedStaffFact_did: { description: 'Врач, к которому записываемся', type: string }, MSF_Person_Fin: { description: 'Фио врача', type: string } }, type: object } }
                type: object
  /api/rish/EvnDrug/mWriteoffMedicament:
    post:
      tags:
        - EvnDrug
      summary: 'Описание метода'
      operationId: 'EvnDrug::mWriteoffMedicament_post'
      parameters:
        -
          name: MSF_MedPersonal_id
          in: query
          description: 'идентификатор сотрудника (MedPersonal_id)'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnDrug_Price
          in: query
          description: 'цена за единицу товара в партии (DocumentUcStr_Price)'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnDrug_Sum
          in: query
          description: 'цена за единицу товара в партии (DocumentUcStr_Price)'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnDrug_id
          in: query
          description: 'идентификатор назначения медикаментов (null)'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnDrug_rid
          in: query
          description: 'идентификатор события-потомка'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Person_id
          in: query
          description: 'идентификатор человека'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: DocumentUc
          in: query
          description: 'идентификатор документа учета'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: DocumentUcStr_id
          in: query
          description: 'идентификатор строки документа учета (null)'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonEvn_id
          in: query
          description: 'идентификатор события человека'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Server_id
          in: query
          description: 'идентификатор сервера'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnDrug_pid
          in: query
          description: 'идентификатор родительского события'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnDrug_setDate
          in: query
          description: 'дата выполнения назначения'
          required: true
          schema:
            type: string
            format: date
        -
          name: EvnDrug_setTime
          in: query
          description: 'время выполнения назначения'
          required: true
          schema:
            type: string
        -
          name: LpuSection_id
          in: query
          description: 'идентификатор отделения'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Storage_id
          in: query
          description: 'идентификатор склада'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Mol_id
          in: query
          description: 'идентификатор ответственного лица (МОЛ)'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnPrescrTreatDrug_id
          in: query
          description: 'идентификатор медикамента в назначении'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnPrescrTreat_Fact
          in: query
          description: 'количество приемов (=1)'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PrescrFactCountDiff
          in: query
          description: 'количество приемов (=1)'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPrescr_id
          in: query
          description: 'идентификатор назначения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnCourseTreatDrug_id
          in: query
          description: 'идентификатор медикаментов в курсе лекарственного лечения'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnCourse_id
          in: query
          description: 'идентификатор курса лечения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: DrugPrepFas_id
          in: query
          description: 'идентификатор препарата'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Drug_id
          in: query
          description: 'идентификатор медикамента'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: DocumentUcStr_oid
          in: query
          description: 'идентификатор партии'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: GoodsUnit_bid
          in: query
          description: 'базовая единица учета поля количество'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: GoodsPackCount_bCount
          in: query
          description: 'количество единиц измерения товара в упаковке'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: GoodsUnit_id
          in: query
          description: 'единица измерения товара'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnDrug_Kolvo_Show
          in: query
          description: EvnDrug_Kolvo
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnDrug_Kolvo
          in: query
          description: 'количество медикаментов'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnDrug_KolvoEd
          in: query
          description: 'количество единиц списания'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { EvnDrug_id: { description: 'Событие, Идентификатор события', type: integer } }, type: object } }
                type: object
  /api/rish/EvnFuncRequest/mLoadEvnFuncRequestList:
    get:
      tags:
        - EvnFuncRequest
      summary: 'Получение списка заявок ФД'
      operationId: 'EvnFuncRequest::mLoadEvnFuncRequestList_get'
      parameters:
        -
          name: FuncRequest_begDate
          in: query
          description: 'Начало периода'
          required: true
          schema:
            type: string
            format: date
        -
          name: FuncRequest_endDate
          in: query
          description: 'Окончание периода'
          required: true
          schema:
            type: string
            format: date
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Person_FIO
          in: query
          description: ФИО
          required: false
          schema:
            type: string
        -
          name: EvnDirection_IsCito
          in: query
          description: 'Только Cito!'
          required: false
          schema:
            type: string
        -
          name: UslugaComplex_id
          in: query
          description: 'Идентификатор услуги'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { group_name: { description: 'имя группы', type: string }, list: { description: 'Список объектов', type: array, items: { properties: { TimetableMedService_id: { description: 'Идентификатор бирки', type: integer }, EvnFuncRequest_id: { description: 'Заявка на исследование, Идентификатор заявки', type: integer }, group_name: { description: 'Имя группы', type: string }, TimetableMedService_begDate: { description: 'Дата приема', type: string }, TimetableMedService_begTime: { description: 'Время приема', type: string }, TimetableMedService_Type: { description: 'Тип расписания', type: string }, EvnDirection_IsCito: { description: 'Выписка направлений, срочность', type: boolean }, EvnDirection_Num: { description: 'Выписка направлений, номер направления', type: string }, EvnDirection_id: { description: 'Идентификатор направления', type: string }, Person_id: { description: 'Справочник идентификаторов человека, Идентификатор', type: integer }, Person_Birthday: { description: 'Дата рождения', type: string }, Person_Age: { description: 'Кол-во лет', type: string }, Person_FIO: { description: ФИО, type: string }, UslugaComplex_Name: { description: 'Название услуги', type: string } }, type: object } } }, type: object } }
                type: object
  /api/rish/EvnFuncRequest/mGetEvnProcRequest:
    get:
      tags:
        - EvnFuncRequest
      summary: 'Описание метода'
      operationId: 'EvnFuncRequest::mGetEvnProcRequest_get'
      parameters:
        -
          name: EvnFuncRequest_id
          in: query
          description: 'Идентификатор заявки ФД'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnDirection_id
          in: query
          description: 'Идентификатор направления'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: Описание, type: string }
                  data: { description: Данные, type: array, items: { properties: { EvnFuncRequest_id: { description: 'Заявка на исследование, Идентификатор заявки', type: integer }, EvnDirection_id: { description: 'Выписка направлений, идентификатор', type: integer }, EvnDirection_Num: { description: 'Выписка направлений, номер направления', type: string }, Person_id: { description: 'Справочник идентификаторов человека, Идентификатор', type: integer }, EvnDirection_setDT: { description: 'Дата направления', type: string }, PrehospDirect_id: { description: 'Кем направлен в предварительной госпитализации, идентификатор', type: integer }, PrehospDirect_Name: { description: 'Кем направлен в предварительной госпитализации, наименование', type: string }, Lpu_sid: { description: 'Идентификатор ЛПУ', type: string }, Lpu_Nick: { description: 'Наименование ЛПУ', type: string }, LpuSection_id: { description: 'Справочник ЛПУ: отделения, идентификатор', type: integer }, LpuSection_Name: { description: 'Справочник ЛПУ: отделения, наименование', type: string }, EvnLabRequest_Ward: { description: 'Номер палаты', type: string }, MedPersonal_id: { description: 'Кэш врачей, идентификатор медицинского работника', type: integer }, Person_Fio: { description: Врач, type: string }, EvnDirection_IsCito: { description: 'Выписка направлений, срочность', type: boolean }, PayType_id: { description: 'Тип оплаты, идентификатор', type: integer }, EvnUslugaPar_id: { description: 'Параклиническая услуга, Идентификатор', type: integer }, UslugaComplex_id: { description: 'Комплексные услуги, идентификатор', type: integer }, EvnCourseProc_id: { description: 'Курс процедур, идентификатор', type: integer }, EvnPrescrProc_CountInDay: { description: 'Повторов в сутки', type: string }, EvnPrescrProc_CourseDuration: { description: Продолжительность, type: string }, EvnPrescrProc_ContReception: { description: 'Повторять непрерывно', type: string }, EvnPrescrProc_Interval: { description: Перерыв, type: string }, EvnPrescrProc_id: { description: 'Назначение с типом Манипуляции и процедуры, идентификатор', type: integer }, DurationType_id: { description: 'Тип продолжительности, идентификатор', type: integer }, EvnPrescrProc_didDT: { description: 'Время выполнения', type: string }, EvnPrescr_IsExec: { description: 'Выполнено (Да/Нет)', type: boolean }, EvnPrescrProc_Descr: { description: Примечание, type: string } }, type: object } }
                type: object
  /api/rish/EvnFuncRequest/mSaveEvnProcRequest:
    post:
      tags:
        - EvnFuncRequest
      summary: 'Сохранение\обновление данных процедурной заявки'
      operationId: 'EvnFuncRequest::mSaveEvnProcRequest_post'
      parameters:
        -
          name: MedService_id
          in: query
          description: Служба
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnFuncRequest_id
          in: query
          description: 'ID заявки'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Person_id
          in: query
          description: 'Идентификатор человека'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: PayType_id
          in: query
          description: 'Вид оплаты'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_id
          in: query
          description: Услуга
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnDirection_id
          in: query
          description: Направление
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PrescriptionStatusType_id
          in: query
          description: 'Статус назначения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPrescrProc_CountInDay
          in: query
          description: 'Повторов в сутки'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPrescrProc_CourseDuration
          in: query
          description: 'Продолжительность курса'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPrescrProc_ContReception
          in: query
          description: 'Непрерывный прием'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPrescrProc_Interval
          in: query
          description: Перерыв
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnCourseProc_id
          in: query
          description: ''
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPrescrProc_id
          in: query
          description: ''
          required: false
          schema:
            type: integer
            format: int64
        -
          name: DurationType_id
          in: query
          description: ''
          required: false
          schema:
            type: integer
            format: int64
        -
          name: DurationType_nid
          in: query
          description: ''
          required: false
          schema:
            type: integer
            format: int64
        -
          name: DurationType_sid
          in: query
          description: ''
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnDirection_Num
          in: query
          description: 'Номер направления'
          required: false
          schema:
            type: string
        -
          name: EvnDirection_setDT
          in: query
          description: 'Дата направления'
          required: false
          schema:
            type: string
            format: date
        -
          name: PrehospDirect_id
          in: query
          description: 'Кем направлен'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Org_sid
          in: query
          description: 'Направившая организация'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Lpu_sid
          in: query
          description: 'Направившее ЛПУ'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSection_id
          in: query
          description: 'Направившее отделение ЛПУ'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnLabRequest_Ward
          in: query
          description: Палата
          required: false
          schema:
            type: string
        -
          name: EvnDirection_IsCito
          in: query
          description: Cito
          required: false
          schema:
            type: string
        -
          name: EvnPrescr_IsExec
          in: query
          description: Выполнено
          required: false
          schema:
            type: string
        -
          name: EvnPrescrProc_didDT
          in: query
          description: 'Время выполнения'
          required: false
          schema:
            type: string
        -
          name: EvnPrescrProc_Descr
          in: query
          description: 'Время выполнения'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: Описание, type: string }
                  data: { description: Описание, type: array, items: { properties: { EvnFuncRequest_id: { description: 'Заявка на исследование, Идентификатор заявки', type: integer }, Error_Code: { description: 'Код ответа', type: string }, Error_Msg: { description: 'Текст ошибки', type: string } }, type: object } }
                type: object
  /api/EvnPS/mGetEvnPSInfo:
    get:
      tags:
        - EvnPS
      summary: 'Получение данных по КВС'
      operationId: 'EvnPS::mGetEvnPSInfo_get'
      parameters:
        -
          name: EvnPS_id
          in: query
          description: 'Идентификатор КВС'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: Результат, type: array, items: { properties: { accessType: { description: 'Тип доступа', type: string }, EvnPS_id: { description: 'Карта выбывшего из стационара, идентификатор', type: integer }, EvnPS_IsSigned: { description: 'Документ подписан', type: boolean }, Person_id: { description: 'Справочник идентификаторов человека, Идентификатор', type: integer }, PersonEvn_id: { description: 'События по человеку, идентификатор', type: integer }, Server_id: { description: 'Идентификатор сервера', type: integer }, EvnPS_NumCard: { description: 'Карта выбывшего из стационара, номер карты', type: string }, Diag_id: { description: 'Справочник диагнозов, идентификатор', type: integer }, Diag_Code: { description: 'Справочник диагнозов, код', type: string }, Diag_Name: { description: 'Справочник диагнозов, наименование', type: string }, LeaveType_Code: { description: 'тип выписки , код', type: string }, LeaveType_Name: { description: 'тип выписки , наименование', type: string }, PrehospType_id: { description: 'Тип предварительной госпитализации, идентификатор', type: integer }, PrehospType_Name: { description: 'Тип предварительной госпитализации, наименование', type: string }, PrehospArrive_id: { description: 'Кем доставлен при предварительной госпитализации, идентификатор', type: integer }, PrehospArrive_Name: { description: 'Кем доставлен при предварительной госпитализации, наименование', type: string }, EvnPS_IsDiagMismatch: { description: 'Карта выбывшего из стационара, Несовпадение диагноза', type: boolean }, EvnPS_IsWrongCure: { description: 'Карта выбывшего из стационара, Неправильная тактика лечения', type: boolean }, EvnPS_IsShortVolume: { description: 'Карта выбывшего из стационара, Недостаточный обьем оперативной помощи', type: boolean }, EvnPS_IsImperHosp: { description: 'Карта выбывшего из стационара, Несвоевременность госпитализации', type: boolean }, EvnDirection_Num: { description: 'Выписка направлений, номер направления', type: string }, EvnDirection_setDate: { description: 'Дата направления', type: string }, EvnPS_setDate: { description: 'Дата прибытия', type: string }, EvnPS_setTime: { description: 'Время прибытия', type: string }, EvnPS_disDate: { description: 'Дата выписки', type: string }, EvnPS_disTime: { description: 'Время выписки', type: string }, EvnSection: { description: 'Движения по КВС', type: array, items: { properties: { EvnSection_id: { description: 'Движение в отделении, идентификатор', type: integer }, EvnSection_setDate: { description: 'Дата движения', type: string }, LpuSection_Name: { description: 'Отделение, наименование отделения', type: string } }, type: object } } }, type: object } }
                type: object
  /api/EvnPS/mLoadWorkPlacePriem:
    get:
      tags:
        - EvnPS
      summary: 'Получение списка записей для АРМа приемного отделения стационара'
      operationId: 'EvnPS::mLoadWorkPlacePriem_get'
      parameters:
        -
          name: date
          in: query
          description: 'Дата приема'
          required: true
          schema:
            type: string
            format: date
        -
          name: EvnDirection_isConfirmed
          in: query
          description: 'Подтверждение госпитализации'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSection_id
          in: query
          description: 'Приемное отделение'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Person_SurName
          in: query
          description: Фамилия
          required: false
          schema:
            type: string
        -
          name: Person_FirName
          in: query
          description: Имя
          required: false
          schema:
            type: string
        -
          name: Person_SecName
          in: query
          description: Отчество
          required: false
          schema:
            type: string
        -
          name: Person_BirthDay
          in: query
          description: 'Дата рождения'
          required: false
          schema:
            type: string
            format: date
        -
          name: EvnQueueShow_id
          in: query
          description: "Очередь\r\n  * 0-не показывать\r\n  * 1-показывать\r\n  * 2-показывать, включая архив"
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnDirectionShow_id
          in: query
          description: "План госпитализаций\r\n  * 0-на текущий день\r\n  * 1-все направления"
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PrehospStatus_id
          in: query
          description: "Статус госпитализации\r\n  * 4-госпитализирован\r\n  * 5-отказ"
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { group_id: { description: 'Идентификатор группы', type: integer }, group_title: { description: 'Название группы', type: string }, group_data: { description: 'Дополнительные данные', type: string }, patients: { description: 'Информация по пациенту', type: array, items: { properties: { insertDT: { description: 'Дата создания записи', type: string }, groupField: { description: 'Идентификатор статуса записи АРМ приемного отделения', type: string }, EvnDirection_id: { description: 'Выписка направлений, идентификатор', type: integer }, PersonLpuInfo_IsAgree: { description: 'Обработка перс. данных, Согласие на обработку перс данных', type: boolean }, EvnDirection_IsConfirmed: { description: 'Выписка направлений, Подтверждение', type: boolean }, EvnDirection_Num: { description: 'Выписка направлений, номер направления', type: string }, EvnDirection_setDate: { description: 'Дата направления', type: string }, Diag_did: { description: 'Основной диагноз направившего учреждения', type: string }, LpuSection_did: { description: 'Направившее отделение', type: string }, Lpu_did: { description: 'Направившая МО', type: string }, Org_did: { description: 'Направившая организация', type: string }, DirType_id: { description: 'Справочник назначений направления, идентификатор', type: integer }, TimetableStac_setDate: { description: 'Дата поступления в стационар', type: string }, SMMP_exists: { description: 'Информация о бригаде скорой помощи', type: string }, EvnPS_CodeConv: { description: 'Карта выбывшего из стационара, Кем доставлен (код)', type: string }, EvnPS_NumConv: { description: 'Карта выбывшего из стационара, Кем доставлен (номер наряда)', type: string }, TimetableStac_insDT: { description: 'Дата создания записи', type: string }, EvnQueue_setDate: { description: 'Дата постановки в очередь', type: string }, EvnQueue_id: { description: 'Постановка в очередь, Идентификатор постановки в очередь', type: integer }, IsHospitalized: { description: 'Отделение, указанное в исходе пребывания в приемном отделении', type: string }, EvnPS_id: { description: 'Карта выбывшего из стационара, идентификатор', type: integer }, EvnPS_setDT: { description: 'Дата создания КВС', type: string }, EvnPS_NumCard: { description: 'Карта выбывшего из стационара, номер карты', type: integer }, TimetableStac_id: { description: 'Идентификатор бирки для стационара', type: integer }, LpuSectionProfile_Name: { description: 'профиль отделения в ЛПУ, наименование', type: string }, LpuSectionProfile_did: { description: 'Идентификатор отделения, куда направили', type: integer }, PrehospStatus_id: { description: 'Статусы записей АРМа приемного отделения, идентификатор', type: integer }, PrehospStatus_Name: { description: 'Статусы записей АРМа приемного отделения, наименование', type: string }, Diag_id: { description: 'Справочник диагнозов, идентификатор', type: integer }, Diag_Code: { description: 'Код диагноза', type: integer }, Diag_Name: { description: 'Название диагноза', type: string }, pmUser_Name: { description: 'Имя оператора', type: string }, IsRefusal: { description: 'Признак наличия отказа', type: string }, PrehospWaifRefuseCause_id: { description: 'Причина отказа от госпитализации, идентификатор', type: integer }, MedStaffFact_pid: { description: 'Специльность врача', type: string }, IsCall: { description: 'Признак передачи активного вызова', type: string }, IsSmmp: { description: 'Признак передачи талона на ССМП', type: string }, PrehospArrive_id: { description: 'Кем доставлен при предварительной госпитализации, идентификатор', type: integer }, PrehospArrive_SysNick: { description: 'Кем доставлен при предварительной госпитализации, системное наименование', type: string }, PrehospType_id: { description: 'Тип предварительной госпитализации, идентификатор', type: integer }, PrehospType_SysNick: { description: 'Тип предварительной госпитализации, системное наименование', type: string }, Person_BirthDay: { description: 'Дата рождения пациента', type: string }, Person_age: { description: 'Возраст пациента', type: string }, Person_Fio: { description: 'ФИО пациента', type: string }, PersonEncrypHIV_Encryp: { description: 'Справочник шифрования ВИЧ-инфицированных, Шифр', type: string }, Person_id: { description: 'Справочник идентификаторов человека, Идентификатор', type: integer }, Person_IsUnknown: { description: 'Справочник идентификаторов человека, Неизвестный человек', type: boolean }, PersonEvn_id: { description: 'События по человеку, идентификатор', type: integer }, Server_id: { description: 'Идентификатор сервера', type: integer }, LpuSection_Name: { description: 'Справочник ЛПУ: отделения, наименование', type: string }, EvnPL_id: { description: 'Лечение в поликлинике, идентификатор', type: integer }, CmpCallCard_id: { description: 'Справочник СМП: карты вызова, идентификатор', type: integer }, EvnPS_RFID: { description: RFID-метка, type: integer }, EvnPS_OutcomeDT: { description: 'Карта выбывшего из стационара, Дата исхода в приемном отделении', type: string } }, type: object } } }, type: object } }
                type: object
  /api/EvnPS/mGetEvnPSNumber:
    get:
      tags:
        - EvnPS
      summary: 'Получение номера карты выбывшего из стационара'
      operationId: 'EvnPS::mGetEvnPSNumber_get'
      parameters:
        -
          name: year
          in: query
          description: Год
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  EvnPS_NumCard: { description: 'Карта выбывшего из стационара, номер карты', type: string }
                type: object
  /api/EvnPS/mSaveEvnPSWithLeavePriem:
    post:
      tags:
        - EvnPS
      summary: 'Cохранение исхода пребывания в приемном отделении'
      operationId: 'EvnPS::mSaveEvnPSWithLeavePriem_post'
      parameters:
        -
          name: EvnPS_id
          in: query
          description: 'Идентификатор карты выбывшего из стационара'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Diag_id
          in: query
          description: 'Основной диагноз приемного отделения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonEvn_id
          in: query
          description: 'Идентификатор состояния пациента'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Server_id
          in: query
          description: 'Идентификатор сервера'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Person_id
          in: query
          description: 'Идентификатор пациента'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: LpuSection_id
          in: query
          description: 'Идентификатор отделения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_IsTransfCall
          in: query
          description: 'Передан активный вызов'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PrehospWaifRefuseCause_id
          in: query
          description: Отказ
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedicalCareFormType_id
          in: query
          description: 'Форма помощи'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LeaveType_prmid
          in: query
          description: 'Исход пребывания в приемном отделении'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ResultClass_id
          in: query
          description: Исход
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ResultDeseaseType_id
          in: query
          description: 'Результат обращения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSectionProfile_id
          in: query
          description: Профиль
          required: false
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_id
          in: query
          description: 'Код посещения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: DeseaseType_id
          in: query
          description: Характер
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LeaveType_fedid
          in: query
          description: 'Фед. результат'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ResultDeseaseType_fedid
          in: query
          description: 'Фед. исход'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  EvnSectionPriem_id: { description: 'Идентификатор приёмного отделения', type: integer }
                  success: { description: 'Результат выполнения', type: boolean }
                type: object
  /api/EvnPS/mSaveEvnPSWithPrehospWaifRefuseCause:
    post:
      tags:
        - EvnPS
      summary: 'Сохранение причины отказа в госпитализации'
      operationId: 'EvnPS::mSaveEvnPSWithPrehospWaifRefuseCause_post'
      parameters:
        -
          name: EvnPS_id
          in: query
          description: 'Идентификатор КВС'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: PrehospWaifRefuseCause_id
          in: query
          description: 'Причина отказа в госпитализации'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LeaveType_prmid
          in: query
          description: 'Исход пребывания в приемном отделении'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ResultClass_id
          in: query
          description: Исход
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ResultDeseaseType_id
          in: query
          description: 'Результат обращения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSectionProfile_id
          in: query
          description: Профиль
          required: false
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_id
          in: query
          description: 'Код посещения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LeaveType_fedid
          in: query
          description: 'Фед. результат'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ResultDeseaseType_fedid
          in: query
          description: 'Фед. исход'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_IsTransfCall
          in: query
          description: 'Передан активный вызов'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: integer }
                  success: { description: 'Результат выполнения', type: boolean, items: { properties: { Error_Msg: { description: 'Сообщение об ошибке', type: string }, Error_Code: { description: 'Код ошибки', type: integer }, EvnSectionPriem_id: { description: 'Идентификатор приемного отделения', type: integer } }, type: object } }
                type: object
  /api/EvnPS/mBindRFID:
    post:
      tags:
        - EvnPS
      summary: 'Связь КВС и метки RFID'
      operationId: 'EvnPS::mBindRFID_post'
      parameters:
        -
          name: EvnPS_id
          in: query
          description: 'Идентификатор КВС'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: RFID_id
          in: query
          description: 'Идентификатор метки RFID'
          required: true
          schema:
            type: string
        -
          name: ignoreOtherRelationsForRFID
          in: query
          description: 'Игнорировать существующие связи RFID-метки с другими КВС'
          required: false
          schema:
            type: boolean
        -
          name: ignoreOtherRelationsForEvnPS
          in: query
          description: 'Игнорировать наличие RFID-метки у КВС'
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  error_msg: { description: 'Сообщение об ошибке', type: string }
                  warning_bypass_flag: { description: 'Флаг пропуска предупреждения', type: string }
                type: object
  /api/EvnPS/mGetEvnPSByRFID:
    get:
      tags:
        - EvnPS
      summary: 'Описание метода'
      operationId: 'EvnPS::mGetEvnPSByRFID_get'
      parameters:
        -
          name: RFID_id
          in: query
          description: 'Идентификатор метки RFID'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: Описание, type: string }
                  data: { description: Описание, type: array, items: { properties: { EvnPS_id: { description: 'Карта выбывшего из стационара, идентификатор', type: integer } }, type: object } }
                type: object
  /api/EvnPS/mUnbindRFID:
    post:
      tags:
        - EvnPS
      summary: 'Отвязать метку от КВС'
      operationId: 'EvnPS::mUnbindRFID_post'
      parameters:
        -
          name: EvnPS_id
          in: query
          description: 'Идентификатор КВС'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  error_msg: { description: 'Сообщение об ошибке', type: string }
                type: object
  /api/EvnPs/mSaveEvnPS:
    post:
      tags:
        - EvnPS
      summary: 'Сохранение карты выбывшего из стационара'
      operationId: 'EvnPS::mSaveEvnPS_post'
      parameters:
        -
          name: from
          in: query
          description: 'Откуда доставили'
          required: false
          schema:
            type: string
        -
          name: childPS
          in: query
          description: 'Признак наличия дочернего направления'
          required: false
          schema:
            type: boolean
        -
          name: PrehospStatus_id
          in: query
          description: 'Статус записи'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_Policeman
          in: query
          description: 'ФИО и должность сотрудника МВД России'
          required: false
          schema:
            type: string
        -
          name: EvnPS_NotificationTime
          in: query
          description: 'Время направления извещения'
          required: false
          schema:
            type: string
        -
          name: EvnPS_NotificationDate
          in: query
          description: 'Дата направления извещения'
          required: false
          schema:
            type: string
        -
          name: TimetableStac_id
          in: query
          description: 'Идентификатор бирки для стационара'
          required: false
          schema:
            type: string
        -
          name: LpuSection_eid
          in: query
          description: 'Отделение (''Госпитализирован в'')'
          required: false
          schema:
            type: string
        -
          name: LpuSection_id
          in: query
          description: Отделение
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Diag_aid
          in: query
          description: 'Основной диагноз (паталого-анатомический)'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Diag_did
          in: query
          description: 'Основной диагноз направившего учреждения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Diag_eid
          in: query
          description: 'Внешняя причина'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: DiagSetPhase_did
          in: query
          description: 'Состояние пациента при направлении'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_PhaseDescr_did
          in: query
          description: 'Описание фазы для диагнозов направившего (Diag_did)'
          required: false
          schema:
            type: string
        -
          name: Diag_pid
          in: query
          description: 'Основной диагноз приемного отделения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: DiagSetPhase_pid
          in: query
          description: 'Состояние пациента при поступлении'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: DiagSetPhase_aid
          in: query
          description: 'Состояние пациента при выписке'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_PhaseDescr_pid
          in: query
          description: 'Описание фазы для диагноза приемного'
          required: false
          schema:
            type: string
        -
          name: EvnQueue_id
          in: query
          description: 'Идентификатор очереди'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnDirection_id
          in: query
          description: 'Идентификатор электронного направления'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnDirection_Num
          in: query
          description: 'Номер направления'
          required: false
          schema:
            type: string
        -
          name: EvnDirection_setDate
          in: query
          description: 'Дата направления'
          required: false
          schema:
            type: string
            format: date
        -
          name: EvnPS_CodeConv
          in: query
          description: 'Код КВС'
          required: false
          schema:
            type: string
        -
          name: EvnPS_disDate
          in: query
          description: 'Дата закрытия КВС'
          required: false
          schema:
            type: string
            format: date
        -
          name: EvnPS_disTime
          in: query
          description: 'Время закрытия КВС'
          required: false
          schema:
            type: string
        -
          name: EvnPS_HospCount
          in: query
          description: 'Количество госпитализаций'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_id
          in: query
          description: 'Идентификатор карты выбывшего из стационара'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_IsCont
          in: query
          description: Переведен
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_IsDiagMismatch
          in: query
          description: 'Несовпадение диагноза'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_IsImperHosp
          in: query
          description: 'Несвоевременность госпитализации'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_IsShortVolume
          in: query
          description: 'Недостаточный объем клинико-диагностического обследования'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_IsNeglectedCase
          in: query
          description: 'Случай запущен'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_IsPLAmbulance
          in: query
          description: 'Талон передан на ССМП'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_IsPrehospAcceptRefuse
          in: query
          description: 'Отказ в подтверждении госпитализации'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_IsTransfCall
          in: query
          description: 'Передан активный вызов'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_IsUnlaw
          in: query
          description: Противоправная
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_IsUnport
          in: query
          description: Нетранспортабельность
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_IsWaif
          in: query
          description: Беспризорный
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_IsWithoutDirection
          in: query
          description: 'Без электронного направления'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_IsWrongCure
          in: query
          description: 'Неправильная тактика лечения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_NumCard
          in: query
          description: 'Номер карты'
          required: true
          schema:
            type: string
        -
          name: EvnPS_NumConv
          in: query
          description: 'Номер наряда'
          required: false
          schema:
            type: string
        -
          name: EvnPS_PrehospAcceptRefuseDT
          in: query
          description: 'Дата отказа в подтверждении госпитализации'
          required: false
          schema:
            type: string
            format: date
        -
          name: EvnPS_PrehospWaifRefuseDT
          in: query
          description: 'Дата отказа приёма'
          required: false
          schema:
            type: string
            format: date
        -
          name: EvnPS_setDate
          in: query
          description: 'Дата поступления'
          required: true
          schema:
            type: string
            format: date
        -
          name: EvnPS_setTime
          in: query
          description: 'Время поступления'
          required: false
          schema:
            type: string
        -
          name: EvnPS_OutcomeDate
          in: query
          description: 'Дата исхода из приемного отделения'
          required: false
          schema:
            type: string
            format: date
        -
          name: EvnPS_OutcomeTime
          in: query
          description: 'Время исхода из приемного отделения'
          required: false
          schema:
            type: string
        -
          name: EvnPS_TimeDesease
          in: query
          description: 'Время с начала заболевания'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Okei_id
          in: query
          description: 'Единица измерени времени (с начала заболевания)'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LeaveType_prmid
          in: query
          description: 'Исход пребывания в приемном отделении'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Lpu_did
          in: query
          description: 'ЛПУ (''Госпитализация'')'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSection_did
          in: query
          description: 'Отделение (''Госпитализация'')'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSection_pid
          in: query
          description: 'Приемное отделение (''Приемное'')'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedPersonal_pid
          in: query
          description: 'Врач приемного отделения (''Приемное'')'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedStaffFact_pid
          in: query
          description: 'Рабочее место врача приемного отделения (''Приемное'')'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Org_did
          in: query
          description: 'Организация (''Госпитализация'')'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: OrgMilitary_did
          in: query
          description: 'Военкомат (''Госпитализация'')'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PayType_id
          in: query
          description: 'Вид оплаты'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: PersonEvn_id
          in: query
          description: 'Идентификатор состояния пациента'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: PrehospArrive_id
          in: query
          description: 'Кем доставлен'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PrehospDirect_id
          in: query
          description: 'Кем направлен'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PrehospToxic_id
          in: query
          description: 'Состояние опьянения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSectionTransType_id
          in: query
          description: 'Вид транспортировки'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PrehospTrauma_id
          in: query
          description: Травма
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PrehospType_id
          in: query
          description: 'Тип госпитализации'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: PrehospWaifRefuseCause_id
          in: query
          description: Отказ
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ResultClass_id
          in: query
          description: Исход
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ResultDeseaseType_id
          in: query
          description: 'Результат обращения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LeaveType_fedid
          in: query
          description: 'Фед. результат'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ResultDeseaseType_fedid
          in: query
          description: 'Фед. исход'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_id
          in: query
          description: 'Идентификатор услуги'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSectionProfile_id
          in: query
          description: 'Профиль отделения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PrehospWaifArrive_id
          in: query
          description: 'Кем доставлен, если беспризорный'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PrehospWaifReason_id
          in: query
          description: 'Причина помещения в ЛПУ, если беспризорный'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Server_id
          in: query
          description: 'Идентификатор сервера'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Person_id
          in: query
          description: 'Идентификатор пациента'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: addEvnSection
          in: query
          description: 'Флаг добавления движения'
          required: false
          schema:
            type: string
        -
          name: MedPersonal_id
          in: query
          description: 'Идентификатор врача'
          required: false
          schema:
            type: string
        -
          name: MedStaffFact_id
          in: query
          description: 'Идентификатор места работы врача'
          required: false
          schema:
            type: string
        -
          name: EntranceModeType_id
          in: query
          description: 'Вид транспортировки'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: CmpCallCard_id
          in: query
          description: 'Идентфикатор талона вызова'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_HTMBegDate
          in: query
          description: 'Дата выдачи талона на ВМП'
          required: false
          schema:
            type: string
            format: date
        -
          name: EvnPS_HTMHospDate
          in: query
          description: 'Дата планируемой госпитализации (ВМП)'
          required: false
          schema:
            type: string
            format: date
        -
          name: EvnPS_HTMTicketNum
          in: query
          description: 'Номер талона на ВМП'
          required: false
          schema:
            type: string
        -
          name: DeseaseType_id
          in: query
          description: Характер
          required: false
          schema:
            type: integer
            format: int64
        -
          name: TumorStage_id
          in: query
          description: 'Стадия выявленного ЗНО'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_IsZNO
          in: query
          description: 'Подозрение на ЗНО'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Diag_spid
          in: query
          description: 'Подозрение на диагноз'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: vizit_direction_control_check
          in: query
          description: 'Проверка пересечения КВС с ТАП'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ignoreEvnPSDoublesCheck
          in: query
          description: 'Проверка пересечения КВС'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ignoreEvnPSTimeDeseaseCheck
          in: query
          description: 'Проверять заполнения поля «Время с начала заболевания»'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  success: { description: 'Результат выполнения', type: string }
                type: object
  /api/rish/EvnPS/mLoadEvnPSEditForm:
    get:
      tags:
        - EvnPS
      summary: 'Загрузка данных формы редактирования движения приемного отделения'
      operationId: 'EvnPS::mLoadEvnPSEditForm_get'
      parameters:
        -
          name: EvnPS_id
          in: query
          description: 'Идентификатор карты выбывшего из стационара'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: Описание, type: string }
                  data: { description: Описание, type: array, items: { properties: { accessType: { description: Описание, type: string }, EvnPS_id: { description: 'Карта выбывшего из стационара, идентификатор', type: integer }, EvnPS_IsSigned: { description: Описание, type: boolean }, Lpu_id: { description: 'справочник ЛПУ, ЛПУ', type: integer }, EvnPS_IsTransit: { description: Описание, type: boolean }, EvnPS_IsCont: { description: 'Карта выбывшего из стационара, Продолжение случая', type: boolean }, DiagSetPhase_did: { description: Описание, type: string }, EvnPS_PhaseDescr_did: { description: 'Карта выбывшего из стационара, Описание фазы для диагнозов направившего (Diag_did)', type: string }, Diag_pid: { description: 'Справочник диагнозов, идентификатор диагноза родителя', type: string }, Diag_eid: { description: Описание, type: string }, DiagSetPhase_pid: { description: Описание, type: string }, DiagSetPhase_aid: { description: Описание, type: string }, EvnPS_PhaseDescr_pid: { description: 'Карта выбывшего из стационара, Описание фазы для диагнозов приемного (Diag_pid)', type: string }, EvnPS_NumCard: { description: 'Карта выбывшего из стационара, номер карты', type: string }, LeaveType_id: { description: 'тип выписки , идентификатор', type: integer }, PayType_id: { description: 'Тип оплаты, идентификатор', type: integer }, EvnPS_setDate: { description: Описание, type: string }, EvnPS_setTime: { description: Описание, type: string }, EvnPS_OutcomeDate: { description: Описание, type: string }, EvnPS_OutcomeTime: { description: Описание, type: string }, PrehospDirect_id: { description: 'Кем направлен в предварительной госпитализации, идентификатор', type: integer }, EvnDirection_Num: { description: 'Выписка направлений, номер направления', type: string }, EvnDirection_setDate: { description: Описание, type: string }, Org_did: { description: Описание, type: string }, MedStaffFact_did: { description: Описание, type: string }, MedPersonal_did: { description: Описание, type: string }, MedStaffFact_TFOMSCode: { description: Описание, type: string }, LpuSection_did: { description: Описание, type: string }, Lpu_did: { description: Описание, type: string }, Diag_did: { description: Описание, type: string }, EvnDirection_id: { description: 'Выписка направлений, идентификатор', type: integer }, EvnDirectionHTM_id: { description: 'Направление на ВМП, идентификатор', type: integer }, DirType_id: { description: 'Справочник назначений направления, идентификатор', type: integer }, EvnDirection_IsAuto: { description: 'Выписка направлений, автоматически созданное направление', type: boolean }, EvnDirection_IsReceive: { description: 'Выписка направлений, признак создания направления принимающей стороной', type: boolean }, LpuSection_pid: { description: 'Справочник ЛПУ: отделения, идентификатор родительского отделения', type: string }, MedStaffFact_pid: { description: Описание, type: string }, PrehospArrive_id: { description: 'Кем доставлен при предварительной госпитализации, идентификатор', type: integer }, CmpCallCard_id: { description: 'Справочник СМП: карты вызова, идентификатор', type: integer }, EvnPS_CodeConv: { description: 'Карта выбывшего из стационара, Кем доставлен (код)', type: string }, EvnPS_NumConv: { description: 'Карта выбывшего из стационара, Кем доставлен (номер наряда)', type: string }, PrehospToxic_id: { description: 'Вид отравления, идентификатор', type: integer }, LpuSectionTransType_id: { description: 'Справочник Вид транспортировки в отделение, идентификатор', type: integer }, PrehospType_id: { description: 'Тип предварительной госпитализации, идентификатор', type: integer }, EvnPS_HospCount: { description: 'Карта выбывшего из стационара, количество госпитализаций', type: string }, EvnPS_TimeDesease: { description: 'Карта выбывшего из стационара, Время с начала заболевания', type: string }, Okei_id: { description: 'Общероссийский классификатор единиц измерения (ОКЕИ), идентификатор', type: integer }, PrehospTrauma_id: { description: 'Травма при предварительной госпитализации, идентификатор', type: integer }, EvnPS_IsUnlaw: { description: 'Карта выбывшего из стационара, противоправная', type: boolean }, EvnPS_IsUnport: { description: 'Карта выбывшего из стационара, нетранспортабельность', type: boolean }, EvnPS_NotificationDate: { description: Описание, type: string }, EvnPS_NotificationTime: { description: Описание, type: string }, MedStaffFact_id: { description: 'Кэш мест работы, идентификатор места работы', type: integer }, EvnPS_Policeman: { description: 'Карта выбывшего из стационара, ФИО и должность сотрудника МВД России', type: string }, EvnPS_IsImperHosp: { description: 'Карта выбывшего из стационара, Несвоевременность госпитализации', type: boolean }, EvnPS_IsNeglectedCase: { description: 'Карта выбывшего из стационара, Случай запущен', type: boolean }, EvnPS_IsShortVolume: { description: 'Карта выбывшего из стационара, Недостаточный обьем оперативной помощи', type: boolean }, EvnPS_IsWrongCure: { description: 'Карта выбывшего из стационара, Неправильная тактика лечения', type: boolean }, EvnPS_IsDiagMismatch: { description: 'Карта выбывшего из стационара, Несовпадение диагноза', type: boolean }, EvnPS_IsWaif: { description: 'Карта выбывшего из стационара, признак Беспризорный (Да/Нет)', type: boolean }, EvnPS_IsPLAmbulance: { description: 'Карта выбывшего из стационара, признак «Талон передан на ССМП» (Да/Нет)', type: boolean }, PrehospWaifArrive_id: { description: 'Кем доставлен( Беспризорный), идентификатор', type: integer }, PrehospWaifReason_id: { description: 'Причина помещения в ЛПУ(Беспризорный), идентификатор', type: integer }, LpuSection_id: { description: 'Справочник ЛПУ: отделения, идентификатор', type: integer }, PrehospWaifRefuseCause_id: { description: 'Причина отказа от госпитализации, идентификатор', type: integer }, MedicalCareFormType_id: { description: Описание, type: integer }, ResultClass_id: { description: 'Полка: результат лечения, идентификатор', type: integer }, ResultDeseaseType_id: { description: 'Исход заболевания, идентификатор', type: integer }, EvnPS_IsTransfCall: { description: 'Карта выбывшего из стационара, признак ''Передан активный вызов'' (да/нет)', type: boolean }, Person_id: { description: 'Справочник идентификаторов человека, Идентификатор', type: integer }, PersonEvn_id: { description: 'События по человеку, идентификатор', type: integer }, Server_id: { description: Описание, type: integer }, EvnPS_IsWithoutDirection: { description: 'Карта выбывшего из стационара, Без направления', type: boolean }, EvnQueue_id: { description: 'Постановка в очередь, Идентификатор постановки в очередь', type: integer }, EvnPS_IsPrehospAcceptRefuse: { description: 'Карта выбывшего из стационара, Отказ в подтверждении госпитализации', type: boolean }, EvnPS_PrehospAcceptRefuseDT: { description: 'Карта выбывшего из стационара, Дата отказа в потверждении госпитализации', type: string }, EvnPS_PrehospWaifRefuseDT: { description: 'Карта выбывшего из стационара, Дата отказа от госпитализации (Беспризорный)', type: string }, LpuSection_eid: { description: Описание, type: string }, PrehospStatus_id: { description: 'Статусы записей АРМа приемного отделения, идентификатор', type: integer }, EvnPS_HTMBegDate: { description: 'Карта выбывшего из стационара, Дата выдачи талона на ВМП', type: string }, EvnPS_HTMHospDate: { description: 'Карта выбывшего из стационара, Дата планируемой госпитализации (ВМП)', type: string }, EvnPS_HTMTicketNum: { description: 'Карта выбывшего из стационара, Номер талона на ВМП', type: string }, UslugaComplex_id: { description: 'Комплексные услуги, идентификатор', type: integer }, LpuSectionProfile_id: { description: 'профиль отделения в ЛПУ, идентификатор', type: integer }, EntranceModeType_id: { description: 'Способ передвижения, Идентификатор способа передвижения', type: integer }, DeseaseType_id: { description: 'Справочник заболеваний: характер заболевания, идентификатор', type: integer }, TumorStage_id: { description: 'Стадия опухолевого процесса, идентификатор', type: integer }, EvnPS_IsZNO: { description: 'Карта выбывшего из стационара, подозрение на ЗНО', type: boolean }, Diag_spid: { description: Описание, type: string }, ChildLpuSection_id: { description: Описание, type: integer }, EvnCostPrint_setDT: { description: 'Справочник даты печати справки либо даты отказа от справки на случае, дата выдачи справки/отказа', type: string }, EvnCostPrint_IsNoPrint: { description: 'Справочник даты печати справки либо даты отказа от справки на случае, отказ от печати справки', type: boolean }, EvnCostPrint_Number: { description: 'Справочник даты печати справки либо даты отказа от справки на случае, Номер справки', type: string }, LeaveType_prmid: { description: Описание, type: string }, LeaveType_fedid: { description: 'тип выписки , Классификатор результатов обращения за медицинской помощью', type: string }, ResultDeseaseType_fedid: { description: 'Исход заболевания, классификатор исходов заболеваний (V012)', type: string }, EvnSection_IsPaid: { description: 'Движение в отделении, Случай оплачен', type: boolean }, EvnPS_IndexRep: { description: 'Карта выбывшего из стационара, Признак повторной подачи', type: string }, EvnPS_IndexRepInReg: { description: 'Карта выбывшего из стационара, Признак вхождения в реестр повторной подачи', type: string }, childPS: { description: Описание, type: string }, EvnPS_isMseDirected: { description: 'Карта выбывшего из стационара, Направлен на МЭС', type: string }, pid_DiagName: { description: Описание, type: string }, eid_DiagName: { description: Описание, type: string }, did_DiagName: { description: Описание, type: string }, spid_DiagName: { description: Описание, type: string }, EvnDiagPSHosp: { description: 'Сопутствующие диагнозы направившего заведения', type: array, items: { properties: { EvnDiagPS_id: { description: 'Установка диагноза в стационаре, идентификатор', type: integer }, EvnDiagPS_pid: { description: Описание, type: integer }, Person_id: { description: 'Справочник идентификаторов человека, Идентификатор', type: integer }, PersonEvn_id: { description: 'События по человеку, идентификатор', type: integer }, Server_id: { description: Описание, type: integer }, Diag_id: { description: 'Справочник диагнозов, идентификатор', type: integer }, DiagSetPhase_id: { description: 'Степень тяжести состояния пациента (OID 1.2.643.5.1.13.13.11.1006 ), идентификатор', type: integer }, EvnDiagPS_PhaseDescr: { description: 'Установка диагноза в стационаре, описание фазы', type: string }, DiagSetClass_id: { description: 'Справочник диагнозов: класс диагноза, идентификатор', type: integer }, DiagSetType_id: { description: 'Справочник диагнозов: вид диагноза, идентификатор', type: integer }, EvnDiagPS_setDate: { description: Описание, type: string }, EvnDiagPS_setTime: { description: Описание, type: string }, DiagSetClass_Name: { description: 'Справочник диагнозов: класс диагноза, наименование', type: string }, Diag_Code: { description: 'Справочник диагнозов, код', type: string }, Diag_Name: { description: 'Справочник диагнозов, наименование', type: string }, RecordStatus_Code: { description: Описание, type: string } }, type: object } }, EvnDiagPSRecep: { description: 'Сопутствующие диагнозы приемного отделения', type: array, items: { properties: { EvnDiagPS_id: { description: 'Установка диагноза в стационаре, идентификатор', type: integer }, EvnDiagPS_pid: { description: Описание, type: integer }, Person_id: { description: 'Справочник идентификаторов человека, Идентификатор', type: integer }, PersonEvn_id: { description: 'События по человеку, идентификатор', type: integer }, Server_id: { description: Описание, type: integer }, Diag_id: { description: 'Справочник диагнозов, идентификатор', type: integer }, DiagSetPhase_id: { description: 'Степень тяжести состояния пациента (OID 1.2.643.5.1.13.13.11.1006 ), идентификатор', type: integer }, EvnDiagPS_PhaseDescr: { description: 'Установка диагноза в стационаре, описание фазы', type: string }, DiagSetClass_id: { description: 'Справочник диагнозов: класс диагноза, идентификатор', type: integer }, DiagSetType_id: { description: 'Справочник диагнозов: вид диагноза, идентификатор', type: integer }, EvnDiagPS_setDate: { description: Описание, type: string }, EvnDiagPS_setTime: { description: Описание, type: string }, DiagSetClass_Name: { description: 'Справочник диагнозов: класс диагноза, наименование', type: string }, Diag_Code: { description: 'Справочник диагнозов, код', type: string }, Diag_Name: { description: 'Справочник диагнозов, наименование', type: string }, RecordStatus_Code: { description: Описание, type: string } }, type: object } }, EvnDiagPSDie: { description: Описание, type: array, items: { type: object } }, EvnDiagPSSect: { description: Описание, type: array, items: { type: object } }, EvnSectionGrid: { description: Движения, type: array, items: { properties: { accessType: { description: Описание, type: string }, EvnSection_id: { description: 'Движение в отделении, идентификатор', type: integer }, EvnSection_IsSigned: { description: Описание, type: boolean }, EvnSection_pid: { description: Описание, type: integer }, Person_id: { description: 'Справочник идентификаторов человека, Идентификатор', type: integer }, PersonEvn_id: { description: 'События по человеку, идентификатор', type: integer }, Server_id: { description: Описание, type: integer }, Diag_id: { description: 'Справочник диагнозов, идентификатор', type: integer }, MedStaffFact_id: { description: 'Кэш мест работы, идентификатор места работы', type: integer }, LpuSection_id: { description: 'Справочник ЛПУ: отделения, идентификатор', type: integer }, LpuSectionWard_id: { description: 'Палатная структура ЛПУ, идентификатор', type: integer }, MedPersonal_id: { description: 'Кэш врачей, идентификатор медицинского работника', type: integer }, PayType_id: { description: 'Тип оплаты, идентификатор', type: integer }, TariffClass_id: { description: 'Класс тарифа, идентификатор', type: integer }, Mes_id: { description: 'справочник МЭС, идентификатор', type: integer }, EvnSection_disDate: { description: Описание, type: string }, EvnSection_setDate: { description: Описание, type: string }, EvnSection_disTime: { description: Описание, type: string }, EvnSection_setTime: { description: Описание, type: string }, LpuSection_Name: { description: 'Справочник ЛПУ: отделения, наименование', type: string }, LpuSectionWard_Name: { description: 'Палатная структура ЛПУ, наименование (номер)', type: string }, LpuSectionProfile_Name: { description: 'профиль отделения в ЛПУ, наименование', type: string }, LpuSectionBedProfile_Name: { description: 'профиль коек, наименование', type: string }, LpuSectionProfile_id: { description: 'профиль отделения в ЛПУ, идентификатор', type: integer }, MedPersonal_Fio: { description: Описание, type: string }, PayType_Name: { description: 'Тип оплаты, наименование', type: string }, Diag_Code: { description: 'Справочник диагнозов, код', type: string }, Diag_Name: { description: 'Справочник диагнозов, наименование', type: string }, EvnSection_KoikoDni: { description: Описание, type: string }, EvnSection_KoikoDniNorm: { description: Описание, type: string }, LeaveType_id: { description: 'тип выписки , идентификатор', type: integer }, CureResult_Code: { description: 'Итог лечения, код', type: string }, LeaveType_Code: { description: 'тип выписки , код', type: string }, LeaveType_SysNick: { description: 'тип выписки , системное наименование', type: string }, LeaveType_Name: { description: 'тип выписки , наименование', type: string }, LpuUnitType_id: { description: 'тип подразделения ЛПУ, идентификатор', type: integer }, LpuUnitType_SysNick: { description: 'тип подразделения ЛПУ, системное наименование', type: string }, DeseaseBegTimeType_id: { description: 'Время с начала заболевания , идентификатор', type: integer }, EvnSection_IsPaid: { description: 'Движение в отделении, Случай оплачен', type: boolean }, isLast: { description: Описание, type: string }, EvnSection_IndexNum: { description: 'Движение в отделении, Порядковый номер в рамках группировки по диагнозу', type: string }, EvnSection_KOEF: { description: Описание, type: string }, Mes_rid: { description: Описание, type: string }, Mes_Code: { description: 'справочник МЭС, код', type: string }, MesType_id: { description: 'Тип МЭС, идентификатор', type: integer }, EvnSection_KPG: { description: Описание, type: string }, EvnSection_IsMultiKSG: { description: 'Движение в отделении, Более одной КСГ', type: boolean }, EvnSection_KSG: { description: Описание, type: string } }, type: object } } }, type: object } }
                type: object
  /api/EvnPrescr/mGetPrescrPlanView:
    get:
      tags:
        - EvnPrescr
      summary: 'Получение данных для формы Лист назначений'
      operationId: 'EvnPrescr::mGetPrescrPlanView_get'
      parameters:
        -
          name: Evn_rid
          in: query
          description: 'Идентификатор случая лечения'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Evn_pid
          in: query
          description: 'Идентификатор учетного документа'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: Данные, properties: { group_name: { description: 'Название группы. regime,diet, consul и тд', properties: { PrescriptionType_id: { description: 'Тип назначения, идентификатор', type: integer }, PrescriptionType_name: { description: Описание, type: string }, list: { description: 'Данные о группе', type: array, items: { properties: { accessType: { description: 'Тип доступа', type: string }, EvnPrescr_key: { description: 'Ключ назначения', type: string }, EvnPrescr_id: { description: 'Назначение, идентификатор', type: integer }, EvnPrescr_pid: { description: 'Идентификатор события, породившего назначение', type: string }, EvnPrescr_rid: { description: 'Родительский идентификатор назначения', type: string }, EvnPrescr_setDate: { description: 'Дата назначения', type: string }, EvnPrescr_setTime: { description: 'Время назначения', type: string }, EvnPrescr_IsExec: { description: 'Назначение, признак выполнения (Да/Нет)', type: boolean }, EvnPrescr_IsHasEvn: { description: "\r\n  * 1 - если есть код услуги\r\n  * 2 - если нет", type: boolean }, EvnPrescr_execDT: { description: Описание, type: string }, EvnPrescr_IsDir: { description: "\r\n  * 1-елси нет EvnDirection_id\r\n  * 2-если есть", type: boolean }, PrescriptionStatusType_id: { description: 'Статус назначения, идентификатор', type: integer }, PrescriptionType_id: { description: 'Тип назначения, идентификатор', type: integer }, PrescriptionType_Code: { description: 'Тип назначения, код', type: string }, PrescriptionType_Name: { description: 'Тип назначения, наименование', type: string }, cntInPrescriptionTypeGroup: { description: 'Количество типов назначений в группе', type: string }, EvnPrescr_IsCito: { description: 'Назначение, признак срочности (Да/Нет)', type: boolean }, EvnPrescr_cnt: { description: 'Число дней указаннного назначения', type: string }, IsCito_Code: { description: 'Код Обязательно к приёму', type: string }, IsCito_Name: { description: 'Обязательно к приёму', type: string }, EvnPrescr_Descr: { description: 'Назначение, комментарий', type: string }, EvnPrescrRegime_id: { description: 'Назначение с типом Режим, идентификатор', type: integer }, PrescriptionRegimeType_id: { description: 'Тип режима, идентификатор', type: integer }, PrescriptionRegimeType_Code: { description: 'Тип режима, код', type: string }, PrescriptionRegimeType_Name: { description: 'Тип режима, наименование', type: string }, EvnPrescrDiet_id: { description: 'Назначение с типом Диета, идентификатор', type: integer }, PrescriptionDietType_id: { description: 'Тип диеты, идентификатор', type: integer }, PrescriptionDietType_Code: { description: 'Тип диеты, код', type: string }, PrescriptionDietType_Name: { description: 'Тип диеты, наименование', type: string }, EvnPrescrObserv_id: { description: 'Назначение c типом Наблюдение, идентификатор', type: integer }, ObservTimeType_id: { description: 'Время наблюдения, идентификатор', type: integer }, ObservTimeType_Name: { description: 'Время наблюдения, наименование', type: string }, EvnPrescrObservPos_id: { description: 'Параметры назначения для наблюдения, идентификатор', type: integer }, ObservParamType_Name: { description: 'Параметр наблюдения, наименование', type: string }, cntParam: { description: 'Количество параметров', type: string }, EvnPrescrTreatDrug_id: { description: 'Медикаменты назначения с типом лекарственное лечение, идентификатор', type: integer }, Drug_id: { description: 'Cправочник медикаментов, идентификатор', type: integer }, DrugComplexMnn_id: { description: 'Идентификатор комплексного МНН', type: integer }, Drug_Name: { description: 'Cправочник медикаментов, наименование', type: string }, DrugTorg_Name: { description: 'Справочник медикаментов: торговые наименования медикаментов, наименование', type: string }, EvnPrescrTreatDrug_KolvoEd: { description: 'Медикаменты назначения с типом лекарственное лечение, количество на прием в единицах дозировки', type: string }, DrugForm_Name: { description: 'Справочник медикаментов: форма выпуска медикаментов, наименование', type: string }, EvnPrescrTreatDrug_Kolvo: { description: 'Медикаменты назначения с типом лекарственное лечение, количество на прием в единицах измерения', type: string }, EdUnits_Nick: { description: 'Краткое наименование единицы массы', type: string }, EvnPrescrTreatDrug_DoseDay: { description: 'Медикаменты назначения с типом лекарственное лечение, Суточная доза', type: string }, FactCntDay: { description: 'Количество исполненных приемов на дату', type: string }, PrescrCntDay: { description: 'Количество назначенных приемов на дату', type: string }, cntDrug: { description: 'Количество лекартсв', type: string }, EvnCourseTreatDrug_id: { description: 'Медикаменты курса лекарственных средств, идентификатор', type: integer }, CourseDrug_Name: { description: 'Название лечебного курса', type: string }, CourseDrugTorg_Name: { description: 'Торговое наименование лекраства', type: string }, EvnCourseTreatDrug_KolvoEd: { description: 'Медикаменты курса лекарственных средств, количество на один прием в единицах дозировки', type: string }, CourseDrugForm_Name: { description: 'Название лечебного курса', type: string }, EvnCourseTreatDrug_Kolvo: { description: 'Медикаменты курса лекарственных средств, количество на один прием в единицах измерения', type: string }, CourseEdUnits_Nick: { description: 'Название единицы массы', type: string }, EvnCourseTreatDrug_MaxDoseDay: { description: 'Медикаменты курса лекарственных средств, максимальная дневная доза', type: string }, EvnCourseTreatDrug_MinDoseDay: { description: 'Медикаменты курса лекарственных средств, минимальная дневная доза', type: string }, EvnCourseTreatDrug_PrescrDose: { description: 'Медикаменты курса лекарственных средств, назначенная курсовая доза', type: string }, EvnCourseTreatDrug_FactDose: { description: 'Медикаменты курса лекарственных средств, исполненная курсовая доза', type: string }, cntCourseDrug: { description: 'Количество лекарственных назначений', type: string }, PrescriptionIntroType_Name: { description: 'Метод введения, наименование', type: string }, PerformanceType_Name: { description: 'Тип исполнения, наименование', type: string }, CourseUslugaComplex_id: { description: 'Идентификатор услуги', type: integer }, CourseUslugaComplex_2011id: { description: 'Идентификатор услуги', type: string }, CourseUslugaComplex_Name: { description: 'Название услуги', type: string }, CourseUslugaComplex_Code: { description: Описание, type: string }, MedService_id: { description: 'Cлужбы, идентификатор', type: integer }, MedService_Name: { description: 'Cлужбы, наименование', type: string }, EvnCourse_id: { description: 'Курс лечения, идентификатор', type: integer }, graf_date: { description: 'Дата назначения', type: string }, MaxCountInDay: { description: 'Максимальное количество дней приёма назначения', type: string }, MinCountInDay: { description: 'Минимальное количество дней приёма назначения', type: string }, Duration: { description: Продолжительность, type: string }, ContReception: { description: 'Непрерывный прием', type: string }, Interval: { description: Интервал, type: string }, PrescrCount: { description: 'Количество назначений', type: string }, DurationType_Nick: { description: 'Тип продолжительности, краткое наименование', type: string }, DurationType_IntNick: { description: 'Тип продолжительности, краткое наименование', type: string }, DurationType_RecNick: { description: 'Тип продолжительности, краткое наименование', type: string }, UslugaComplex_id: { description: 'Комплексные услуги, идентификатор', type: integer }, UslugaComplex_2011id: { description: 'Комплексные услуги, Категория услуг ГОСТ-2011', type: string }, UslugaComplex_Code: { description: 'Комплексные услуги, код', type: string }, UslugaComplex_Name: { description: 'Комплексные услуги, наименование', type: string }, TableUsluga_id: { description: 'Идентификатор услуги', type: integer }, cntUsluga: { description: 'Количество услуг', type: string }, EvnDirection_id: { description: 'Выписка направлений, идентификатор', type: integer }, EvnQueue_id: { description: 'Постановка в очередь, Идентификатор постановки в очередь', type: integer }, EvnDirection_Num: { description: 'Выписка направлений, номер направления', type: string }, RecTo: { description: 'Куда записали', type: string }, RecDate: { description: 'Дата записи', type: string }, timetable: { description: Описание, type: string }, timetable_id: { description: 'Идентификатор бирки', type: integer }, timetable_pid: { description: Описание, type: string }, LpuUnitType_SysNick: { description: 'тип подразделения ЛПУ, системное наименование', type: string }, DirType_Code: { description: 'Справочник назначений направления, код', type: string }, EvnXmlDir_id: { description: 'Идентификатор произвольного документа', type: integer }, isGroupTitle: { description: 'Название группы', type: string }, EvnPrescr_DateInterval: { description: 'Временной интервал', type: string }, EvnPrescrGroup_Title: { description: 'Наименование группы', type: string }, DrugDataList: { description: 'Информация по лекарствам', type: array, items: { properties: { id: { description: Идентификатор, type: string }, Drug_Name: { description: 'Cправочник медикаментов, наименование', type: string }, DrugTorg_Name: { description: 'Справочник медикаментов: торговые наименования медикаментов, наименование', type: string }, KolvoEd: { description: 'Количество на один прием в единицах дозировки', type: string }, DrugForm_Nick: { description: 'Наименование формы выпуска', type: string }, Kolvo: { description: 'Количество на один прием в единицах измерения', type: string }, EdUnits_Nick: { description: Описание, type: string }, MaxDoseDay: { description: 'Максимальная дневная доза', type: string }, MinDoseDay: { description: 'Минимальная дневная доза', type: string }, PrescrDose: { description: 'Назначенная курсовая доза', type: string } }, type: object } }, days: { description: 'Массив дней', type: array, items: { properties: { id: { description: 'Идентификатор дня', type: integer }, Day_IsExec: { description: 'Признак выполнения', type: boolean }, EvnPrescr_IsHasEvn: { description: Описание, type: boolean }, Day_IsSign: { description: 'Подписано ли назначение', type: boolean }, date: { description: Дата, type: string }, EvnPrescr_id: { description: 'Назначение, идентификатор', type: integer }, EvnPrescrRegime_id: { description: 'Назначение с типом Режим, идентификатор', type: integer }, EvnPrescrDataList: { description: 'Список назначений', type: array, items: { properties: { id: { description: Идентификтатор, type: string }, EvnPrescr_IsCito: { description: 'Назначение, признак срочности (Да/Нет)', type: integer }, EvnPrescr_IsExec: { description: 'Назначение, признак выполнения (Да/Нет)', type: integer }, EvnPrescr_IsHasEvn: { description: 'Наличие лекарственного назначения или направления на услугу', type: integer }, EvnPrescr_Descr: { description: 'Назначение, комментарий', type: string }, EvnPrescr_setDate: { description: 'Дата создания назначения', type: string }, PrescriptionStatusType_id: { description: 'Статус назначения, идентификатор', type: integer }, UslugaComplex_id: { description: 'Комплексные услуги, идентификатор', type: integer }, UslugaComplex_2011id: { description: 'Комплексные услуги, Категория услуг ГОСТ-2011', type: string }, UslugaComplex_Code: { description: 'Комплексные услуги, код', type: string }, UslugaComplex_Name: { description: 'Комплексные услуги, наименование', type: string }, EvnDirection_id: { description: 'Выписка направлений, идентификатор', type: integer }, RecTo: { description: 'Куда записался', type: string }, RecDate: { description: 'С какого числа человек находится в очереди', type: string }, timetable: { description: 'Если есть EvnQueue_id принимает значение ''EvnQueue_id'' иначе timetable', type: string }, timetable_id: { description: 'Идентификатор бирки', type: integer } }, type: object } } }, type: object } } }, type: object } } }, type: object } }, type: object }
                type: object
  /api/rish/EvnPrescr/mLoadEvnPrescrJournalGrid:
    get:
      tags:
        - EvnPrescr
      summary: 'Получение списка назначений'
      operationId: 'EvnPrescr::mLoadEvnPrescrJournalGrid_get'
      parameters:
        -
          name: EvnPrescr_begDate
          in: query
          description: 'Период: дата начала'
          required: true
          schema:
            type: string
            format: date
        -
          name: EvnPrescr_endDate
          in: query
          description: 'Период: дата окончания'
          required: true
          schema:
            type: string
            format: date
        -
          name: PrescriptionType_id
          in: query
          description: 'Идентификатор типа назначения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSection_id
          in: query
          description: 'Идентификато отделения'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Person_FIO
          in: query
          description: ФИО
          required: false
          schema:
            type: string
        -
          name: MedPersonal_id
          in: query
          description: 'Идентификатор мед. персонала'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSectionWard_id
          in: query
          description: 'Идинтификатор палаты'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPrescr_IsExec
          in: query
          description: 'Признак выполнения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: showEvnQueue
          in: query
          description: 'Признак только очередь'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: start
          in: query
          description: 'Номер стартовой записи'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: limit
          in: query
          description: 'Количество записей'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { EvnPrescr_id: { description: 'Назначение, идентификатор', type: integer }, Person_id: { description: 'Справочник идентификаторов человека, Идентификатор', type: integer }, Person_FIO: { description: 'Пациент ФИО', type: string }, PrescriptionType_Code: { description: 'Тип назначения, код', type: string }, PrescriptionType_Name: { description: 'Тип назначения, наименование', type: string }, pmUser_insName: { description: 'Врач сделавший назначение', type: string }, EvnPrescr_Name: { description: 'Состав назначения', type: string }, EvnPrescr_IsExec: { description: 'Признак выполнения назначения', type: string }, Person_Birthday: { description: 'Дата рождения', type: string }, Person_Age: { description: Возраст, type: integer }, EvnSection_id: { description: 'Идентификатор движения в отделении', type: integer }, LpuSectionWard_Name: { description: 'Номер палаты', type: string }, EvnDirection_setDate: { description: 'Дата направления', type: string }, EvnPrescr_planTime: { description: 'Плановое время приема', type: string } }, type: object } }
                type: object
  /api/rish/EvnPrescr/mGetDrugDataFromDestination:
    get:
      tags:
        - EvnPrescr
      summary: 'Метод получения данных о медикаментах из назначения'
      operationId: 'EvnPrescr::mGetDrugDataFromDestination_get'
      parameters:
        -
          name: EvnPrescrTreat_id
          in: query
          description: 'Идентификатор назначения'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Storage_id
          in: query
          description: 'идентификатор склада'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: DrugPrepFas_id
          in: query
          description: 'идентификатор препарата'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { EvnDrug_id: { description: 'Назначение медикаментов, идентификатор', type: integer }, Drug_id: { description: 'Cправочник медикаментов, идентификатор', type: integer }, Drug_Name: { description: 'Cправочник медикаментов, наименование', type: string }, DrugPrepFas_id: { description: 'идентификатор препарата', type: integer }, EvnPrescrTreatDrug_id: { description: 'Медикаменты назначения с типом лекарственное лечение, идентификатор', type: integer }, DrugComplexMnn_id: { description: 'идентификатор комплексных МНН', type: integer }, EvnPrescrTreat_PrescrCount: { description: 'Назначение с типом Лекарственное лечение, количество назначенных приемов на дату', type: string }, EvnPrescrTreatDrug_FactCount: { description: 'Медикаменты назначения с типом лекарственное лечение, количество исполненных приемов на дату', type: string }, EvnPrescrTreatDrug_DoseDay: { description: 'Медикаменты назначения с типом лекарственное лечение, Суточная доза', type: string }, EvnPrescrTreat_Descr: { description: 'описание лекарственного назначения ', type: string }, EvnCourseTreatDrug_id: { description: 'Медикаменты курса лекарственных средств, идентификатор', type: integer }, EvnCourseTreatDrug_FactDose: { description: 'Медикаменты курса лекарственных средств, исполненная курсовая доза', type: string }, EvnCourse_id: { description: 'Курс лечения, идентификатор', type: integer }, EvnDrug_rid: { description: 'идентификатор события-потомка', type: string }, EvnDrug_pid: { description: 'идентификатор родительского события', type: string }, EvnPrescr_id: { description: 'Назначение, идентификатор', type: integer }, Person_id: { description: 'Справочник идентификаторов человека, Идентификатор', type: integer }, PersonEvn_id: { description: 'События по человеку, идентификатор', type: integer }, Server_id: { description: 'идентификатор сервера', type: integer }, EvnDrug_setDate: { description: 'дата создания назначения', type: string }, EvnDrug_setTime: { description: 'время создания назначения', type: string }, EvnDrug_Kolvo: { description: 'Назначение медикаментов, Количество медикаментов', type: string }, EvnDrug_KolvoEd: { description: 'Назначение медикаментов, Количество единиц', type: string }, ParentEvn_IsStac: { description: 'стационарный случай', type: boolean }, Evn_setDate: { description: 'дата события', type: string }, Lpu_id: { description: 'справочник ЛПУ, ЛПУ', type: integer }, LpuSection_id: { description: 'Справочник ЛПУ: отделения, идентификатор', type: integer }, LpuSection_Name: { description: 'Справочник ЛПУ: отделения, наименование', type: string }, MedPersonal_id: { description: 'Кэш врачей, идентификатор медицинского работника', type: integer }, MedPersonal_FIO: { description: 'ФИО сотрудника', type: string }, DocumentUcStr_oid: { description: 'Строки документа учета, партия', type: string }, DocumentUcStr_Ost: { description: 'остаток медикамента', type: string }, Storage_id: { description: 'Склад, идентификатор', type: integer }, Mol_id: { description: 'Материально-ответственное лицо, идентификатор', type: integer }, Mol_Name: { description: 'ФИО ответственного лица (МОЛ)', type: string }, DrugFinance_Name: { description: 'Справочник медикаментов: тип финансирования , наименование', type: string }, DocumentUcStr_Name: { description: 'наименование партии', type: string }, DocumentUc_id: { description: 'Документ учета, идентификатор', type: integer }, DocumentUcStr_Price: { description: 'Строки документа учета, стоимость', type: string }, DocumentUcStr_Sum: { description: 'Строки документа учета, сумма', type: string }, GoodsUnit_id: { description: 'Единицы измерения товара, идентификатор', type: integer }, GoodsUnit_bid: { description: 'базовая единица учета поля количество', type: string }, GoodsPackCount_bCount: { description: 'количество единиц измерения товара в упаковке', type: string } }, type: object } }
                type: object
  /api/rish/EvnPrescr/mSetEvnPrescrExec:
    post:
      tags:
        - EvnPrescr
      summary: 'Установка признака выполнения для назначения'
      operationId: 'EvnPrescr::mSetEvnPrescrExec_post'
      parameters:
        -
          name: EvnPrescr_id
          in: query
          description: 'Идентификатор назначения'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: Описание, type: string }
                  error_msg: { description: 'Сообщение об ошибке', type: string }
                type: object
  /api/rish/EvnPrescr/mUndoEvnPrescrExec:
    post:
      tags:
        - EvnPrescr
      summary: 'Отмена выполненения назначения'
      operationId: 'EvnPrescr::mUndoEvnPrescrExec_post'
      parameters:
        -
          name: EvnPrescr_id
          in: query
          description: 'Идентификатор назначения'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  error_msg: { description: 'Сообщение об ошибке', type: string }
                type: object
  /api/EvnReanimatPeriod/mMoveToReanimation:
    post:
      tags:
        - EvnReanimatPeriod
      summary: 'Перевод пациента в реанимацию'
      operationId: 'EvnReanimatPeriod::mMoveToReanimation_post'
      parameters:
        -
          name: Person_id
          in: query
          description: 'Идентификатор персоны'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: MedService_id
          in: query
          description: 'Идентификатор медслужбы реанимации'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_id
          in: query
          description: 'Идентификатор движения пациента в отделении'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: LpuSection_id
          in: query
          description: 'Идентификатор профильного отделения пациента'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  ReanimatRegister_id: { description: 'Идентификатор реанимационного регистра', type: string }
                  EvnReanimatPeriod_id: { description: 'Идентификатор реанимационного периода', type: string }
                  error_msg: { description: 'Сообщение об ошибке', type: string }
                  error_code: { description: 'Код ошибки', type: string }
                type: object
  /api/EvnReanimatPeriod/mGetReanimationServices:
    get:
      tags:
        - EvnReanimatPeriod
      summary: 'Получение реанимационных служб'
      operationId: 'EvnReanimatPeriod::mGetReanimationServices_get'
      parameters:
        -
          name: Lpu_id
          in: query
          description: 'Идентификатор ЛПУ'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: 'Массив данных', type: array, items: { properties: { MedService_id: { description: 'Cлужбы, идентификатор', type: integer }, MedService_Nick: { description: 'Cлужбы, краткое наименование', type: string } }, type: object } }
                type: object
  /api/EvnSection/mGetListByDay:
    get:
      tags:
        - EvnSection
      summary: 'Получает пациентов в отделении с палатами и без'
      operationId: 'EvnSection::mGetListByDay_get'
      parameters:
        -
          name: LpuSection_id
          in: query
          description: 'Идентификатор отделения'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: byDate
          in: query
          description: Дата
          required: true
          schema:
            type: string
            format: date
        -
          name: groupBy
          in: query
          description: "Способ группировки:\r\n  * ward - по палате,\r\n  * doctor - по лечащему врачу,\r\n  * diag - по диагнозу\r\n  * status - по статусу (пока не используется)"
          required: false
          schema:
            type: string
            default: ward
        -
          name: scope
          in: query
          description: "Область видимости (фильтры):\r\n  *  all - все,\r\n  * no_retired - без выбывших,\r\n  * arriver - вновь прибыли (на дату),\r\n  * with_ward - с палатами,\r\n  * no_ward - без палаты,\r\n  * retired - выбыли,\r\n  * inward - в конкретной палате (должен быть передан LpuSectionWard_id),\r\n  * redirected - перенаправленные из других отделений"
          required: false
          schema:
            type: string
            default: all|no_retired
        -
          name: LpuSectionWard_id
          in: query
          description: 'Идентификатор палаты'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedStaffFact_id
          in: query
          description: 'Идентификатор рабочего места лечащего врача'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Person_SurName
          in: query
          description: 'Фамилия пациента'
          required: false
          schema:
            type: string
        -
          name: Person_FirName
          in: query
          description: 'Имя пациента'
          required: false
          schema:
            type: string
        -
          name: Person_SecName
          in: query
          description: 'Отчество пациента'
          required: false
          schema:
            type: string
        -
          name: Person_BirthDay
          in: query
          description: 'Дата рождения пациента'
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  group_id: { description: 'Идентификатор группы', type: integer }
                  group_title: { description: 'Наименование группы', type: string }
                  group_data: { description: 'Дополнительные данные по группе', properties: { isComfortable: { description: 'Палата повышенной комфортности', type: boolean }, Sex_id: { description: 'Тип палаты (общий, мужской, женский)', type: integer }, TotalBeds_Count: { description: 'Всего палат', type: integer }, FreeBeds_Count: { description: 'Свободно палат', type: integer } }, type: object }
                  patients: { description: 'Список пациентов', type: array, items: { properties: { EvnSection_id: { description: 'Идентификатор движения в отделении', type: integer }, EvnSection_rid: { description: 'Идентификатор родительского события движения', type: integer }, LpuSection_id: { description: 'Идентификатор отделения', type: integer }, Sex_id: { description: 'Пол пациента', type: integer }, PersonEncrypHIV_Encryp: { description: Шифр, type: string }, Person_Fio: { description: 'ФИО пациента', type: string }, Person_BirthDay: { description: 'Дата рождения пациента', type: string }, Person_Age: { description: 'Возраст пациента', type: integer }, Person_AgeMonth: { description: 'Количество месяцев от дня рождения', type: integer }, Diag_id: { description: 'Идентификатор диагноза', type: integer }, Diag_Code: { description: 'Код диагноза', type: string }, Diag_Name: { description: 'Наименование диагноза', type: string }, EvnSection_setDate: { description: 'Дата принятия', type: string }, EvnSection_disDate: { description: 'Дата выбытия', type: string }, Person_id: { description: 'Идентификатор персоны', type: integer }, Server_id: { description: 'Идентификатор сервера', type: integer }, PersonEvn_id: { description: 'Идентификатор периодики пациента', type: integer }, Mes_id: { description: 'Идентификатор МЭС', type: integer }, KoikoDni: { description: 'Количество дней по МЭС', type: integer }, EvnPS_id: { description: 'Идентификатор КВС', type: integer }, LpuSectionWard_id: { description: 'Идентификатор палаты', type: integer }, LpuSectionWard_Name: { description: 'Наименование палаты', type: string }, MedPersonal_id: { description: 'Идентификатор персонала', type: integer }, MedPersonal_Fin: { description: 'ФИО лечащего врача', type: string }, EvnSecdni: { description: 'Количество дней в стационаре', type: integer }, EvnReanimatPeriod_id: { description: 'Идентификатор периода реанимации', type: integer }, EvnSectionStatus_Name: { description: 'Статус пациента в отделении', type: string }, percentage: { description: Процент, type: integer }, mes_alias: { description: 'Наименование МЭС', type: string }, EvnPS_RFID: { description: RFID-метка, type: string }, Surgery_setDate: { description: 'Дата операции', type: string } }, type: object } }
                type: object
  /api/EvnSection/mGetLpuSectionWardList:
    get:
      tags:
        - EvnSection
      summary: 'Возвращает палаты отделения действующие и свободные на данный момент времени'
      operationId: 'EvnSection::mGetLpuSectionWardList_get'
      parameters:
        -
          name: EvnPS_id
          in: query
          description: 'Идентификатор КВС'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSection_id
          in: query
          description: 'Идентификатор отделения'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { CurrentLpuSectionWard: { description: 'Признак занята ли палата пациентом с EvnPS_id переданным в параметры', type: boolean }, LpuSectionWard_id: { description: 'Идентификатор палаты', type: integer }, LpuSection_id: { description: 'Идентификатор отделения', type: integer }, LpuSectionWard_Name: { description: 'Наименование палаты', type: string }, LpuWardType_id: { description: 'Тип палаты, идентификатор', type: integer }, LpuWardType_Name: { description: 'Наименование типа палаты', type: string }, Sex_id: { description: 'Тип палаты (общий, мужской, женский)', type: integer }, LpuSectionWard_TotalBedCount: { description: 'Общее количество коек', type: integer }, LpuSectionWard_FreeBedCount: { description: 'Количество свободных коек', type: integer } }, type: object } }
                type: object
  /api/EvnSection/mSetEvnSectionWard:
    post:
      tags:
        - EvnSection
      summary: 'Назначение в палату.'
      operationId: 'EvnSection::mSetEvnSectionWard_post'
      parameters:
        -
          name: LpuSectionWard_id
          in: query
          description: 'Идентификатор отделения'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_id
          in: query
          description: 'Идентификатор движения в отделении'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ответа', type: integer }
                  success: { description: 'Результат выполнения', type: boolean }
                  error_msg: { description: 'Сообщение об ошибке', type: string }
                type: object
  /api/EvnSection/mSetEvnSectionMedPersonal:
    post:
      tags:
        - EvnSection
      summary: 'Назначение врача для пациента'
      operationId: 'EvnSection::mSetEvnSectionMedPersonal_post'
      parameters:
        -
          name: EvnSection_id
          in: query
          description: 'Идентификатор движения'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_pid
          in: query
          description: 'Родительский идентификатор движения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedStaffFact_id
          in: query
          description: 'Идентифактор рабочего места врача'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ответа', type: integer }
                  success: { description: 'Результат выполнения', type: boolean }
                  error_msg: { description: 'Сообщение об ошибке', type: string }
                type: object
  /api/EvnSection/mGetLpuSectionDoctors:
    get:
      tags:
        - EvnSection
      summary: 'Получение врачей работающих в отделении'
      operationId: 'EvnSection::mGetLpuSectionDoctors_get'
      parameters:
        -
          name: LpuSection_id
          in: query
          description: 'Идентификатор отделения'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: LpuUnitType_SysNick
          in: query
          description: "Тип подразделения ЛПУ:\r\n  * polka\r\n  * stac\r\n  * pstac\r\n  * other"
          required: false
          schema:
            type: string
        -
          name: Date
          in: query
          description: Дата
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  MedStaffFact_id: { description: 'Идентификатор рабочего места врача', type: integer }
                  MedPersonal_id: { description: 'Идентификатор врача', type: integer }
                  LpuSection_id: { description: 'Идентификатор отделения', type: integer }
                  Person_Fio: { description: 'ФИО врача', type: string }
                type: object
  /api/EvnSection/mGetEvnSectionForm:
    get:
      tags:
        - EvnSection
      summary: 'Получение движения'
      operationId: 'EvnSection::mGetEvnSectionForm_get'
      parameters:
        -
          name: EvnSection_id
          in: query
          description: 'Идентификатор движения'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: Результат, type: array, items: { properties: { accessType: { description: 'Тип доступа', type: string }, EvnSection_id: { description: 'Движение в отделении, идентификатор', type: integer }, Lpu_id: { description: 'справочник ЛПУ, идентификатор ЛПУ', type: integer }, EvnSection_pid: { description: 'Идентификатор родительского события', type: string }, Person_id: { description: 'Справочник идентификаторов человека, Идентификатор', type: integer }, PersonEvn_id: { description: 'События по человеку, идентификатор', type: integer }, Server_id: { description: 'Идентификатор сервера', type: integer }, EvnDie_id: { description: 'Смерть пациента, идентификатор', type: integer }, EvnLeave_id: { description: 'Выписка из стационара, идентификатор', type: integer }, EvnOtherLpu_id: { description: 'Выписка в другое ЛПУ, идентификатор', type: integer }, EvnOtherSection_id: { description: 'Выписка в другое отделение, идентификатор', type: integer }, EvnOtherSectionBedProfile_id: { description: 'Профиль коек, куда производится выписка, идентификатор', type: integer }, EvnOtherStac_id: { description: 'Выписка в стационар другого типа, идентификатор', type: integer }, Diag_id: { description: 'Справочник диагнозов, идентификатор', type: integer }, Diag_eid: { description: Описание, type: string }, DiagSetPhase_id: { description: 'Степень тяжести состояния пациента (OID 1.2.643.5.1.13.13.11.1006 ), идентификатор', type: integer }, DiagSetPhase_aid: { description: Описание, type: string }, PrivilegeType_id: { description: 'тип льготы, идентификатор', type: integer }, EvnSection_PhaseDescr: { description: 'Движение в отделении, Описание фазы', type: string }, EvnSection_Absence: { description: 'Движение в отделении, Отсутствовал (дней)', type: string }, LpuSection_id: { description: 'Справочник ЛПУ: отделения, идентификатор', type: integer }, EvnSection_insideNumCard: { description: Описание, type: string }, LpuSectionTransType_id: { description: 'Справочник Вид транспортировки в отделение, идентификатор', type: integer }, LpuSectionWard_id: { description: 'Палатная структура ЛПУ, идентификатор', type: integer }, LpuUnitType_id: { description: 'тип подразделения ЛПУ, идентификатор', type: integer }, LpuUnitType_Code: { description: 'тип подразделения ЛПУ, код', type: string }, LpuUnitType_SysNick: { description: 'тип подразделения ЛПУ, системное наименование', type: string }, LpuSection_Code: { description: 'Справочник ЛПУ: отделения, код', type: string }, MedStaffFact_id: { description: 'Идентификатор места работы врача', type: integer }, MedPersonal_id: { description: 'Идентификатор медицинского работника', type: integer }, PayType_id: { description: 'Тип оплаты, идентификатор', type: integer }, PayType_SysNick: { description: 'Тип оплаты, системное наименование', type: string }, PayTypeERSB_id: { description: 'Тип оплаты ЭРСБ, Идентификатор', type: integer }, TariffClass_id: { description: 'Класс тарифа, идентификатор', type: integer }, EvnSection_IsAdultEscort: { description: 'Движение в отделении, В сопровождении взрослого', type: boolean }, EvnSection_IsMedReason: { description: 'Движение в отделении, По медицинским показаниям', type: boolean }, DeseaseBegTimeType_id: { description: 'Время с начала заболевания , идентификатор', type: integer }, DeseaseType_id: { description: 'Справочник заболеваний: характер заболевания, идентификатор', type: integer }, RehabScale_id: { description: 'Шкала реабилитационной маршрутизации, Идентификатор', type: integer }, RehabScale_vid: { description: Описание, type: string }, EvnSection_SofaScalePoints: { description: 'Движение в отделении, Баллы SOFA', type: string }, TumorStage_id: { description: 'Стадия опухолевого процесса, идентификатор', type: integer }, EvnSection_IsZNO: { description: 'Движение в отделении, подозрение на ЗНО', type: boolean }, Diag_spid: { description: Описание, type: string }, PainIntensity_id: { description: 'Интенсивность боли, идентификатор', type: integer }, Mes_id: { description: 'справочник МЭС, идентификатор', type: integer }, Mes_tid: { description: Описание, type: string }, Mes_sid: { description: Описание, type: string }, Mes_kid: { description: Описание, type: string }, MesTariff_id: { description: 'Тарифы МЭС, идентификатор', type: integer }, EvnSection_CoeffCTP: { description: 'Движение в отделении, Коэффициент сложности курации пациента', type: string }, EvnSection_disDate: { description: Описание, type: string }, EvnSection_setDate: { description: 'Дата прибытия', type: string }, EvnSection_disTime: { description: 'Время выбытия', type: string }, EvnSection_setTime: { description: 'Время прибытия', type: string }, LeaveType_id: { description: 'тип выписки , идентификатор', type: integer }, LeaveType_prmid: { description: Описание, type: string }, LeaveType_fedid: { description: 'тип выписки , Классификатор результатов обращения за медицинской помощью', type: string }, ResultDeseaseType_fedid: { description: 'Исход заболевания, классификатор исходов заболеваний (V012)', type: string }, EvnLeave_UKL: { description: Описание, type: string }, ResultDesease_id: { description: 'Результат заболевания, идентификатор', type: integer }, LeaveCause_id: { description: 'причина выписки, идентификатор', type: integer }, EvnLeave_IsAmbul: { description: 'Выписка из стационара, направлен на амбулаторное лечение', type: boolean }, Org_oid: { description: '', type: string }, LpuUnitType_oid: { description: Описание, type: string }, LpuSection_oid: { description: Описание, type: string }, LpuSectionBedProfile_oid: { description: Описание, type: string }, LpuSectionBedProfileLink_fedoid: { description: Описание, type: string }, EvnDie_IsWait: { description: 'Смерть пациента, Умер в приемном покое', type: boolean }, EvnDie_IsAnatom: { description: 'Смерть пациента, необходимость паталогоанатомической экспертизы', type: boolean }, AnatomWhere_id: { description: 'Справочник мест проведения патологоанатомических экспертиз, идентификатор', type: integer }, Diag_aid: { description: Описание, type: string }, Org_aid: { description: Описание, type: string }, LpuSection_aid: { description: Описание, type: string }, MedPersonal_aid: { description: Описание, type: string }, MedPersonal_did: { description: Описание, type: string }, EvnDie_expDate: { description: Описание, type: string }, EvnDie_expTime: { description: Описание, type: string }, Morbus_id: { description: 'Простое заболевание, идентификатор', type: integer }, UslugaComplex_id: { description: 'Комплексные услуги, идентификатор', type: integer }, LpuSectionProfile_id: { description: 'профиль отделения в ЛПУ, идентификатор', type: integer }, LpuSectionProfile_eid: { description: Описание, type: string }, EvnSection_IsPaid: { description: 'Движение в отделении, Случай оплачен', type: boolean }, EvnSection_IndexRep: { description: 'Движение в отделении, Признак повторной подачи', type: string }, EvnSection_IndexRepInReg: { description: 'Движение в отделении, Признак вхождения в реестр повторной подачи', type: string }, HTMedicalCareClass_id: { description: 'Классификатор методов высокотехнологичной медицинской помощи, Идентификатор', type: integer }, LeaveTypeFed_id: { description: Описание, type: integer }, PrehospTrauma_id: { description: 'Травма при предварительной госпитализации, идентификатор', type: integer }, EvnDiagPS_id: { description: 'Установка диагноза в стационаре, идентификатор', type: integer }, EvnSection_Index: { description: Описание, type: string }, CureResult_id: { description: 'Итог лечения, идентификатор', type: integer }, CureResult_Name: { description: 'Итог лечения, наименование', type: string }, EvnSection_IsTerm: { description: 'Движение в отделении, Случай прерван(Да/нет)', type: boolean }, RankinScale_id: { description: 'Шкала Рэнкина, иидентификатор', type: integer }, RankinScale_sid: { description: Описание, type: string }, EvnSection_InsultScale: { description: 'Движение в отделении, Значения шкалы инсульта Национального института здоровья', type: string }, EvnSection_NIHSSAfterTLT: { description: 'Движение в отделении, Значение шкалы инсульта Национального института здоровья после проведения ТЛТ', type: string }, EvnSection_NIHSSLeave: { description: 'Движение в отделении, Значение шкалы инсульта Национального института здоровья при выписке', type: string }, EvnSection_IsRehab: { description: 'Движение в отделении, признак по реабилитации', type: boolean }, MesType_id: { description: 'Тип МЭС, идентификатор', type: integer }, Mes_ksgid: { description: Описание, type: string }, Mes_Code: { description: 'справочник МЭС, код', type: string }, Mes_Name: { description: Описание, type: string }, MesOld_Num: { description: 'МЭС, Номер КСГ', type: string }, MesTariff_Value: { description: 'Тарифы МЭС, значение', type: string }, EvnSection_IsST: { description: 'Движение в отделении, Подъём сегмента ST', type: boolean }, EvnSection_isPartialPay: { description: 'Движение в отделении, Частичная оплата', type: string }, EvnSection_IsCardShock: { description: 'Движение в отделении, Осложнен кардиогенным шоком (да/нет)', type: boolean }, EvnSection_StartPainHour: { description: 'Движение в отделении, Время от начала боли (часов)', type: string }, EvnSection_StartPainMin: { description: 'Движение в отделении, Время от начала боли (минут)', type: string }, EvnSection_GraceScalePoints: { description: 'Движение в отделении, Кол-во баллов по шкале GRACE', type: string }, EvnSection_BarthelIdx: { description: 'Движение в отделении, Индекс Бартел', type: string }, PregnancyEvnPS_Period: { description: 'Дополнительные данные о беременности, Срок беременности в неделях', type: string }, LpuSectionBedProfileLink_fedid: { description: Описание, type: string }, MedicalCareBudgType_id: { description: 'Типы медицинской помощи по бюджету, Идентификатор', type: integer }, LpuSectionBedProfile_id: { description: 'профиль коек, идентификатор', type: integer }, DeathPlace_id: { description: 'Справочник свидетельств о смерти: место смерти, идентификатор', type: integer }, ProtocolCount: { description: Описание, type: string }, EvnPrescrCount: { description: Описание, type: string }, EvnDirectionCount: { description: Описание, type: string }, EvnDrugCount: { description: Описание, type: string }, EvnUslugaCount: { description: Описание, type: string }, EvnReceptCount: { description: Описание, type: string }, EvnXmlCount: { description: Описание, type: string }, EvnXml_id: { description: 'Ненормализованные данные для событий , Идентификатор', type: integer }, DrugTherapy: { description: Описание, type: array, items: { type: object } } }, type: object } }
                type: object
  /api/EvnSection/mSaveEvnSectionInHosp:
    post:
      tags:
        - EvnSection
      summary: 'Создание движения по указанному отделению'
      operationId: 'EvnSection::mSaveEvnSectionInHosp_post'
      parameters:
        -
          name: EvnSection_pid
          in: query
          description: 'Идентификатор родительского события'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_setDate
          in: query
          description: 'Дата поступления'
          required: false
          schema:
            type: string
            format: date
        -
          name: EvnSection_setTime
          in: query
          description: 'Время поступления'
          required: false
          schema:
            type: string
        -
          name: LpuSection_id
          in: query
          description: Отделение
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Person_id
          in: query
          description: 'Идентификатор человека'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: PersonEvn_id
          in: query
          description: 'Идентификатор состояния человека'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Server_id
          in: query
          description: 'Идентификатор сервера'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: vizit_direction_control_check
          in: query
          description: 'Проверка пересечения КВС и ТАП'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ощибки', type: string }
                  success: { description: 'Результат выполнения', type: boolean }
                type: object
  /api/EvnSection/mDeleteEvnSectionInHosp:
    post:
      tags:
        - EvnSection
      summary: 'Отмена госпитализации из АРМа приемного отделения'
      operationId: 'EvnSection::mDeleteEvnSectionInHosp_post'
      parameters:
        -
          name: EvnSection_id
          in: query
          description: 'Идентификатор случая движения пациента в стационаре'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnPS_id
          in: query
          description: 'Идентификатор КВС'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: number }
                  success: { description: 'Результат выполнения', type: boolean }
                type: object
  /api/EvnSection/mGetEvnSectionViewData:
    get:
      tags:
        - EvnSection
      summary: 'Получение движения (расширенный метод)'
      operationId: 'EvnSection::mGetEvnSectionViewData_get'
      parameters:
        -
          name: EvnSection_id
          in: query
          description: 'Идентификатор движения'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: Описание, type: string }
                  data: { description: Описание, type: array, items: { properties: { accessType: { description: Описание, type: string }, allowUnsign: { description: Описание, type: string }, Lpu_id: { description: 'справочник ЛПУ, ЛПУ', type: integer }, Diag_id: { description: 'Справочник диагнозов, идентификатор', type: integer }, Diag_pid: { description: 'Справочник диагнозов, идентификатор диагноза родителя', type: string }, EvnSection_id: { description: 'Движение в отделении, идентификатор', type: integer }, EvnSection_pid: { description: Описание, type: string }, EvnClass_id: { description: 'класс события, идентификатор', type: integer }, EvnDiagPS_class: { description: Описание, type: string }, Person_id: { description: 'Справочник идентификаторов человека, Идентификатор', type: integer }, PersonEvn_id: { description: 'События по человеку, идентификатор', type: integer }, Server_id: { description: Описание, type: integer }, Person_Age: { description: Описание, type: string }, Sex_SysNick: { description: 'Справочник половых признаков, системное наименование', type: string }, LpuSection_Name: { description: 'Справочник ЛПУ: отделения, наименование', type: string }, LowLpuSection_Name: { description: Описание, type: string }, MedPersonal_Fio: { description: Описание, type: string }, EvnSection_setDate: { description: Описание, type: string }, EvnSection_setTime: { description: Описание, type: string }, EvnSection_disDate: { description: Описание, type: string }, EvnSection_disTime: { description: Описание, type: string }, PayType_Name: { description: 'Тип оплаты, наименование', type: string }, PayTypeERSB_id: { description: 'Тип оплаты ЭРСБ, Идентификатор', type: integer }, PayTypeERSB_Name: { description: 'Тип оплаты ЭРСБ, Наименование', type: string }, LpuSectionWard_Name: { description: 'Палатная структура ЛПУ, наименование (номер)', type: string }, TariffClass_Name: { description: 'Класс тарифа, наименование', type: string }, LpuSection_id: { description: 'Справочник ЛПУ: отделения, идентификатор', type: integer }, MedPersonal_id: { description: 'Кэш врачей, идентификатор медицинского работника', type: integer }, LpuSectionWard_id: { description: 'Палатная структура ЛПУ, идентификатор', type: integer }, MedStaffFact_id: { description: 'Кэш мест работы, идентификатор места работы', type: integer }, MedSpecOms_id: { description: 'справочник специальностей врачей по ОМС, Идентификатор записи', type: integer }, FedMedSpec_id: { description: Описание, type: integer }, Mes_id: { description: 'справочник МЭС, идентификатор', type: integer }, LpuSectionTransType_Name: { description: 'Справочник Вид транспортировки в отделение, наименование', type: string }, PayType_id: { description: 'Тип оплаты, идентификатор', type: integer }, PayType_SysNick: { description: 'Тип оплаты, системное наименование', type: string }, TariffClass_id: { description: 'Класс тарифа, идентификатор', type: integer }, Diag_Name: { description: 'Справочник диагнозов, наименование', type: string }, Diag_Code: { description: 'Справочник диагнозов, код', type: string }, DeseaseType_Name: { description: 'Справочник заболеваний: характер заболевания, наименование', type: string }, TumorStage_Name: { description: 'Стадия опухолевого процесса, наименование', type: string }, PainIntensity_Name: { description: 'Интенсивность боли, наименование', type: string }, LeaveType_id: { description: 'тип выписки , идентификатор', type: integer }, LeaveType_Code: { description: 'тип выписки , код', type: string }, LeaveType_SysNick: { description: 'тип выписки , системное наименование', type: string }, LeaveType_Name: { description: 'тип выписки , наименование', type: string }, EvnSection_leaveDate: { description: Описание, type: string }, EvnSection_leaveTime: { description: Описание, type: string }, LpuSection_o_Name: { description: Описание, type: string }, LpuSectionProfile_id: { description: 'профиль отделения в ЛПУ, идентификатор', type: integer }, LpuUnitType_Code: { description: 'тип подразделения ЛПУ, код', type: string }, LpuUnitType_SysNick: { description: 'тип подразделения ЛПУ, системное наименование', type: string }, PrehospWaifRefuseCause_id: { description: 'Причина отказа от госпитализации, идентификатор', type: integer }, PrehospArrive_id: { description: 'Кем доставлен при предварительной госпитализации, идентификатор', type: integer }, PrehospArrive_SysNick: { description: 'Кем доставлен при предварительной госпитализации, системное наименование', type: string }, PrehospType_id: { description: 'Тип предварительной госпитализации, идентификатор', type: integer }, PrehospType_SysNick: { description: 'Тип предварительной госпитализации, системное наименование', type: string }, LpuSectionNEXT_id: { description: Описание, type: integer }, EvnPS_IsTransfCall: { description: 'Карта выбывшего из стационара, признак ''Передан активный вызов'' (да/нет)', type: boolean }, ResultClass_id: { description: 'Полка: результат лечения, идентификатор', type: integer }, ResultDeseaseType_id: { description: 'Исход заболевания, идентификатор', type: integer }, EvnPS_OutcomeDate: { description: Описание, type: string }, EvnPS_OutcomeTime: { description: Описание, type: string }, Mes_Code: { description: 'справочник МЭС, код', type: string }, Mes_Name: { description: Описание, type: string }, EvnSection_KoikoDni: { description: Описание, type: string }, Mes_KoikoDni: { description: 'справочник МЭС, койкодни', type: string }, Procent_KoikoDni: { description: Описание, type: string }, EvnSection_IsSigned: { description: Описание, type: boolean }, ins_Name: { description: Описание, type: string }, sign_Name: { description: Описание, type: string }, insDT: { description: Описание, type: string }, signDT: { description: Описание, type: string }, CureStandart_Count: { description: Описание, type: string }, DiagFedMes_FileName: { description: 'Диагноз по федеральным месам, имя файла', type: string }, LpuSectionBedProfile_id: { description: 'профиль коек, идентификатор', type: integer }, LpuSectionBedProfile_Name: { description: 'профиль коек, наименование', type: string }, EvnSection_KSG: { description: Описание, type: string }, EvnSection_KSGName: { description: Описание, type: string }, DrugTherapyScheme_Code: { description: 'Схемы лекарственной терапии, Код схемы', type: string }, DrugTherapyScheme_Name: { description: 'Схемы лекарственной терапии, Наименование и описание схемы', type: string }, RehabScale_id: { description: 'Шкала реабилитационной маршрутизации, Идентификатор', type: integer }, RehabScale_Name: { description: 'Шкала реабилитационной маршрутизации, Наименование', type: string }, RehabScale_vid: { description: Описание, type: string }, RehabScaleOut_Name: { description: Описание, type: string }, EvnSection_SofaScalePoints: { description: 'Движение в отделении, Баллы SOFA', type: string }, MesRid_Code: { description: Описание, type: string }, Mes_rid: { description: Описание, type: string }, EvnSection_KPG: { description: Описание, type: string }, UslugaComplex_id: { description: 'Комплексные услуги, идентификатор', type: integer }, Mes_sid: { description: Описание, type: string }, EvnSection_insideNumCard: { description: Описание, type: string }, es_LpuSectionProfile_id: { description: Описание, type: integer }, LpuSectionProfile_Code: { description: 'профиль отделения в ЛПУ, код', type: string }, LpuSectionProfile_Name: { description: 'профиль отделения в ЛПУ, наименование', type: string }, UslugaComplex_Code: { description: 'Комплексные услуги, код', type: string }, UslugaComplex_Name: { description: 'Комплексные услуги, наименование', type: string }, HTMedicalCareClass_id: { description: 'Классификатор методов высокотехнологичной медицинской помощи, Идентификатор', type: integer }, isAllowFedResultFields: { description: Описание, type: string }, EvnSection_setDateYmd: { description: Описание, type: string }, LeaveType_prmid: { description: Описание, type: string }, LeaveType_fedid: { description: 'тип выписки , Классификатор результатов обращения за медицинской помощью', type: string }, ResultDeseaseType_fedid: { description: 'Исход заболевания, классификатор исходов заболеваний (V012)', type: string }, PrmLeaveType_Code: { description: Описание, type: string }, PrmLeaveType_Name: { description: Описание, type: string }, FedLeaveType_Code: { description: Описание, type: string }, FedLeaveType_Name: { description: Описание, type: string }, FedResultDeseaseType_Code: { description: Описание, type: string }, FedResultDeseaseType_Name: { description: Описание, type: string }, EvnSection_IsPriem: { description: 'Движение в отделении, Признак приемного отделения (да/нет)', type: boolean }, CureResult_id: { description: 'Итог лечения, идентификатор', type: integer }, CureResult_Name: { description: 'Итог лечения, наименование', type: string }, EvnSection_IsTerm: { description: 'Движение в отделении, Случай прерван(Да/нет)', type: boolean }, RankinScale_id: { description: 'Шкала Рэнкина, иидентификатор', type: integer }, RankinScale_sid: { description: Описание, type: string }, RankinScale_Name: { description: 'Шкала Рэнкина, наименование', type: string }, RankinScale_sName: { description: Описание, type: string }, EvnSection_InsultScale: { description: 'Движение в отделении, Значения шкалы инсульта Национального института здоровья', type: string }, EvnSection_NIHSSAfterTLT: { description: 'Движение в отделении, Значение шкалы инсульта Национального института здоровья после проведения ТЛТ', type: string }, EvnSection_NIHSSLeave: { description: 'Движение в отделении, Значение шкалы инсульта Национального института здоровья при выписке', type: string }, DiagFinance_IsRankin: { description: 'Справочник диагнозов: тип финансирования диагноза, признак указания значения по шкале Рэнкина', type: boolean }, ResultClass_Name: { description: 'Полка: результат лечения, наименование', type: string }, ResultDeseaseType_Name: { description: 'Исход заболевания, наименование', type: string }, EvnSection_IsST: { description: 'Движение в отделении, Подъём сегмента ST', type: boolean }, EvnSection_IsCardShock: { description: 'Движение в отделении, Осложнен кардиогенным шоком (да/нет)', type: boolean }, EvnSection_StartPainHour: { description: 'Движение в отделении, Время от начала боли (часов)', type: string }, EvnSection_StartPainMin: { description: 'Движение в отделении, Время от начала боли (минут)', type: string }, EvnSection_GraceScalePoints: { description: 'Движение в отделении, Кол-во баллов по шкале GRACE', type: string }, EvnSection_BarthelIdx: { description: 'Движение в отделении, Индекс Бартел', type: string }, Duration: { description: Описание, type: string }, EvnSection_KSGUslugaNumber: { description: Описание, type: string }, EvnSection_KSGCoeff: { description: Описание, type: string }, PregnancyEvnPS_Period: { description: 'Дополнительные данные о беременности, Срок беременности в неделях', type: string }, ProtocolCount: { description: Описание, type: string }, EvnPrescrCount: { description: Описание, type: string }, EvnDirectionCount: { description: Описание, type: string }, EvnDrugCount: { description: Описание, type: string }, EvnUslugaCount: { description: Описание, type: string }, EvnReceptCount: { description: Описание, type: string }, EvnXmlCount: { description: Описание, type: string }, EvnXml_id: { description: 'Ненормализованные данные для событий , Идентификатор', type: integer }, displayEvnObservGraphs: { description: Описание, type: string }, listMorbus: { description: Описание, type: array, items: { properties: { onko: { description: Описание, type: array, items: { properties: { MorbusType_id: { description: 'Тип заболевания, идентификатор', type: integer }, Morbus_id: { description: 'Простое заболевание, идентификатор', type: integer }, Diag_Code: { description: 'Справочник диагнозов, код', type: string }, Diag_id: { description: 'Справочник диагнозов, идентификатор', type: integer }, diagIsMain: { description: Описание, type: string }, EvnDiagPLSop_id: { description: 'Сопутствующий диагноз в поликлинике, идентификатор', type: integer }, disableAddEvnNotify: { description: Описание, type: string }, morbusTypeSysNick: { description: Описание, type: string }, MorbusOnkoVizitPLDop_id: { description: 'Талон дополнений на онкобольного, идентификатор', type: integer }, MorbusOnkoLeave_id: { description: 'Выписка из стационара на онкобольного, идентификатор', type: integer } }, type: object } } }, type: object } }, isDisabledAddEvnInfectNotify: { description: Описание, type: string }, isVisibleOnko: { description: Описание, type: string }, isDisabledAddEvnOnkoNotify: { description: Описание, type: string }, listPersonRegister: { description: Описание, type: array, items: { properties: { onko: { description: Описание, type: array, items: { properties: { PersonRegisterType_id: { description: 'Тип регистра, идентификатор', type: integer }, PersonRegisterType_SysNick: { description: 'Тип регистра, системное наименование', type: string }, MorbusType_id: { description: 'Тип заболевания, идентификатор', type: integer }, MorbusType_SysNick: { description: 'Тип заболевания, системное наименование', type: string } }, type: object } }, prof: { description: Описание, type: array, items: { properties: { PersonRegisterType_id: { description: 'Тип регистра, идентификатор', type: integer }, PersonRegisterType_SysNick: { description: 'Тип регистра, системное наименование', type: string }, MorbusType_id: { description: 'Тип заболевания, идентификатор', type: integer }, MorbusType_SysNick: { description: 'Тип заболевания, системное наименование', type: string } }, type: object } } }, type: object } }, isVisibleProf: { description: Описание, type: string }, isDisabledAddEvnNotifyProf: { description: Описание, type: string } }, type: object } }
                type: object
  /api/rish/EvnSection/mUpdateEvnSection:
    post:
      tags:
        - EvnSection
      summary: 'Обновление движения'
      operationId: 'EvnSection::mUpdateEvnSection_post'
      parameters:
        -
          name: EvnSection_id
          in: query
          description: 'Идентификатор случая движения пациента в стационаре'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_pid
          in: query
          description: 'Идентификатор карты выбывшего из стационара'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_setDate
          in: query
          description: 'Дата поступления'
          required: false
          schema:
            type: string
            format: date
        -
          name: EvnSection_setTime
          in: query
          description: 'Время поступления'
          required: false
          schema:
            type: string
        -
          name: Person_id
          in: query
          description: 'Идентификатор человека'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonEvn_id
          in: query
          description: 'Идентификатор состояния человека'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Server_id
          in: query
          description: 'Источник данных'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_disDate
          in: query
          description: 'Дата выписки'
          required: false
          schema:
            type: string
            format: date
        -
          name: EvnSection_disTime
          in: query
          description: 'Время выписки'
          required: false
          schema:
            type: string
        -
          name: EvnSection_IsAdultEscort
          in: query
          description: 'Сопровождается взрослым'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_IsMedReason
          in: query
          description: 'По медицинским показаниям'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PayType_id
          in: query
          description: 'Вид оплаты'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PayTypeERSB_id
          in: query
          description: 'Тип оплаты'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSection_id
          in: query
          description: Отделение
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedPersonal_id
          in: query
          description: Врач
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedStaffFact_id
          in: query
          description: 'Рабочее место врача'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSectionWard_id
          in: query
          description: Палата
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Diag_id
          in: query
          description: 'Основной диагноз'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Diag_eid
          in: query
          description: 'Внешняя причина'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: DiagSetPhase_id
          in: query
          description: Фаза/стадия
          required: false
          schema:
            type: integer
            format: int64
        -
          name: DiagSetPhase_aid
          in: query
          description: 'Состояние пациента при выписке'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PrivilegeType_id
          in: query
          description: 'Впервые выявленная инвалидность'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_PhaseDescr
          in: query
          description: Расшифровка
          required: false
          schema:
            type: string
        -
          name: EvnSection_Absence
          in: query
          description: 'Отсутствовал (дней)'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: CureResult_id
          in: query
          description: 'Итог лечения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Mes_id
          in: query
          description: МЭС
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Mes2_id
          in: query
          description: МЭС2
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Mes_tid
          in: query
          description: 'КСГ найденная через диагноз'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Mes_sid
          in: query
          description: 'КСГ найденная через услугу'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Mes_kid
          in: query
          description: КПГ
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_CoeffCTP
          in: query
          description: 'Коэффициент КСКП'
          required: false
          schema:
            type: string
        -
          name: EvnSection_insideNumCard
          in: query
          description: 'Внутр. № карты'
          required: false
          schema:
            type: string
        -
          name: MesTariff_id
          in: query
          description: Коэффициент
          required: false
          schema:
            type: integer
            format: int64
        -
          name: TariffClass_id
          in: query
          description: 'Вид тарифа'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LeaveType_prmid
          in: query
          description: 'Исход в приемном отделении'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LeaveType_fedid
          in: query
          description: 'Фед. результат'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ResultDeseaseType_fedid
          in: query
          description: 'Фед. исход'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_id
          in: query
          description: Услуга
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MesOldUslugaComplex_id
          in: query
          description: 'Связка по КСГ'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_TotalFract
          in: query
          description: 'Количество фракций'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSectionProfile_id
          in: query
          description: Профиль
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSectionBedProfileLink_fedid
          in: query
          description: 'Профиль койки отделения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_IsMeal
          in: query
          description: 'С питанием'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_IsTerm
          in: query
          description: 'Случай прерван'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: HTMedicalCareClass_id
          in: query
          description: 'Вид высокотехнологичной медицинской помощи (V018)'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSectionTransType_id
          in: query
          description: LpuSectionTransType_id
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LeaveType_id
          in: query
          description: 'Исход госпитализации'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedicalCareBudgType_id
          in: query
          description: 'Тип медицинской помощи'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_IndexRep
          in: query
          description: 'Признак повторной подачи'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: DeseaseBegTimeType_id
          in: query
          description: 'Время с начала заболевания'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: DeseaseType_id
          in: query
          description: Характер
          required: false
          schema:
            type: integer
            format: int64
        -
          name: RehabScale_id
          in: query
          description: 'Оценка состояния по ШРМ'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_SofaScalePoints
          in: query
          description: 'Оценка по шкале органной недостаточности c(SOFA)'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: TumorStage_id
          in: query
          description: 'Стадия выявленного ЗНО'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_IsZNO
          in: query
          description: 'Подозрение на ЗНО'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_IsZNORemove
          in: query
          description: 'Снятие признака подозрения на ЗНО'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_BiopsyDate
          in: query
          description: 'Дата взятия биопсии'
          required: false
          schema:
            type: string
            format: date
        -
          name: Diag_spid
          in: query
          description: 'Подозрение на диагноз'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PainIntensity_id
          in: query
          description: 'Интенсивность боли'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_IsRehab
          in: query
          description: 'По реабилитации'
          required: false
          schema:
            type: string
        -
          name: RankinScale_id
          in: query
          description: 'Значение по шкале Рэнкина при поступлении'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: RankinScale_sid
          in: query
          description: 'Значение по шкале Рэнкина при выписке'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_InsultScale
          in: query
          description: 'Значение шкалы инсульта Национального института здоровья'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_NIHSSAfterTLT
          in: query
          description: 'Значение шкалы инсульта Национального института здоровья после проведения ТЛТ'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_NIHSSLeave
          in: query
          description: 'Значение шкалы инсульта Национального института здоровья при выписке '
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSectionBedProfile_id
          in: query
          description: 'Профиль койки отделения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_IsST
          in: query
          description: 'Подъём сегмента ST'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_isPartialPay
          in: query
          description: 'Частичная оплата'
          required: false
          schema:
            type: string
        -
          name: EvnSection_IsCardShock
          in: query
          description: 'Осложнен кардиогенным шоком'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_StartPainHour
          in: query
          description: 'Время от начала боли, часов'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_StartPainMin
          in: query
          description: 'Время от начала боли, минут'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_GraceScalePoints
          in: query
          description: 'Кол-во баллов по шкале GRACE'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_BarthelIdx
          in: query
          description: 'Индекс Бартел'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: RehabScale_vid
          in: query
          description: 'Оценка состояния по ШРМ при выписке'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_IsMultiKSG
          in: query
          description: 'Более одной КСГ'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: GetBed_id
          in: query
          description: 'Профиль койки'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: isAutoCreate
          in: query
          description: 'Флаг автоматического сохранения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: vizit_direction_control_check
          in: query
          description: 'Контроль пересечения движения с посещением'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: vizit_kvs_control_check
          in: query
          description: 'Контроль пересечения посещения с КВС'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: vizit_intersection_control_check
          in: query
          description: 'Контроль пересечения посещений'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ignoreParentEvnDateCheck
          in: query
          description: 'Признак игнорирования проверки периода выполенения услуги'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: checkIsOMS
          in: query
          description: 'Проверка диагноза'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ignoreEvnUslugaKSGCheck
          in: query
          description: 'Признак игнорирования проверки наличия услуги'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ignoreDiagKSGCheck
          in: query
          description: 'Признак игнорирования проверки КСГ по диагнозу'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ignoreNotHirurgKSG
          in: query
          description: 'Признак игнорирования проверки нехирургической КСГ'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ignoreFirstDisableCheck
          in: query
          description: 'Признак игнорирования проверки первичности инвалидности'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ignoreMorbusOnkoDrugCheck
          in: query
          description: 'Признак игнорирования проверки препаратов в онко заболевании'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: silentSave
          in: query
          description: Автосохранение
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LeaveType_Code
          in: query
          description: 'Код исхода госпитализации'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LeaveType_SysNick
          in: query
          description: 'Системное наименование исхода госпитализации'
          required: false
          schema:
            type: string
        -
          name: EvnDie_id
          in: query
          description: 'Идентификатор исхода ''Смерть'''
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnLeave_id
          in: query
          description: 'Идентификатор исхода ''Выписка'''
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnOtherLpu_id
          in: query
          description: 'Идентификатор исхода ''Перевод в другое ЛПУ'''
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnOtherSection_id
          in: query
          description: 'Идентификатор исхода ''Перевод в другое отделение'''
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnOtherSectionBedProfile_id
          in: query
          description: 'Идентификатор исхода ''Перевод на другой профиль коек'''
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnOtherStac_id
          in: query
          description: 'Идентификатор исхода ''Перевод в стационар другого типа'''
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnLeave_UKL
          in: query
          description: 'Уровень качества лечения'
          required: false
          schema:
            type: string
        -
          name: LeaveCause_id
          in: query
          description: 'Исход госпитализации'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ResultDesease_id
          in: query
          description: 'Исход заболевания'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Org_aid
          in: query
          description: Организация
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedPersonal_did
          in: query
          description: 'Врач, установивший смерть'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedStaffFact_did
          in: query
          description: 'Рабочее место врача, установившего смерть'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedPersonal_aid
          in: query
          description: Врач-патологоанатом
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSection_aid
          in: query
          description: Отделение
          required: false
          schema:
            type: integer
            format: int64
        -
          name: DeathPlace_id
          in: query
          description: 'Идентификатор места смерти'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: editAnatom
          in: query
          description: 'Призак редактирования экспертизы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: AnatomWhere_id
          in: query
          description: 'Место проведения экспертизы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Diag_aid
          in: query
          description: 'Основной патологоанатомический диагноз'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ESecEF_EvnSection_IsZNOCheckbox
          in: query
          description: 'Подозрение на ЗНО'
          required: false
          schema:
            type: string
        -
          name: EvnDie_expDate
          in: query
          description: 'Дата проведения экспертизы'
          required: false
          schema:
            type: string
            format: date
        -
          name: EvnDie_expTime
          in: query
          description: 'Время проведения экспертизы'
          required: false
          schema:
            type: string
        -
          name: EvnDie_IsWait
          in: query
          description: 'Умер в приемном покое'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnDie_IsAnatom
          in: query
          description: 'Признак необходимости проведения экспертизы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnLeave_IsAmbul
          in: query
          description: 'Направлен на амбулаторное лечение'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Org_oid
          in: query
          description: ЛПУ
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSection_oid
          in: query
          description: Отделение
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuUnitType_oid
          in: query
          description: 'Тип стационара'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSectionBedProfile_oid
          in: query
          description: 'Профиль коек'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSectionBedProfileLink_fedoid
          in: query
          description: 'Профиль коек'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ChildTermType_id
          in: query
          description: Доношенность
          required: false
          schema:
            type: integer
            format: int64
        -
          name: FeedingType_id
          in: query
          description: 'Вид вскармливания'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonNewBorn_id
          in: query
          description: 'Идентификатор сведений о новорожденном'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonNewBorn_IsAidsMother
          in: query
          description: 'ВИЧ-инфекция у матери'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonNewBorn_IsBCG
          in: query
          description: БЦЖ
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonNewBorn_Breast
          in: query
          description: БЦЖ
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonNewBorn_Head
          in: query
          description: БЦЖ
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonNewBorn_Height
          in: query
          description: БЦЖ
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonNewBorn_Weight
          in: query
          description: БЦЖ
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonNewBorn_IsHepatit
          in: query
          description: БЦЖ
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonNewBorn_IsHighRisk
          in: query
          description: БЦЖ
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonNewBorn_IsAudio
          in: query
          description: БЦЖ
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonNewBorn_IsBleeding
          in: query
          description: БЦЖ
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonNewBorn_IsBreath
          in: query
          description: Дыхание
          required: false
          schema:
            type: string
        -
          name: PersonNewBorn_IsHeart
          in: query
          description: Сердцебиение
          required: false
          schema:
            type: string
        -
          name: PersonNewBorn_IsPulsation
          in: query
          description: 'Пульсация пуповины'
          required: false
          schema:
            type: string
        -
          name: PersonNewBorn_IsMuscle
          in: query
          description: 'Произвольное сокращение мускулатуры'
          required: false
          schema:
            type: string
        -
          name: PersonNewborn_BloodBili
          in: query
          description: 'Общий билирубин'
          required: false
          schema:
            type: string
        -
          name: PersonNewborn_BloodHemoglo
          in: query
          description: Гемоглобин
          required: false
          schema:
            type: string
        -
          name: PersonNewborn_BloodEryth
          in: query
          description: Эритроциты
          required: false
          schema:
            type: string
        -
          name: PersonNewborn_BloodHemato
          in: query
          description: Гематокрит
          required: false
          schema:
            type: string
        -
          name: NewBornWardType_id
          in: query
          description: БЦЖ
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonNewBorn_IsNeonatal
          in: query
          description: БЦЖ
          required: false
          schema:
            type: integer
            format: int64
        -
          name: personHeightData
          in: query
          description: 'Измерения длины (роста) новорожденного'
          required: false
          schema:
            type: string
        -
          name: personWeightData
          in: query
          description: 'Измерения массы новорожденного'
          required: false
          schema:
            type: string
        -
          name: PersonNewBorn_BCGNum
          in: query
          description: 'Номер (БЦЖ)'
          required: false
          schema:
            type: string
        -
          name: PersonNewBorn_BCGDate
          in: query
          description: 'Номер (БЦЖ)'
          required: false
          schema:
            type: string
            format: date
        -
          name: isPersonNewBorn
          in: query
          description: isPersonNewBorn
          required: false
          schema:
            type: string
        -
          name: PersonNewBorn_HepatitDate
          in: query
          description: 'Номер (БЦЖ)'
          required: false
          schema:
            type: string
            format: date
        -
          name: BirthSpecStac_id
          in: query
          description: 'Номер (БЦЖ)'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ChildPositionType_id
          in: query
          description: Предлежание
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonNewBorn_CountChild
          in: query
          description: 'Который по счету'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ApgarData
          in: query
          description: 'Который по счету'
          required: false
          schema:
            type: string
        -
          name: PersonBirthTraumaData
          in: query
          description: 'Который по счету'
          required: false
          schema:
            type: string
        -
          name: PersonNewBorn_IsRejection
          in: query
          description: 'Отказ от ребенка'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonNewBorn_HepatitSer
          in: query
          description: 'Серия (БЦЖ)'
          required: false
          schema:
            type: string
        -
          name: PersonNewBorn_HepatitNum
          in: query
          description: 'Серия (БЦЖ)'
          required: false
          schema:
            type: string
        -
          name: PersonNewBorn_BCGSer
          in: query
          description: 'Серия (БЦЖ)'
          required: false
          schema:
            type: string
        -
          name: birthDataPresented
          in: query
          description: 'Заполнять ли данные по беременности и родам'
          required: false
          schema:
            type: string
        -
          name: DataViewDiag
          in: query
          description: 'Данные по клиническим диагнозам'
          required: false
          schema:
            type: string
        -
          name: ignoreCheckEvnUslugaChange
          in: query
          description: 'Признак игнорирования проверки изменения привязок услуг'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ignoreCheckEvnUslugaDates
          in: query
          description: 'Признак игнорирования проверки дат услуг'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ignoreEvnUslugaHirurgKSGCheck
          in: query
          description: 'Признак игнорирования проверки услуг по хирургической КСГ'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ignoreCheckKSGisEmpty
          in: query
          description: 'Признак игнорирования проверки пустой КСГ'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ignoreCheckCardioFieldsEmpty
          in: query
          description: 'Признак игнорирования проверки полей кардио-блока'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ignoreCheckTNM
          in: query
          description: 'Признак игнорирования проверки соответствия диагноза и TNM'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: ignoreCheckMorbusOnko
          in: query
          description: 'Признак игнорирования проверки перед удалением специфики'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnSection_IsCardioCheck
          in: query
          description: 'Признак необходимости проверок поей кардио-блока'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PregnancyEvnPS_Period
          in: query
          description: 'Срок беременности'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonRegister_id
          in: query
          description: 'Идентификатор записи в базовом регистре'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonPregnancy
          in: query
          description: 'Анкета по беременности'
          required: false
          schema:
            type: string
        -
          name: PregnancyScreenList
          in: query
          description: 'Скрининги беременности'
          required: false
          schema:
            type: string
        -
          name: BirthCertificate
          in: query
          description: 'Родовой сертификат'
          required: false
          schema:
            type: string
        -
          name: BirthSpecStac
          in: query
          description: 'Исход беременности'
          required: false
          schema:
            type: string
        -
          name: skipPersonRegisterSearch
          in: query
          description: 'Пропустить поиск записи в регистре беременных'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: DrugTherapyScheme_ids
          in: query
          description: 'Схема лекарственной терапии'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  EvnSection_id: { description: 'Движение в отделении, идентификатор', type: integer }
                  success: { description: Описание, type: string }
                  error_code: { description: Описание, type: string }
                  error_msg: { description: Описание, type: string }
                type: object
  /api/EvnUsluga/mloadEvnUslugaPanel:
    get:
      tags:
        - EvnUsluga
      summary: 'Загрузка списка услуг'
      operationId: 'EvnUsluga::mloadEvnUslugaPanel_get'
      parameters:
        -
          name: EvnUsluga_pid
          in: query
          description: 'Идентификатор случая'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: Описание, type: string }
                  data: { description: Описание, type: array, items: { properties: { EvnUsluga_id: { description: 'Оказание услуги, идентификатор', type: integer }, EvnClass_SysNick: { description: 'класс события, системное наименование', type: string }, UslugaComplex_Name: { description: 'Комплексные услуги, наименование', type: string }, EvnUsluga_setDate: { description: Описание, type: string }, EvnUsluga_Count: { description: Описание, type: string }, EvnUsluga_Kolvo: { description: 'Оказание услуги, Кол-во оказанных услуг', type: string }, EvnDiagPLStom_id: { description: 'Заболевание: Стоматология, идентификатор', type: integer }, EvnXml_id: { description: 'Ненормализованные данные для событий , Идентификатор', type: integer } }, type: object } }
                type: object
  /api/EvnXml/mCreateEmpty:
    post:
      tags:
        - EvnXml
      summary: 'Создание нового документа из шаблона'
      operationId: 'EvnXml::mCreateEmpty_post'
      parameters:
        -
          name: EvnXml_id
          in: query
          description: 'Идентификатор документа'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Evn_id
          in: query
          description: 'Идентификатор события'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: XmlTemplate_id
          in: query
          description: 'Идентификатор шаблона'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: XmlType_id
          in: query
          description: 'Тип документа'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnClass_id
          in: query
          description: 'Категория документа'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedStaffFact_id
          in: query
          description: 'Рабочее место врача'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  success: { description: 'Результат выполенения', type: string }
                type: object
  /api/EvnXml/mUpdateContent:
    post:
      tags:
        - EvnXml
      summary: 'Функция сохранения Xml-данных. Дополнительные параметры передать в массиве save_data'
      operationId: 'EvnXml::mUpdateContent_post'
      parameters:
        -
          name: EvnXml_id
          in: query
          description: 'Идентификатор документа'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: name
          in: query
          description: 'Имя раздела'
          required: false
          schema:
            type: string
        -
          name: value
          in: query
          description: 'Содержание раздела'
          required: false
          schema:
            type: string
        -
          name: XmlData
          in: query
          description: 'Имена разделов со значениями'
          required: false
          schema:
            type: string
        -
          name: isHTML
          in: query
          description: 'Флаг сохраняем с разметкой'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  success: { description: 'Результат выполнения', type: string }
                type: object
  /api/EvnXml/mDestroy:
    post:
      tags:
        - EvnXml
      summary: 'Удаление документа'
      operationId: 'EvnXml::mDestroy_post'
      parameters:
        -
          name: EvnXml_id
          in: query
          description: 'Идентификатор документа'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  success: { description: 'Результат выполнения', type: string }
                  error_msg: { description: 'Текст ошибки', type: string }
                type: object
  /api/LpuSection/mGetLpuSectionList:
    get:
      tags:
        - LpuSection
      summary: 'Получение отделений'
      operationId: 'LpuSection::mGetLpuSectionList_get'
      parameters:
        -
          name: 'Lpu_id '
          in: query
          description: 'Идентификатор МО'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuUnitType_id
          in: query
          description: 'Идентификатор типа подразделения'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { LpuSection_id: { description: 'Справочник ЛПУ: отделения, идентификатор', type: integer }, LpuBuilding_id: { description: 'Подразделения, идентификатор', type: integer }, LpuUnit_id: { description: 'Группы отделений, идентификатор', type: integer }, LpuSectionAge_id: { description: 'тип отделения по возрасту, идентификатор', type: integer }, LpuSectionProfile_id: { description: 'профиль отделения в ЛПУ, идентификатор', type: integer }, LpuSectionProfile_Code: { description: 'профиль отделения в ЛПУ, код', type: string }, LpuSectionProfile_Name: { description: 'профиль отделения в ЛПУ, наименование', type: string }, LpuSectionProfile_SysNick: { description: 'профиль отделения в ЛПУ, системное наименование', type: string }, LpuUnitType_id: { description: 'тип подразделения ЛПУ, идентификатор', type: integer }, LpuSection_Code: { description: 'Справочник ЛПУ: отделения, код', type: string }, LpuSection_Name: { description: 'Справочник ЛПУ: отделения, наименование', type: string }, LpuUnitType_Code: { description: 'тип подразделения ЛПУ, код', type: string }, LpuUnitType_SysNick: { description: 'тип подразделения ЛПУ, системное наименование', type: string }, LpuSection_setDate: { description: 'Дата начала работы', type: string }, LpuSection_disDate: { description: 'Дата окончания работы', type: string }, Lpu_id: { description: 'справочник ЛПУ, ЛПУ', type: integer } }, type: object } }
                type: object
  /api/rish/MedStaffFact/getDoctorInfo:
    get:
      tags:
        - MedStaffFact
      summary: 'Получить информацию по доктору'
      operationId: 'MedStaffFact::getDoctorInfo_get'
      parameters:
        -
          name: MedStaffFact_id
          in: query
          description: 'Идентификатор рабочего места врача'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { id: { description: Идентификатор, type: string }, doctor_fio: { description: 'ФИО доктора', type: string }, profile_name: { description: 'Название профиля', type: string }, profile_id: { description: 'Идентификатор профиля', type: integer }, category: { description: Категория, type: string }, lpu_nick: { description: 'Наименовение ЛПУ', type: string }, unit_name: { description: 'Наименование подразделения', type: string }, address: { description: Адрес, type: string }, current_main: { description: 'Текущее место работы', type: array, items: { properties: { FullName: { description: 'Полное имя', type: string }, QualificationCat_Name: { description: 'Наименовение квалификационной категории', type: string }, QualificationCategory: { description: 'Квалификационной категории', type: string }, Person_id: { description: 'Справочник идентификаторов человека, Идентификатор', type: integer }, WorkData_begDate: { description: 'Начало работы', type: string }, WorkData_endDate: { description: 'Окончание работы', type: string }, WorkType_id: { description: 'Тип рабочего места', type: integer }, Dolgnost_Name: { description: 'Название должности', type: string }, Lpu_id: { description: 'справочник ЛПУ, ЛПУ', type: integer }, Lpu_Name: { description: 'Название ЛПУ', type: string }, MedSpecOms_Name: { description: 'справочник специальностей врачей по ОМС, Наименование записи', type: string }, MedSpecOms_Code: { description: 'справочник специальностей врачей по ОМС, Код записи', type: string }, LpuSection_Name: { description: 'Справочник ЛПУ: отделения, наименование', type: string }, LpuUnit_Name: { description: 'Группы отделений, наименование', type: string }, Address_id: { description: 'Справочник адресов, идентификатор', type: integer }, MedStaffFact_id: { description: 'Идентификатор места работы', type: integer }, MedPersonal_id: { description: 'Идентификатор медицинского работника', type: integer }, Age: { description: Возраст, type: string }, LpuUnit_Address: { description: 'Адрес подразделения', type: string } }, type: object } }, current_addons: { description: 'Остальные места работы', type: array, items: { properties: { FullName: { description: 'Полное имя', type: string }, QualificationCat_Name: { description: 'Название квалификации', type: string }, QualificationCategory: { description: 'Квалификационная категория', type: string }, Person_id: { description: 'Справочник идентификаторов человека, Идентификатор', type: integer }, WorkData_begDate: { description: 'Дата начала работы', type: string }, WorkData_endDate: { description: 'Дата окончания работы', type: string }, WorkType_id: { description: 'Тип рабочего места', type: integer }, Dolgnost_Name: { description: 'Название должности', type: string }, Lpu_id: { description: 'Идентфикатор ЛПУ', type: integer }, Lpu_Name: { description: 'Название ЛПУ', type: string }, MedSpecOms_Name: { description: 'справочник специальностей врачей по ОМС, Наименование записи', type: string }, MedSpecOms_Code: { description: 'справочник специальностей врачей по ОМС, Код записи', type: string }, LpuSection_Name: { description: 'Справочник ЛПУ: отделения, наименование', type: string }, LpuUnit_Name: { description: 'Группы отделений, наименование', type: string }, Address_id: { description: 'Справочник адресов, идентификатор', type: integer }, MedStaffFact_id: { description: 'Идентификатор места работы', type: integer }, MedPersonal_id: { description: 'Идентификатор медицинского работника', type: integer }, Age: { description: Возраст, type: string }, LpuUnit_Address: { description: 'Адрес подразделения', type: string } }, type: object } }, dolgnost: { description: ДОлжность, type: string }, educations: { description: Образование, type: array, items: { properties: { YearOfGraduation: { description: 'Год окончаения учёбы', type: string }, EducationType_Name: { description: 'Уровень обучения, наименование', type: string }, EducationInstitution_Name: { description: 'Название образовательного учреждения', type: string }, Speciality_id: { description: 'Идентификатор специальности', type: integer }, DiplomaSpeciality_Name: { description: 'Название специальности в дипломе', type: string }, AcademicMedicalDegree_Name: { description: 'Учёная степень', type: string }, Speciality_Code: { description: 'Код специальности', type: string } }, type: object } }, annot: { description: Примечание, type: string } }, type: object } }
                type: object
  /api/messages/mgetMessagesList:
    get:
      tags:
        - messages
      summary: 'Получение списка сообщений'
      operationId: 'Messages::mgetMessagesList_get'
      parameters:
        -
          name: start
          in: query
          description: 'Позиция просматриваемого сообщения'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: limit
          in: query
          description: 'Кол-во подгружаемых сообщений'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: query
          in: query
          description: 'Строка запроса'
          required: false
          schema:
            type: string
        -
          name: EvnClass_Name
          in: query
          description: 'Имя события'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  totalCount: { description: 'Общее количество', type: string }
                  overLimit: { description: Описание, type: string }
                  data: { description: Данные, type: array, items: { properties: { Evn_id: { description: 'Событие, Идентификатор события', type: integer }, Message_id: { description: 'Сообщения, идентификатор', type: integer }, Message_pid: { description: 'Сообщения, идентификатор родительского сообщения', type: string }, Message_setDT: { description: 'Дата сообщения', type: string }, UserSend_ID: { description: 'Идентификатор отправителя', type: string }, Message_Subject: { description: 'Заголовок сообщения', type: string }, Message_Text: { description: 'Сообщения, текст', type: string }, Message_isRead: { description: 'Флаг прочтения сообщения', type: string }, MessageRecipient_id: { description: 'Идентификатор получателя сообщения', type: integer }, UserRecipient_id: { description: 'Идентификатор получателя сообщения', type: integer }, Message_isFlag: { description: 'Флаг сообщения', type: string }, NoticeType_id: { description: 'Тип новости', type: integer }, EvnClass_Name: { description: 'класс события, наименование', type: string }, PersonEvn_id: { description: 'События по человеку, идентификатор', type: integer }, Server_id: { description: 'Идентификатор сервера', type: integer }, Evn_rid: { description: 'Событие, получатель документа', type: string }, EvnClass_SysNick: { description: 'класс события, системное наименование', type: string }, EvnClass_rSysNick: { description: 'Краткое наименование события', type: string }, Person_id: { description: 'Справочник идентификаторов человека, Идентификатор', type: integer }, Person_Fio: { description: ФИО, type: string }, EvnXml_id: { description: 'Ненормализованные данные для событий , Идентификатор', type: integer } }, type: object } }
                type: object
  /api/rish/Messages/mSendPush:
    post:
      tags:
        - Messages
      summary: 'Отправка уведомлений'
      operationId: 'Messages::mSendPush_post'
      parameters:
        -
          name: pmUser_id
          in: query
          description: 'Идентификатор пользователя'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Message_id
          in: query
          description: 'Идентификатор сообщения'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Users_list
          in: query
          description: 'Список идентификаторов(передается через запятую)'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { Error_Code: { description: 'Код ошибки', type: string }, Error_Msg: { description: 'Сообщение об ошибке', type: string } }, type: object } }
                type: object
  /api/rish/Messages/mSetTimeWorkTime:
    post:
      tags:
        - Messages
      summary: 'Установить время смены'
      operationId: 'Messages::mSetTimeWorkTime_post'
      parameters:
        -
          name: pmUser_tid
          in: query
          description: 'Идентификатор пользователя'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: TimeJournal_BegDT
          in: query
          description: 'Дата начала смены'
          required: true
          schema:
            type: string
            format: date
        -
          name: TimeJournal_EndDT
          in: query
          description: 'Дата окончания смены'
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { TimeJournal_id: { description: 'Журнал учета рабочего времени сотрудников, Идентификатор', type: integer }, Error_Code: { description: 'Код ошибки', type: string }, Error_Msg: { description: 'Сообщение об ошибке', type: string } }, type: object } }
                type: object
  /api/rish/Messages/mCheckActiveWorkTime:
    get:
      tags:
        - Messages
      summary: 'Проверка активной смены'
      operationId: 'Messages::mCheckActiveWorkTime_get'
      parameters:
        -
          name: pmUser_tid
          in: query
          description: 'Идентификатор пользователя'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { TimeJournal_id: { description: 'Журнал учета рабочего времени сотрудников, Идентификатор', type: integer }, response: { description: Ответ, type: string } }, type: object } }
                type: object
  /api/rish/Messages/mSetEndDTWorkTime:
    post:
      tags:
        - Messages
      summary: 'Установка окончания смены'
      operationId: 'Messages::mSetEndDTWorkTime_post'
      parameters:
        -
          name: pmUser_tid
          in: query
          description: 'Идентификатор пользователя'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  error_msg: { description: 'Сообщение об ошибке', type: string }
                type: object
  /api/PacketPrescr/mLoadPacketPrescrList:
    get:
      tags:
        - PacketPrescr
      summary: 'Получение списка пакетов назначений'
      operationId: 'PacketPrescr::mLoadPacketPrescrList_get'
      parameters:
        -
          name: Diag_id
          in: query
          description: Диагноз
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Evn_id
          in: query
          description: 'Идентификатор случая'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: mode
          in: query
          description: "Владелец пакета\r\n  *     my-мои пакеты\r\n  *     shared - пакеты общего пользования"
          required: false
          schema:
            type: string
        -
          name: onlyFavor
          in: query
          description: "Выбрать только избранные пакеты\r\n  *     true - только избранные пакеты\r\n  *     false - все пакеты"
          required: false
          schema:
            type: boolean
        -
          name: MedPersonal_id
          in: query
          description: 'Идентификатор сотрудника'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: query
          in: query
          description: 'строка фильтра'
          required: false
          schema:
            type: string
        -
          name: Sex_Code
          in: query
          description: Пол
          required: false
          schema:
            type: integer
            format: int64
        -
          name: PersonAgeGroup_Code
          in: query
          description: 'Возрастная группа'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: 'Массив выходных данных', type: array, items: { properties: { PacketPrescr_id: { description: 'Пакетное назначение, Идентификатор записи', type: integer }, PacketPrescr_Name: { description: 'Пакетное назначение, Наименование записи', type: string }, PacketPrescr_Descr: { description: 'Описание пакетного назначения', type: string }, Diag_Codes: { description: 'Код диагноза', type: string }, Packet_IsFavorite: { description: 'Идентификатор избранного пакетного назначения', type: boolean }, PacketPrescrVision_id: { description: 'Область видимости стандарта лечения, Идентификатор записи', type: integer }, PacketPrescrVision_Name: { description: 'Область видимости стандарта лечения, Наименование записи', type: string }, PersonAgeGroup_Name: { description: 'Справочник возрастных категорий, наименование', type: string }, Sex_Name: { description: 'Справочник половых признаков, наименование', type: string }, PacketPrescr_updDT: { description: 'Дата обновления записи', type: string } }, type: object } }
                type: object
  /api/PacketPrescr/mSavePacketPrescrForm:
    post:
      tags:
        - PacketPrescr
      summary: 'Сохраняет назначения выделенные в шаблоне'
      operationId: 'PacketPrescr::mSavePacketPrescrForm_post'
      parameters:
        -
          name: PacketPrescr_id
          in: query
          description: 'Идентификатор пакета'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: save_data
          in: query
          description: 'Выделенные назначения'
          required: false
          schema:
            type: string
        -
          name: parentEvnClass_SysNick
          in: query
          description: 'Системное имя события, породившего назначение'
          required: false
          schema:
            type: string
        -
          name: Evn_pid
          in: query
          description: 'Идентификатор события, породившего назначение'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: PersonEvn_id
          in: query
          description: 'Идентификатор события по человеку'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Server_id
          in: query
          description: 'Идентификатор сервера'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: mode
          in: query
          description: "Режим сохранения/применения\r\n  *     apply\r\n  *     savePacket\r\n  *     applyAllPacket"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  success: { description: 'Результат выполнения', type: boolean }
                type: object
  /api/PacketPrescr/mGetPacketPrescrData:
    get:
      tags:
        - PacketPrescr
      summary: 'Получние состава исследований пакета назначений'
      operationId: 'PacketPrescr::mGetPacketPrescrData_get'
      parameters:
        -
          name: PacketPrescr_id
          in: query
          description: 'Идентификатор пакета'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { name: { description: 'Наименование исследования', type: string }, content: { description: 'Массив данных', type: array, items: { properties: { id: { description: 'Идентификатор параметра', type: string }, name: { description: 'Имя параметра', type: string } }, type: object } } }, type: object } }
                type: object
  /api/PacketPrescr/mSetPacketFavorite:
    post:
      tags:
        - PacketPrescr
      summary: 'Поменять признак избранности пакета назначений'
      operationId: 'PacketPrescr::mSetPacketFavorite_post'
      parameters:
        -
          name: PacketPrescr_id
          in: query
          description: 'Идентификатор пакета'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Packet_IsFavorite
          in: query
          description: "Признак избранности пакета\r\n  *     0-убрать избранность\r\n  *     2-установить избранность"
          required: true
          schema:
            type: integer
            format: int64
        -
          name: MedPersonal_id
          in: query
          description: 'Идентификатор сотрудника'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  error_msg: { description: 'Сообщение об ошибке', type: string }
                  success: { description: "Признак успешности выполнения\r\n  *     true- запрос выполнился\r\n  *     false- не выполнился", type: string }
                type: object
  /api/rish/Person/mSendPersonCallNotify:
    post:
      tags:
        - Person
      summary: 'Вызов пациента(отправка уведомления)'
      operationId: 'Person::mSendPersonCallNotify_post'
      parameters:
        -
          name: Person_id
          in: query
          description: 'Идентификатор человека'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: ARMType_id
          in: query
          description: 'Идентификатор места работы'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ответа', type: string }
                  data: { description: Данные, type: array, items: { type: object } }
                type: object
  /api/rish/Person/getPersonRecordsAllForPortal:
    get:
      tags:
        - Person
      summary: 'Показать будущие и прошедшие записи'
      operationId: 'Person::getPersonRecordsAllForPortal_get'
      parameters:
        -
          name: Person_id
          in: query
          description: 'Идентификатор человека'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: pastRecords
          in: query
          description: 'Флаг Показать только прошедшие записи'
          required: false
          schema:
            type: string
        -
          name: futureRecords
          in: query
          description: 'Флаг Показать только будущие записи'
          required: false
          schema:
            type: string
        -
          name: showTodayRecords
          in: query
          description: 'Флаг Показать только записи на сегодня'
          required: false
          schema:
            type: string
        -
          name: pmuser_id
          in: query
          description: 'Идентифкатор аккаунта'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { TimetableGraf_id: { description: 'Идентификатор бирки', type: integer }, TimetableGraf_Day: { description: 'Идентификатор дня', type: string }, TimetableGraf_updDT: { description: 'Время обновления бирки', type: string }, TimetableGraf_begTime: { description: 'Дата и время бирки', type: string }, RecordSetDate: { description: 'Дата бирки', type: string }, RecordSetTime: { description: 'Время бирки', type: string }, DateDiff: { description: 'Разница в минутах от текущего времени', type: string }, MonthDiff: { description: 'Разница в месяцах от текущего времени', type: string }, Lpu_id: { description: 'справочник ЛПУ, ЛПУ', type: integer }, Lpu_Nick: { description: 'Краткое наименование ЛПУ', type: string }, Lpu_Name: { description: 'Полное наименование ЛПУ', type: string }, LpuUnit_id: { description: 'Группы отделений, идентификатор', type: integer }, LpuUnit_Name: { description: 'Группы отделений, наименование', type: string }, LpuUnit_Phone: { description: 'Группы отделений, телефон', type: string }, LpuUnit_Address: { description: 'Адрес подразделения', type: string }, Person_FIO: { description: 'ФИО человека', type: string }, Person_id: { description: 'Справочник идентификаторов человека, Идентификатор', type: integer }, EvnDirection_TalonCode: { description: 'Выписка направлений, Код бронирования электронной очереди', type: string }, ElectronicTalon_Num: { description: 'Талон Электронной очереди, номер талона', type: string }, TimetableGraf_IsModerated: { description: 'Признак модерации бирки', type: boolean }, MedStaffFact_id: { description: 'Кэш мест работы, идентификатор места работы', type: integer }, MedSpecOms_id: { description: 'справочник специальностей врачей по ОМС, Идентификатор записи', type: integer }, MedStaffFactCache_IsPaidRec: { description: "Тип стоимости бирки\r\n  * 1- бесплатная\r\n  * 2 - платная", type: boolean }, MedStaffFactCache_CostRec: { description: 'Стоимость приёма врача', type: string }, MedPersonal_FIO: { description: 'ФИО врача', type: string }, MedPersonal_FullFIO: { description: 'Полное ФИО', type: string }, ProfileSpec_Name: { description: 'Название специальности', type: string }, Profile_id: { description: 'Идентификатор профиля', type: integer }, cabinetDetectionZNO: { description: 'Кабинет раннего выявления заболеваний', type: string } }, type: object } }
                type: object
  /api/Queue/mCancelQueueRecord:
    post:
      tags:
        - Queue
      summary: 'Отмена записи в очереди по профилю'
      operationId: 'Queue::mCancelQueueRecord_post'
      parameters:
        -
          name: EvnComment_Comment
          in: query
          description: Комментарий
          required: false
          schema:
            type: string
        -
          name: EvnQueue_id
          in: query
          description: 'Идентификатор записи в очереди'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnDirection_id
          in: query
          description: 'Идентификатор направления'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: QueueFailCause_id
          in: query
          description: "Причина отмены направления\r\n  *     1 - Пролечен амбулаторно\r\n  *     2 - Госпитализирован экстренно\r\n  *     3 - Пролечен в другом ЛПУ\r\n  *     4 - Смерть пациента\r\n  *     5 - Неверный ввод\r\n  *     6 - Обслужен вне очереди\r\n  *     7 - Перенаправлен\r\n  *     8 - Отказ пациента\r\n  *     9 - Отсутствуют реагенты\r\n  *     10 - Отсутствует биоматериал\r\n  *     11 - Ошибочное направление\r\n  *     12 - Неявка пациента\r\n  *     13 - Предложенная бирка не подтверждена\r\n  *     14 - Отказ от предложенной бирки\r\n  *     15 - Изменение врача, ведущего прием"
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnStatusCause_id
          in: query
          description: "Причина смены статуса\r\n  *     1 - Отказ пациента\r\n  *     2 - Принят вне очереди\r\n  *     3 - Ошибочное направление\r\n  *     4 - Неверный ввод\r\n  *     5 - Смерть пациента\r\n  *     6 - Нет показаний для госпитализации\r\n  *     7 - Нет мест для госпитализации\r\n  *     8 - Нет специалиста на данный момент\r\n  *     9 - Пролечен амбулаторно\r\n  *     10 - Госпитализирован экстренно\r\n  *     11 - Пролечен в другой МО\r\n  *     12 - Диагноз не соответствует профилю стационара\r\n  *     13 - Эпидпоказания\r\n  *     14 - Отсутствуют реагенты\r\n  *     15 - Отсутствует биоматериал\r\n  *     16 - Обработка заявки заблокирована\r\n  *     17 - Перенаправлен\r\n  *     18 - Неявка пациента\r\n  *     19 - Направление не обосновано\r\n  *     20 - Карантин в отделении\r\n  *     21 - Уход пациента\r\n  *     22 - Непредоставление необходимого пакета документов\r\n  *     23 - Констатация факта смерти\r\n  *      "
          required: false
          schema:
            type: integer
            format: int64
        -
          name: cancelType
          in: query
          description: 'Тип отмены направления'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  success: { description: 'Результат выполнения', type: string }
                type: object
  /api/rish/refbook/mLoadRefbookUslugaComplex:
    get:
      tags:
        - refbook
      summary: 'Загрузка списка услуг с использованием фильтрации'
      operationId: 'Refbook::mLoadRefbookUslugaComplex_get'
      parameters:
        -
          name: UslugaComplex_id
          in: query
          description: 'Идентификатор услуги'
          required: false
          schema:
            type: string
        -
          name: UslugaComplex_pid
          in: query
          description: 'Идентификатор услуги-родителя'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplexLevel_id
          in: query
          description: 'Уровень услуги'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Lpu_id
          in: query
          description: МО
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSection_id
          in: query
          description: 'Отделение МО'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_Code
          in: query
          description: 'Код услуги'
          required: false
          schema:
            type: string
        -
          name: UslugaComplex_Name
          in: query
          description: 'Наименование услуги'
          required: false
          schema:
            type: string
        -
          name: UslugaCategory_id
          in: query
          description: 'Категория услуги'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { UslugaComplex_id: { description: 'Комплексные услуги, идентификатор', type: integer }, UslugaComplex_pid: { description: 'Комплексные услуги, идентификатор родительской услуги', type: string }, UslugaComplexLevel_id: { description: 'Уровни комплексных услуг, идентификатор', type: integer }, Lpu_id: { description: 'справочник ЛПУ, ЛПУ', type: integer }, LpuSection_id: { description: 'Справочник ЛПУ: отделения, идентификатор', type: integer }, UslugaComplex_Code: { description: 'Комплексные услуги, код', type: string }, UslugaComplex_Name: { description: 'Комплексные услуги, наименование', type: string }, UslugaCategory_id: { description: 'Категория услуг, идентификатор', type: integer } }, type: object } }
                type: object
  /api/ReportRun/mRunByFileName:
    get:
      tags:
        - ReportRun
      summary: 'Запуск отчёта по имени файла отчёта'
      operationId: 'ReportRun::mRunByFileName_get'
      parameters:
        -
          name: Report_FileName
          in: query
          description: 'Наименование файла отчета (без расширения)'
          required: true
          schema:
            type: string
        -
          name: Report_FileType
          in: query
          description: 'Тип файла отчета (по умолчанию rptdesign)'
          required: false
          schema:
            type: string
        -
          name: Report_Params
          in: query
          description: 'JSON-строка с параметрами для отчета'
          required: true
          schema:
            type: string
        -
          name: Report_Format
          in: query
          description: 'Формат отчета (PDF - по умолчанию)'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Бинарный файл отчета'
  /api/rish/Storage/mGetListStorage:
    get:
      tags:
        - Storage
      summary: 'Метод получения списка складов'
      operationId: 'Storage::mGetListStorage_get'
      parameters:
        -
          name: Date
          in: query
          description: 'текущая дата'
          required: true
          schema:
            type: string
            format: date
        -
          name: LpuSection_id
          in: query
          description: 'текущее отделение врача из сессии'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnPrescrTreatDrug_id
          in: query
          description: 'идентификатор медикамента из назначения'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { Storage_id: { description: 'Склад, идентификатор', type: integer }, StorageType_id: { description: 'Тип склада, идентификатор', type: integer }, Storage_Code: { description: 'Склад, код', type: string }, Storage_Name: { description: 'Склад, наименование', type: string }, Storage_begDate: { description: 'Склад, Дата открытия', type: string }, Storage_endDate: { description: 'Склад, Дата закрытия', type: string }, LpuSection_id: { description: 'Справочник ЛПУ: отделения, идентификатор', type: integer }, MedService_id: { description: 'Cлужбы, идентификатор', type: integer }, MedServiceType_SysNick: { description: 'Типы служб, системное наименование', type: string }, Org_id: { description: 'Cправочник организаций, Идентификатор', type: integer }, Address: { description: Адрес, type: string } }, type: object } }
                type: object
  /api/rish/Storage/mGetListMedicineStorage:
    get:
      tags:
        - Storage
      summary: 'Метод получения списка медикаментов склада'
      operationId: 'Storage::mGetListMedicineStorage_get'
      parameters:
        -
          name: Date
          in: query
          description: 'текущая дата'
          required: true
          schema:
            type: string
            format: date
        -
          name: Storage_id
          in: query
          description: 'текущее отделение врача из сессии'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: DrugPrepFas_id
          in: query
          description: 'идентификатор медикамента из назначения'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { DrugPrep_Name: { description: 'наименование медикамента', type: string }, DrugPrepFas_id: { description: 'идентификатор медикамента', type: integer }, Storage_id: { description: 'Склад, идентификатор', type: integer }, hintPackagingData: { description: rls.Drug.DrugNomen, type: string }, hintRegistrationData: { description: 'информация о регистрации', type: string }, hintPRUP: { description: 'наименование фирмы, выпускающей препарат', type: string }, FirmNames: { description: 'наименование фирмы, выпускающей препарат', type: string } }, type: object } }
                type: object
  /api/Template/mLoadEvnXmlViewData:
    post:
      tags:
        - Template
      summary: 'Функция чтения документа для формы просмотра'
      operationId: 'Template::mLoadEvnXmlViewData_post'
      parameters:
        -
          name: EvnXml_id
          in: query
          description: 'Идентификатор документа'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: instance_id
          in: query
          description: 'Идентификатор экземпляра'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: Описание, type: string }
                  data: { description: Описание, type: array, items: { properties: { Evn_id: { description: 'Событие, Идентификатор события', type: integer }, Evn_pid: { description: 'Событие, Учетный документ, в рамках которого добавлено заболевание', type: string }, Evn_rid: { description: 'Событие, получатель документа', type: string }, EvnClass_id: { description: 'класс события, идентификатор', type: integer }, EvnXml_id: { description: 'Ненормализованные данные для событий , Идентификатор', type: integer }, XmlType_id: { description: 'Тип произвольного документа, идентификатор', type: integer }, xml_data: { description: 'Дополнительная информация', type: array, items: { properties: { parameter: { description: 'Информация о параметре', type: string } }, type: object } }, html: { description: 'Строка с html версткой', type: string } }, type: object } }
                type: object
  /api/rish/Timetable/Apply:
    get:
      tags:
        - Timetable
      summary: 'Запись на бирку'
      operationId: 'Timetable::Apply_get'
      parameters:
        -
          name: Lpu_id
          in: query
          description: 'Идентификатор МО'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: pmuser_id
          in: query
          description: Врач
          required: false
          schema:
            type: integer
            format: int64
        -
          name: TimetableGraf_id
          in: query
          description: 'Идентификатор бирки поликлиники'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Person_id
          in: query
          description: 'Идентификатор человека'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  success: { description: 'Результат выполнения', type: string }
                  error_msg: { description: 'Текст ошибки, появляется только при наличии ошибки', type: string }
                type: object
  /api/rish/Timetable/MakeTimetableForPortal:
    get:
      tags:
        - Timetable
      summary: 'Получение расписания'
      operationId: 'Timetable::MakeTimetableForPortal_get'
      parameters:
        -
          name: config
          in: query
          description: Конфиг
          required: false
          schema:
            type: string
        -
          name: MedStaffFact_id
          in: query
          description: 'Идентификатор врача'
          required: false
          schema:
            type: string
        -
          name: allow_pay
          in: query
          description: 'Флаг Разрешить платный прием'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { date: { description: Дата, type: string }, datetime: { description: Дата/время, type: string }, date_readable: { description: 'Число месяц', type: string }, date_readable_full: { description: 'Число месяц год', type: string }, day_of_week: { description: 'день недели сокращенно', type: string }, day_of_week_full: { description: 'день недели полностью', type: string }, is_today: { description: 'признак Бирка на сегодня', type: string }, day_num: { description: Число, type: string }, month_add: { description: месяц, type: string }, id: { description: Идентификатор, type: string }, description: { description: Примечание, type: string }, timetable: { description: 'Массив с бирками', type: array, items: { properties: { TimetableGraf_id: { description: 'Идентификатор бирки', type: integer }, Person_id: { description: 'Справочник идентификаторов человека, Идентификатор', type: integer }, TimeTableGraf_Day: { description: 'Расписание, бирки по поликлинике, день', type: string }, TimetableGraf_begTime: { description: 'Дата и время бирки', type: string }, TimetableType_id: { description: 'Тип бирки', type: integer }, pmUser_updID: { description: 'Идентификатор пользователя создавшего бирку', type: integer }, IsFuture: { description: "\r\n  * 0 - бирка на сегодня\r\n  * 1 - бирка на будущее", type: integer }, DateDiff: { description: 'Разница в днях от сегодняшней даты', type: string }, TimetableLock_lockTime: { description: 'Время на которое бирка заблокирована', type: string }, time: { description: 'Время бирки', type: string }, date: { description: 'Дата бирки', type: string }, datetime_readable_desc: { description: 'день недели, число, месяц', type: string }, datetime_readable: { description: 'число, месяц, день недели, время', type: string }, is_free: { description: 'признак Бирка свободна', type: string }, my_record: { description: 'Признак На бирку записан я', type: string }, annot: { description: Примечание, type: string }, MedStaffFactDay_Descr: { description: 'Примечание от врача', type: string }, class: { description: 'Класс бирки, нужен для раскрашивания бирок', type: string }, tooltip: { description: 'Всплывающее сообщение', type: string } }, type: object } }, timetable_is_free: { description: 'Признак возможности записи на бирку', type: string } }, type: object } }
                type: object
  /api/rish/Timetable/CancelForPortal:
    get:
      tags:
        - Timetable
      summary: 'Отмена записи на бирку'
      operationId: 'Timetable::CancelForPortal_get'
      parameters:
        -
          name: pmuser_id
          in: query
          description: Врач
          required: false
          schema:
            type: integer
            format: int64
        -
          name: TimetableGraf_id
          in: query
          description: 'Идентификатор бирки поликлиники'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: allow_cancel_any_time
          in: query
          description: 'Разрещить отменять записи в любое время'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  success: { description: 'Результат выполнения', type: string }
                  error_msg: { description: 'Сообщение об ошибке(если имеется)', type: string }
                type: object
  /api/rish/VideoChat/mloadPMUserContactList:
    get:
      tags:
        - VideoChat
      summary: 'Получение списка контактов пользователя'
      operationId: 'VideoChat::mloadPMUserContactList_get'
      parameters:
        -
          name: query
          in: query
          description: 'Строка поиска'
          required: false
          schema:
            type: string
        -
          name: searchInPromed
          in: query
          description: 'Флаг поиска в промеде'
          required: false
          schema:
            type: string
        -
          name: Lpu_oid
          in: query
          description: 'Идентификатор МО'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSection_id
          in: query
          description: 'Идентификатор отделения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: Dolgnost_id
          in: query
          description: 'Идентификатор должности'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: pmUser_oid
          in: query
          description: 'Идентификатор пользователя'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  data: { description: Данные, type: array, items: { properties: { pmUser_id: { description: 'Идентификатор пользователя', type: integer }, SurName: { description: Фамилия, type: string }, FirName: { description: Имя, type: string }, SecName: { description: Отчество, type: string }, Login: { description: Логин, type: string }, pmUserContacts_id: { description: 'Контакты пользователя, Идентификатор записи', type: integer }, VideoSettings_id: { description: 'Идентификатор настроек видео', type: integer }, Avatar: { description: Аватар, type: string }, Status: { description: Статус, type: string }, hasCamera: { description: 'Наличие камеры', type: string }, LpuList: { description: 'Список ЛПУ', type: array, items: { properties: { Lpu_id: { description: 'справочник ЛПУ, ЛПУ', type: integer }, Lpu_Nick: { description: 'Краткое имя ЛПУ', type: string } }, type: object } } }, type: object } }
                type: object
  /api/rish/VideoChat/mAddPMUserContact:
    post:
      tags:
        - VideoChat
      summary: 'Добавление контакта'
      operationId: 'VideoChat::mAddPMUserContact_post'
      parameters:
        -
          name: pmUserCache_rid
          in: query
          description: 'Идентификатор пользователя контакта'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  data: { description: Данные, type: array, items: { properties: { success: { description: 'Результат выполнения', type: string }, Error_Code: { description: 'Код ошибки', type: string }, Error_Msg: { description: 'Сообщение об ошибке', type: string } }, type: object } }
                type: object
  /api/rish/VideoChat/mSendTextMessage:
    post:
      tags:
        - VideoChat
      summary: 'Отправка текстового сообщения'
      operationId: 'VideoChat::mSendTextMessage_post'
      parameters:
        -
          name: pmUser_gid_list
          in: query
          description: 'Идентификатор получателя'
          required: true
          schema:
            type: string
        -
          name: text
          in: query
          description: 'Текст сообщение'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  success: { description: 'Результат выполнения', type: string }
                type: object
  /api/rish/VideoChat/mloadMessageList:
    get:
      tags:
        - VideoChat
      summary: 'Получить список сообщений'
      operationId: 'VideoChat::mloadMessageList_get'
      parameters:
        -
          name: pmUser_cid_list
          in: query
          description: 'Идентификатор собеседника'
          required: false
          schema:
            type: string
        -
          name: beforeDT
          in: query
          description: Дата\время
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  id: { description: Идентификатор, type: string }
                  pmUser_sid: { description: 'Идентификатор собеседника', type: string }
                  text: { description: 'Текст сообщения', type: string }
                  file_name: { description: 'Имя файла', type: string }
                  dt: { description: Дата, type: string }
                type: object
  /api/XmlTemplate/mPreview:
    post:
      tags:
        - XmlTemplate
      summary: 'Функция предварительного просмотра шаблона'
      operationId: 'XmlTemplate::mPreview_post'
      parameters:
        -
          name: XmlTemplate_id
          in: query
          description: 'Идентификатор шаблона'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: Evn_id
          in: query
          description: 'Идентификатор события'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: EvnXml_id
          in: query
          description: 'Идентификатор документа'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  XmlTemplate_HtmlTemplate: { description: 'HTML разметка', type: string }
                type: object
  /api/XmlTemplate/mLoadGrid:
    post:
      tags:
        - XmlTemplate
      summary: 'Чтение списка шаблонов и папок для грида, из которого производится редактирование и выбор шаблонов для документа'
      operationId: 'XmlTemplate::mLoadGrid_post'
      parameters:
        -
          name: EvnClass_id
          in: query
          description: 'Идентификатор класса события'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: XmlType_id
          in: query
          description: 'Идентификатор типа шаблона'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: XmlTypeKind_id
          in: query
          description: 'Идентификатор вида документа'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSection_id
          in: query
          description: 'Идентификатор отделения'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: XmlTemplateCat_id
          in: query
          description: 'Идентификатор категории шаблонов отображения xml данных'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: showXmlTemplate_id
          in: query
          description: 'Идентификатор шаблона'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: templName
          in: query
          description: 'Строка поиска'
          required: false
          schema:
            type: string
        -
          name: templType
          in: query
          description: 'Тип Поиска'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: start
          in: query
          description: 'Начальный номер записи'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: limit
          in: query
          description: 'Количество возвращаемых записей'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: XmlTemplate_onlyOld
          in: query
          description: 'Признак того, что нужно отобразить только шаблоны, которые нуждаются в пересоздании вручную'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: UslugaComplex_id
          in: query
          description: 'Идентификатор услуги'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { Item_Key: { description: 'Идентифкатор шаблона', type: string }, XmlTemplate_id: { description: 'Шаблоны отображения xml данных, идентификатор', type: integer }, XmlTemplateType_id: { description: 'Тип шаблона, идентификатор', type: integer }, accessType: { description: 'Уровень доступа', type: string }, EvnClass_Name: { description: 'Класс события, наименование', type: string }, Item_Name: { description: 'Название шаблона', type: string }, pmUser_Name: { description: 'Имя автора', type: string }, XmlTemplateScope_Name: { description: 'Область видимости шаблона, наименование', type: string }, Item_updDate: { description: 'Дата обновления шаблона', type: string }, XmlTemplate_Settings: { description: 'Настройки шаблона', type: string }, EvnClass_id: { description: 'класс события, идентификатор', type: integer }, XmlType_id: { description: 'Тип произвольного документа, идентификатор', type: integer }, XmlTemplateScope_id: { description: 'Область видимости шаблона, идентификатор', type: integer }, XmlTemplateScope_eid: { description: "Доступно для редактрования\r\n  *     1 - администраторы системы\r\n  *     2 - Все\r\n  *     3 - ЛПУ автора\r\n  *     4 - Отделение автора\r\n  *     5 - Автор  ", type: string }, Lpu_id: { description: 'справочник ЛПУ, ЛПУ', type: integer }, LpuSection_id: { description: 'Справочник ЛПУ: отделения, идентификатор', type: integer }, pmUser_insID: { description: 'Пользователь создаший шаблон', type: string }, XmlTemplateCat_id: { description: 'Категории шаблонов отображения xml данных, идентификатор', type: integer }, XmlTemplate_Default: { description: 'Признак категории шаблона(если есть XmlTemplateCatDefault_id то 1 иначе 2)', type: string }, Item_Type: { description: 'Тип шаблона', type: string }, XmlTemplate_Preview: { description: 'Информация о шаблоне', type: string }, Item_Path: { description: Путь, type: string } }, type: object } }
                  totalCount: { description: 'Общее количество шаблонов', type: string }
                type: object
  /api/XmlTemplateCatDefault/mGetPath:
    post:
      tags:
        - XmlTemplateCatDefault
      summary: 'Получение идентификатора папки по умолчанию или пути к ближайшей папке, доступной для редактирования'
      operationId: 'XmlTemplateCatDefault::mGetPath_post'
      parameters:
        -
          name: XmlType_id
          in: query
          description: 'Идентификатор типа документа'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: EvnClass_id
          in: query
          description: 'Идентификатор категории документа'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: MedStaffFact_id
          in: query
          description: 'Идентификатор рабочего места'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedService_id
          in: query
          description: 'Идентификатор службы'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: MedPersonal_id
          in: query
          description: 'Идентификатор врача'
          required: false
          schema:
            type: integer
            format: int64
        -
          name: LpuSection_id
          in: query
          description: 'Идентификатор отделения пользователя'
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'JSON response'
          content:
            application/json:
              schema:
                properties:
                  error_code: { description: 'Код ошибки', type: string }
                  data: { description: Данные, type: array, items: { properties: { XmlTemplateCat_id: { description: 'Категории шаблонов отображения xml данных, идентификатор', type: integer }, XmlTemplateCat_Name: { description: 'Категории шаблонов отображения xml данных, наименование категории шаблона', type: string }, accessType: { description: 'Уровень доступа', type: string }, XmlTemplateCat_pid0: { description: 'Категории шаблонов отображения xml данных, идентификатор', type: string }, XmlTemplateCat_Name0: { description: 'Категории шаблонов отображения xml данных, наименование категории шаблона', type: string }, accessType0: { description: 'Уровень доступа', type: string } }, type: object } }
                type: object
tags:
  -
    name: EvnFuncRequest
    description: 'Функциональная диагностика'
  -
    name: EvnPS
    description: 'Карта выбывшего из стационара'
  -
    name: EvnSection
    description: 'Стационар. Движение в отделении'
  -
    name: LpuSection
    description: Отделение
  -
    name: Refbook
    description: 'Методы работы со справочниками'
  -
    name: ReportRun
    description: Отчеты
