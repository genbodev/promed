/** * swFarmacyFunctions.js Функции для работы модуля "Аптека" (в частности АРМ фармацевта и АРМ склада). * @package      Libs * @access       public * @copyright    Copyright © 2011 Swan Ltd. * @author       Salakhov R. * @version      06.12.2011 *//** * Загрузка данных для комбобокса "контрагент" */function loadContragent(form, comboId, params, callback) {	var combo = Ext.getCmp(comboId);	var value = combo.getValue();	combo.getStore().load({		params: params,		callback: function() {			combo.setValue(value);			combo.fireEvent('change', combo);			if (callback) {				callback();			}		}.createDelegate(this)	});}/** * Загрузка данных для комбобокса "МОЛ" */function loadSprMol(form, comboId, contragentId, saveMol) { //saveMol - сохранить ли значение в поле Мол, выставлять в true при начальной загрузке данных при редактировании	var combo = Ext.getCmp(comboId);	var contragent = Ext.getCmp(contragentId);	combo.getStore().load( {		callback: function() {			combo.setValue(combo.getValue());			setFilterMol(combo, contragent.getValue(), saveMol);		}	});}/** * Вспомогательная функция для loadSprMol, установка значения комбобокса */function setFilterMol(combo, Contragent_id, saveMol) {	// Устанавливаем фильтр и если по условиям фильтра найдена только одна запись - то устанавливаем эту запись 			combo.getStore().clearFilter();	combo.lastQuery = '';	var co = 0;	var Mol_id = null;	combo.getStore().filterBy(function(record) {		if ((Contragent_id==record.get('Contragent_id')) && (Contragent_id>0)) {			co++;			Mol_id = record.get('Mol_id');		}		return ((Contragent_id==record.get('Contragent_id')) && (Contragent_id>0));	});	if (co==1) {		combo.setValue(Mol_id);	} else {		if (!saveMol) {			combo.setValue(null);		} else {			//если контрагент первоначальный, восстаноавливаем первоначальный Мол			if (Ext.getCmp('DokDemandEditForm').reader.jsonData[0].Contragent_sid == Contragent_id && Contragent_id > 0)				combo.setValue(Ext.getCmp('DokDemandEditForm').reader.jsonData[0].Mol_sid);		}	}}/** * Определение "свой" контрагент или нет */function isOwnContragent(contragent_data) { //contragent_data - данные контрагента	var result = false;	if (		(contragent_data.OrgFarmacy_id > 0 && contragent_data.OrgFarmacy_id == getGlobalOptions().OrgFarmacy_id) ||		(contragent_data.Lpu_id > 0 && getGlobalOptions().lpu_id && contragent_data.Lpu_id == getGlobalOptions().lpu_id) ||		(contragent_data.LpuSection_id > 0 && swLpuSectionGlobalStore.data && swLpuSectionGlobalStore.data.keys && contragent_data.LpuSection_id.inlist(swLpuSectionGlobalStore.data.keys))	)		result = true;		return result;} /** * Определение типа документа учета (приходный/расходный) */function getDocumentUcMode(contragent_data) { //contragent_data - данные контрагента - поставщика	var mode = 'income';		if (isOwnContragent(contragent_data) && !contragent_data.ContragentType_Code.inlist([1,4]))		mode = 'expenditure';	return mode;}